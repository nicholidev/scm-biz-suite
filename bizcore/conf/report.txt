
@warning sku.barcode: word 'barcode' seems not found in library
@warning object definition: member_wishlist: word 'wishlist' seems not found in library
@warning retail_store_member_gift_card_consume_record.occure_time: word 'occure' seems not found in library
@warning goods.rfid: word 'rfid' seems not found in library
@warning goods.uom: word 'uom' seems not found in library
@warning object definition: wechat_workapp_identify: word 'workapp' seems not found in library
@warning object definition: wechat_miniapp_identify: word 'miniapp' seems not found in library
@warning object definition: keypair_identify: word 'keypair' seems not found in library



=================Execute Report (Model Time 191225T1901) @Tue May 05 13:55:29 CST 2020, 126 objects and 861 fields===========================



 processing: retail_store_country_center


 processing: catalog


 processing: catalog.retail_store_country_center.owner

Info: Add virtual field [catalogs(es)] to <retail_store_country_center>
	catalog.owner


 processing: level_one_category


 processing: level_one_category.catalog.catalog

Info: Add virtual field [level_one_categorys(es)] to <catalog>
	level_one_category.catalog


 processing: level_two_category


 processing: level_two_category.level_one_category.parent_category

Info: Add virtual field [level_two_categorys(es)] to <level_one_category>
	level_two_category.parent_category


 processing: level_three_category


 processing: level_three_category.level_two_category.parent_category

Info: Add virtual field [level_three_categorys(es)] to <level_two_category>
	level_three_category.parent_category


 processing: product


 processing: product.level_three_category.parent_category

Info: Add virtual field [products(es)] to <level_three_category>
	product.parent_category


 processing: sku


 processing: sku.product.product

Info: Add virtual field [skus(es)] to <product>
	sku.product


 processing: retail_store_province_center


 processing: retail_store_province_center.retail_store_country_center.country

Info: Add virtual field [retail_store_province_centers(es)] to <retail_store_country_center>
	retail_store_province_center.country


 processing: province_center_department


 processing: province_center_department.retail_store_province_center.province_center

Info: Add virtual field [province_center_departments(es)] to <retail_store_province_center>
	province_center_department.province_center


 processing: province_center_employee


 processing: province_center_employee.province_center_department.department

Info: Add virtual field [province_center_employees(es)] to <province_center_department>
	province_center_employee.department


 processing: province_center_employee.retail_store_province_center.province_center

Info: Add virtual field [province_center_employees(es)] to <retail_store_province_center>
	province_center_employee.province_center


 processing: retail_store_city_service_center


 processing: retail_store_city_service_center.retail_store_province_center.belongs_to

Info: Add virtual field [retail_store_city_service_centers(es)] to <retail_store_province_center>
	retail_store_city_service_center.belongs_to


 processing: city_partner


 processing: city_partner.retail_store_city_service_center.city_service_center

Info: Add virtual field [city_partners(es)] to <retail_store_city_service_center>
	city_partner.city_service_center


 processing: potential_customer


 processing: potential_customer.retail_store_city_service_center.city_service_center

Info: Add virtual field [potential_customers(es)] to <retail_store_city_service_center>
	potential_customer.city_service_center


 processing: potential_customer.city_partner.city_partner

Info: Add virtual field [potential_customers(es)] to <city_partner>
	potential_customer.city_partner


 processing: potential_customer_contact_person


 processing: potential_customer_contact_person.potential_customer.potential_customer

Info: Add virtual field [potential_customer_contact_persons(es)] to <potential_customer>
	potential_customer_contact_person.potential_customer


 processing: potential_customer_contact


 processing: potential_customer_contact.potential_customer.potential_customer

Info: Add virtual field [potential_customer_contacts(es)] to <potential_customer>
	potential_customer_contact.potential_customer


 processing: potential_customer_contact.city_partner.city_partner

Info: Add virtual field [potential_customer_contacts(es)] to <city_partner>
	potential_customer_contact.city_partner


 processing: potential_customer_contact.potential_customer_contact_person.contact_to

Info: Add virtual field [potential_customer_contacts(es)] to <potential_customer_contact_person>
	potential_customer_contact.contact_to


 processing: city_event


 processing: city_event.retail_store_city_service_center.city_service_center

Info: Add virtual field [city_events(es)] to <retail_store_city_service_center>
	city_event.city_service_center


 processing: event_attendance


 processing: event_attendance.potential_customer.potential_customer

Info: Add virtual field [event_attendances(es)] to <potential_customer>
	event_attendance.potential_customer


 processing: event_attendance.city_event.city_event

Info: Add virtual field [event_attendances(es)] to <city_event>
	event_attendance.city_event


 processing: retail_store


 processing: retail_store.retail_store_country_center.retail_store_country_center

Info: Add virtual field [retail_stores(es)] to <retail_store_country_center>
	retail_store.retail_store_country_center


 processing: retail_store.retail_store_city_service_center.city_service_center

Info: Add virtual field [retail_stores(es)] to <retail_store_city_service_center>
	retail_store.city_service_center


 processing: retail_store.retail_store_creation.creation

Info: Add virtual field [retail_stores(es)] to <retail_store_creation>
	retail_store.creation


 processing: retail_store.retail_store_investment_invitation.investment_invitation

Info: Add virtual field [retail_stores(es)] to <retail_store_investment_invitation>
	retail_store.investment_invitation


 processing: retail_store.retail_store_franchising.franchising

Info: Add virtual field [retail_stores(es)] to <retail_store_franchising>
	retail_store.franchising


 processing: retail_store.retail_store_decoration.decoration

Info: Add virtual field [retail_stores(es)] to <retail_store_decoration>
	retail_store.decoration


 processing: retail_store.retail_store_opening.opening

Info: Add virtual field [retail_stores(es)] to <retail_store_opening>
	retail_store.opening


 processing: retail_store.retail_store_closing.closing

Info: Add virtual field [retail_stores(es)] to <retail_store_closing>
	retail_store.closing


 processing: retail_store_creation


 processing: retail_store_investment_invitation


 processing: retail_store_franchising


 processing: retail_store_decoration


 processing: retail_store_opening


 processing: retail_store_closing


 processing: retail_store_member


 processing: retail_store_member.retail_store_country_center.owner

Info: Add virtual field [retail_store_members(es)] to <retail_store_country_center>
	retail_store_member.owner


 processing: consumer_order


 processing: consumer_order.retail_store_member.consumer

Info: Add virtual field [consumer_orders(es)] to <retail_store_member>
	consumer_order.consumer


 processing: consumer_order.retail_store.store

Info: Add virtual field [consumer_orders(es)] to <retail_store>
	consumer_order.store


 processing: consumer_order_line_item


 processing: consumer_order_line_item.consumer_order.biz_order

Info: Add virtual field [consumer_order_line_items(es)] to <consumer_order>
	consumer_order_line_item.biz_order


 processing: consumer_order_shipping_group


 processing: consumer_order_shipping_group.consumer_order.biz_order

Info: Add virtual field [consumer_order_shipping_groups(es)] to <consumer_order>
	consumer_order_shipping_group.biz_order


 processing: consumer_order_payment_group


 processing: consumer_order_payment_group.consumer_order.biz_order

Info: Add virtual field [consumer_order_payment_groups(es)] to <consumer_order>
	consumer_order_payment_group.biz_order


 processing: consumer_order_price_adjustment


 processing: consumer_order_price_adjustment.consumer_order.biz_order

Info: Add virtual field [consumer_order_price_adjustments(es)] to <consumer_order>
	consumer_order_price_adjustment.biz_order


 processing: retail_store_member_coupon


 processing: retail_store_member_coupon.retail_store_member.owner

Info: Add virtual field [retail_store_member_coupons(es)] to <retail_store_member>
	retail_store_member_coupon.owner


 processing: member_wishlist


 processing: member_wishlist.retail_store_member.owner

Info: Add virtual field [member_wishlists(es)] to <retail_store_member>
	member_wishlist.owner


 processing: member_reward_point


 processing: member_reward_point.retail_store_member.owner

Info: Add virtual field [member_reward_points(es)] to <retail_store_member>
	member_reward_point.owner


 processing: member_reward_point_redemption


 processing: member_reward_point_redemption.retail_store_member.owner

Info: Add virtual field [member_reward_point_redemptions(es)] to <retail_store_member>
	member_reward_point_redemption.owner


 processing: member_wishlist_product


 processing: member_wishlist_product.member_wishlist.owner

Info: Add virtual field [member_wishlist_products(es)] to <member_wishlist>
	member_wishlist_product.owner


 processing: retail_store_member_address


 processing: retail_store_member_address.retail_store_member.owner

Info: Add virtual field [retail_store_member_addresss(es)] to <retail_store_member>
	retail_store_member_address.owner


 processing: retail_store_member_gift_card


 processing: retail_store_member_gift_card.retail_store_member.owner

Info: Add virtual field [retail_store_member_gift_cards(es)] to <retail_store_member>
	retail_store_member_gift_card.owner


 processing: retail_store_member_gift_card_consume_record


 processing: retail_store_member_gift_card_consume_record.retail_store_member_gift_card.owner

Info: Add virtual field [retail_store_member_gift_card_consume_records(es)] to <retail_store_member_gift_card>
	retail_store_member_gift_card_consume_record.owner


 processing: retail_store_member_gift_card_consume_record.consumer_order.biz_order

Info: Add virtual field [retail_store_member_gift_card_consume_records(es)] to <consumer_order>
	retail_store_member_gift_card_consume_record.biz_order


 processing: goods_supplier


 processing: goods_supplier.retail_store_country_center.belong_to

Info: Add virtual field [goods_suppliers(es)] to <retail_store_country_center>
	goods_supplier.belong_to


 processing: supplier_product


 processing: supplier_product.goods_supplier.supplier

Info: Add virtual field [supplier_products(es)] to <goods_supplier>
	supplier_product.supplier


 processing: product_supply_duration


 processing: product_supply_duration.supplier_product.product

Info: Add virtual field [product_supply_durations(es)] to <supplier_product>
	product_supply_duration.product


 processing: supply_order


 processing: supply_order.retail_store_country_center.buyer

Info: Add virtual field [supply_orders(es)] to <retail_store_country_center>
	supply_order.buyer


 processing: supply_order.goods_supplier.seller

Info: Add virtual field [supply_orders(es)] to <goods_supplier>
	supply_order.seller


 processing: supply_order_line_item


 processing: supply_order_line_item.supply_order.biz_order

Info: Add virtual field [supply_order_line_items(es)] to <supply_order>
	supply_order_line_item.biz_order


 processing: supply_order_shipping_group


 processing: supply_order_shipping_group.supply_order.biz_order

Info: Add virtual field [supply_order_shipping_groups(es)] to <supply_order>
	supply_order_shipping_group.biz_order


 processing: supply_order_payment_group


 processing: supply_order_payment_group.supply_order.biz_order

Info: Add virtual field [supply_order_payment_groups(es)] to <supply_order>
	supply_order_payment_group.biz_order


 processing: retail_store_order


 processing: retail_store_order.retail_store.buyer

Info: Add virtual field [retail_store_orders(es)] to <retail_store>
	retail_store_order.buyer


 processing: retail_store_order.retail_store_country_center.seller

Info: Add virtual field [retail_store_orders(es)] to <retail_store_country_center>
	retail_store_order.seller


 processing: retail_store_order_line_item


 processing: retail_store_order_line_item.retail_store_order.biz_order

Info: Add virtual field [retail_store_order_line_items(es)] to <retail_store_order>
	retail_store_order_line_item.biz_order


 processing: retail_store_order_shipping_group


 processing: retail_store_order_shipping_group.retail_store_order.biz_order

Info: Add virtual field [retail_store_order_shipping_groups(es)] to <retail_store_order>
	retail_store_order_shipping_group.biz_order


 processing: retail_store_order_payment_group


 processing: retail_store_order_payment_group.retail_store_order.biz_order

Info: Add virtual field [retail_store_order_payment_groups(es)] to <retail_store_order>
	retail_store_order_payment_group.biz_order


 processing: warehouse


 processing: warehouse.retail_store_country_center.owner

Info: Add virtual field [warehouses(es)] to <retail_store_country_center>
	warehouse.owner


 processing: storage_space


 processing: storage_space.warehouse.warehouse

Info: Add virtual field [storage_spaces(es)] to <warehouse>
	storage_space.warehouse


 processing: smart_pallet


 processing: smart_pallet.warehouse.warehouse

Info: Add virtual field [smart_pallets(es)] to <warehouse>
	smart_pallet.warehouse


 processing: goods_shelf


 processing: goods_shelf.storage_space.storage_space

Info: Add virtual field [goods_shelfs(es)] to <storage_space>
	goods_shelf.storage_space


 processing: goods_shelf.supplier_space.supplier_space

Info: Add virtual field [goods_shelfs(es)] to <supplier_space>
	goods_shelf.supplier_space


 processing: goods_shelf.damage_space.damage_space

Info: Add virtual field [goods_shelfs(es)] to <damage_space>
	goods_shelf.damage_space


 processing: goods_shelf_stock_count


 processing: goods_shelf_stock_count.goods_shelf.shelf

Info: Add virtual field [goods_shelf_stock_counts(es)] to <goods_shelf>
	goods_shelf_stock_count.shelf


 processing: stock_count_issue_track


 processing: stock_count_issue_track.goods_shelf_stock_count.stock_count

Info: Add virtual field [stock_count_issue_tracks(es)] to <goods_shelf_stock_count>
	stock_count_issue_track.stock_count


 processing: goods_allocation


 processing: goods_allocation.goods_shelf.goods_shelf

Info: Add virtual field [goods_allocations(es)] to <goods_shelf>
	goods_allocation.goods_shelf


 processing: goods


 processing: goods.sku.sku

Info: Add virtual field [goodss(es)] to <sku>
	goods.sku


 processing: goods.receiving_space.receiving_space

Info: Add virtual field [goodss(es)] to <receiving_space>
	goods.receiving_space


 processing: goods.goods_allocation.goods_allocation

Info: Add virtual field [goodss(es)] to <goods_allocation>
	goods.goods_allocation


 processing: goods.smart_pallet.smart_pallet

Info: Add virtual field [goodss(es)] to <smart_pallet>
	goods.smart_pallet


 processing: goods.shipping_space.shipping_space

Info: Add virtual field [goodss(es)] to <shipping_space>
	goods.shipping_space


 processing: goods.transport_task.transport_task

Info: Add virtual field [goodss(es)] to <transport_task>
	goods.transport_task


 processing: goods.retail_store.retail_store

Info: Add virtual field [goodss(es)] to <retail_store>
	goods.retail_store


 processing: goods.supply_order.biz_order

Info: Add virtual field [goodss(es)] to <supply_order>
	goods.biz_order


 processing: goods.retail_store_order.retail_store_order

Info: Add virtual field [goodss(es)] to <retail_store_order>
	goods.retail_store_order


 processing: goods_movement


 processing: goods_movement.goods.goods

Info: Add virtual field [goods_movements(es)] to <goods>
	goods_movement.goods


 processing: supplier_space


 processing: supplier_space.warehouse.warehouse

Info: Add virtual field [supplier_spaces(es)] to <warehouse>
	supplier_space.warehouse


 processing: receiving_space


 processing: receiving_space.warehouse.warehouse

Info: Add virtual field [receiving_spaces(es)] to <warehouse>
	receiving_space.warehouse


 processing: shipping_space


 processing: shipping_space.warehouse.warehouse

Info: Add virtual field [shipping_spaces(es)] to <warehouse>
	shipping_space.warehouse


 processing: damage_space


 processing: damage_space.warehouse.warehouse

Info: Add virtual field [damage_spaces(es)] to <warehouse>
	damage_space.warehouse


 processing: warehouse_asset


 processing: warehouse_asset.warehouse.owner

Info: Add virtual field [warehouse_assets(es)] to <warehouse>
	warehouse_asset.owner


 processing: transport_fleet


 processing: transport_fleet.retail_store_country_center.owner

Info: Add virtual field [transport_fleets(es)] to <retail_store_country_center>
	transport_fleet.owner


 processing: transport_truck


 processing: transport_truck.transport_fleet.owner

Info: Add virtual field [transport_trucks(es)] to <transport_fleet>
	transport_truck.owner


 processing: truck_driver


 processing: truck_driver.transport_fleet.belongs_to

Info: Add virtual field [truck_drivers(es)] to <transport_fleet>
	truck_driver.belongs_to


 processing: transport_task


 processing: transport_task.retail_store.end

Info: Add virtual field [transport_tasks(es)] to <retail_store>
	transport_task.end


 processing: transport_task.truck_driver.driver

Info: Add virtual field [transport_tasks(es)] to <truck_driver>
	transport_task.driver


 processing: transport_task.transport_truck.truck

Info: Add virtual field [transport_tasks(es)] to <transport_truck>
	transport_task.truck


 processing: transport_task.transport_fleet.belongs_to

Info: Add virtual field [transport_tasks(es)] to <transport_fleet>
	transport_task.belongs_to


 processing: transport_task_track


 processing: transport_task_track.transport_task.movement

Info: Add virtual field [transport_task_tracks(es)] to <transport_task>
	transport_task_track.movement


 processing: account_set


 processing: account_set.retail_store_country_center.country_center

Info: Add virtual field [account_sets(es)] to <retail_store_country_center>
	account_set.country_center


 processing: account_set.retail_store.retail_store

Info: Add virtual field [account_sets(es)] to <retail_store>
	account_set.retail_store


 processing: account_set.goods_supplier.goods_supplier

Info: Add virtual field [account_sets(es)] to <goods_supplier>
	account_set.goods_supplier


 processing: accounting_subject


 processing: accounting_subject.account_set.account_set

Info: Add virtual field [accounting_subjects(es)] to <account_set>
	accounting_subject.account_set


 processing: accounting_period


 processing: accounting_period.account_set.account_set

Info: Add virtual field [accounting_periods(es)] to <account_set>
	accounting_period.account_set


 processing: accounting_document_type


 processing: accounting_document_type.account_set.accounting_period

Info: Add virtual field [accounting_document_types(es)] to <account_set>
	accounting_document_type.accounting_period


 processing: accounting_document


 processing: accounting_document.accounting_period.accounting_period

Info: Add virtual field [accounting_documents(es)] to <accounting_period>
	accounting_document.accounting_period


 processing: accounting_document.accounting_document_type.document_type

Info: Add virtual field [accounting_documents(es)] to <accounting_document_type>
	accounting_document.document_type


 processing: original_voucher


 processing: original_voucher.accounting_document.belongs_to

Info: Add virtual field [original_vouchers(es)] to <accounting_document>
	original_voucher.belongs_to


 processing: accounting_document_line


 processing: accounting_document_line.accounting_document.belongs_to

Info: Add virtual field [accounting_document_lines(es)] to <accounting_document>
	accounting_document_line.belongs_to


 processing: accounting_document_line.accounting_subject.accounting_subject

Info: Add virtual field [accounting_document_lines(es)] to <accounting_subject>
	accounting_document_line.accounting_subject


 processing: level_one_department


 processing: level_one_department.retail_store_country_center.belongs_to

Info: Add virtual field [level_one_departments(es)] to <retail_store_country_center>
	level_one_department.belongs_to


 processing: level_two_department


 processing: level_two_department.level_one_department.belongs_to

Info: Add virtual field [level_two_departments(es)] to <level_one_department>
	level_two_department.belongs_to


 processing: level_three_department


 processing: level_three_department.level_two_department.belongs_to

Info: Add virtual field [level_three_departments(es)] to <level_two_department>
	level_three_department.belongs_to


 processing: skill_type


 processing: skill_type.retail_store_country_center.company

Info: Add virtual field [skill_types(es)] to <retail_store_country_center>
	skill_type.company


 processing: responsibility_type


 processing: responsibility_type.retail_store_country_center.company

Info: Add virtual field [responsibility_types(es)] to <retail_store_country_center>
	responsibility_type.company


 processing: termination_reason


 processing: termination_reason.retail_store_country_center.company

Info: Add virtual field [termination_reasons(es)] to <retail_store_country_center>
	termination_reason.company


 processing: termination_type


 processing: termination_type.retail_store_country_center.company

Info: Add virtual field [termination_types(es)] to <retail_store_country_center>
	termination_type.company


 processing: occupation_type


 processing: occupation_type.retail_store_country_center.company

Info: Add virtual field [occupation_types(es)] to <retail_store_country_center>
	occupation_type.company


 processing: leave_type


 processing: leave_type.retail_store_country_center.company

Info: Add virtual field [leave_types(es)] to <retail_store_country_center>
	leave_type.company


 processing: salary_grade


 processing: salary_grade.retail_store_country_center.company

Info: Add virtual field [salary_grades(es)] to <retail_store_country_center>
	salary_grade.company


 processing: interview_type


 processing: interview_type.retail_store_country_center.company

Info: Add virtual field [interview_types(es)] to <retail_store_country_center>
	interview_type.company


 processing: training_course_type


 processing: training_course_type.retail_store_country_center.company

Info: Add virtual field [training_course_types(es)] to <retail_store_country_center>
	training_course_type.company


 processing: public_holiday


 processing: public_holiday.retail_store_country_center.company

Info: Add virtual field [public_holidays(es)] to <retail_store_country_center>
	public_holiday.company


 processing: termination


 processing: termination.termination_reason.reason

Info: Add virtual field [terminations(es)] to <termination_reason>
	termination.reason


 processing: termination.termination_type.type

Info: Add virtual field [terminations(es)] to <termination_type>
	termination.type


 processing: view


 processing: employee


 processing: employee.retail_store_country_center.company

Info: Add virtual field [employees(es)] to <retail_store_country_center>
	employee.company


 processing: employee.level_three_department.department

Info: Add virtual field [employees(es)] to <level_three_department>
	employee.department


 processing: employee.occupation_type.occupation

Info: Add virtual field [employees(es)] to <occupation_type>
	employee.occupation


 processing: employee.responsibility_type.responsible_for

Info: Add virtual field [employees(es)] to <responsibility_type>
	employee.responsible_for


 processing: employee.salary_grade.current_salary_grade

Info: Add virtual field [employees(es)] to <salary_grade>
	employee.current_salary_grade


 processing: instructor


 processing: instructor.retail_store_country_center.company

Info: Add virtual field [instructors(es)] to <retail_store_country_center>
	instructor.company


 processing: company_training


 processing: company_training.retail_store_country_center.company

Info: Add virtual field [company_trainings(es)] to <retail_store_country_center>
	company_training.company


 processing: company_training.instructor.instructor

Info: Add virtual field [company_trainings(es)] to <instructor>
	company_training.instructor


 processing: company_training.training_course_type.training_course_type

Info: Add virtual field [company_trainings(es)] to <training_course_type>
	company_training.training_course_type


 processing: scoring


 processing: employee_company_training


 processing: employee_company_training.employee.employee

Info: Add virtual field [employee_company_trainings(es)] to <employee>
	employee_company_training.employee


 processing: employee_company_training.company_training.training

Info: Add virtual field [employee_company_trainings(es)] to <company_training>
	employee_company_training.training


 processing: employee_company_training.scoring.scoring

Info: Add virtual field [employee_company_trainings(es)] to <scoring>
	employee_company_training.scoring


 processing: employee_skill


 processing: employee_skill.employee.employee

Info: Add virtual field [employee_skills(es)] to <employee>
	employee_skill.employee


 processing: employee_skill.skill_type.skill_type

Info: Add virtual field [employee_skills(es)] to <skill_type>
	employee_skill.skill_type


 processing: employee_performance


 processing: employee_performance.employee.employee

Info: Add virtual field [employee_performances(es)] to <employee>
	employee_performance.employee


 processing: employee_work_experience


 processing: employee_work_experience.employee.employee

Info: Add virtual field [employee_work_experiences(es)] to <employee>
	employee_work_experience.employee


 processing: employee_leave


 processing: employee_leave.employee.who

Info: Add virtual field [employee_leaves(es)] to <employee>
	employee_leave.who


 processing: employee_leave.leave_type.type

Info: Add virtual field [employee_leaves(es)] to <leave_type>
	employee_leave.type


 processing: employee_interview


 processing: employee_interview.employee.employee

Info: Add virtual field [employee_interviews(es)] to <employee>
	employee_interview.employee


 processing: employee_interview.interview_type.interview_type

Info: Add virtual field [employee_interviews(es)] to <interview_type>
	employee_interview.interview_type


 processing: employee_attendance


 processing: employee_attendance.employee.employee

Info: Add virtual field [employee_attendances(es)] to <employee>
	employee_attendance.employee


 processing: employee_qualifier


 processing: employee_qualifier.employee.employee

Info: Add virtual field [employee_qualifiers(es)] to <employee>
	employee_qualifier.employee


 processing: employee_education


 processing: employee_education.employee.employee

Info: Add virtual field [employee_educations(es)] to <employee>
	employee_education.employee


 processing: employee_award


 processing: employee_award.employee.employee

Info: Add virtual field [employee_awards(es)] to <employee>
	employee_award.employee


 processing: employee_salary_sheet


 processing: employee_salary_sheet.employee.employee

Info: Add virtual field [employee_salary_sheets(es)] to <employee>
	employee_salary_sheet.employee


 processing: employee_salary_sheet.salary_grade.current_salary_grade

Info: Add virtual field [employee_salary_sheets(es)] to <salary_grade>
	employee_salary_sheet.current_salary_grade


 processing: employee_salary_sheet.paying_off.paying_off

Info: Add virtual field [employee_salary_sheets(es)] to <paying_off>
	employee_salary_sheet.paying_off


 processing: paying_off


 processing: paying_off.employee.paid_for

Info: Add virtual field [paying_offs(es)] to <employee>
	paying_off.paid_for


**************************************************

meta{name=retail_store_country_center}
retail_store_country_center{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('双链小超中国国运营中心|双链小超美国国运营中心|双链小超日本国运营中心|双链小超泰国国运营中心'), verb: false, required: true,type:string;
		string	service_number('4000-800-'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		string_url	web_site('https://www.doublechaintech.com/'), verb: false, required: true,type:string_url;
		string	address('四川省成都市天府新区双链大厦'), verb: false, required: true,type:string;
		string	operated_by('双链集团'), verb: false, required: true,type:string;
		string	legal_representative('张喜来|张喜来'), verb: false, required: true,type:string;
		string	description('中国中心正式成立，恭喜恭喜'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(24){
		catalogList	owner(产品管理)--owner;
		retailStoreProvinceCenterList	country(组织机构)--country;
		retailStoreList	retail_store_country_center(加盟管理)--retail_store_country_center;
		retailStoreMemberList	owner(会员管理)--owner;
		goodsSupplierList	belong_to(供应管理)--belong_to;
		supplyOrderList	buyer(供应管理)--buyer;
		retailStoreOrderList	seller(销售管理)--seller;
		warehouseList	owner(仓配运一体化)--owner;
		transportFleetList	owner(仓配运一体化)--owner;
		accountSetList	country_center(财务管理)--country_center;
		levelOneDepartmentList	belongs_to(组织机构)--belongs_to;
		skillTypeList	company(人力资源)--company;
		responsibilityTypeList	company(人力资源)--company;
		terminationReasonList	company(人力资源)--company;
		terminationTypeList	company(人力资源)--company;
		occupationTypeList	company(人力资源)--company;
		leaveTypeList	company(人力资源)--company;
		salaryGradeList	company(人力资源)--company;
		interviewTypeList	company(人力资源)--company;
		trainingCourseTypeList	company(人力资源)--company;
		publicHolidayList	company(人力资源)--company;
		employeeList	company(人力资源)--company;
		instructorList	company(人力资源)--company;
		companyTrainingList	company(人力资源)--company;
	}
} depth=0; isRoot = true

meta{name=catalog, vg4owner=产品管理}
catalog{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true,type:string;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: catalogList,type:retail_store_country_center;
		int	sub_count('10'), verb: false, required: true,type:int;
		money	amount('$10.11'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		levelOneCategoryList	catalog(__no_group)--catalog;
	}
} depth=1; isRoot = false

meta{name=level_one_category}
level_one_category{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		catalog	catalog('$(object)'), verb: false, required: true, referenceBy: levelOneCategoryList,type:catalog;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		levelTwoCategoryList	parent_category(__no_group)--parent_category;
	}
} depth=2; isRoot = false

meta{name=level_two_category}
level_two_category{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		level_one_category	parent_category('$(object)'), verb: false, required: true, referenceBy: levelTwoCategoryList,type:level_one_category;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		levelThreeCategoryList	parent_category(__no_group)--parent_category;
	}
} depth=3; isRoot = false

meta{name=level_three_category}
level_three_category{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		level_two_category	parent_category('$(object)'), verb: false, required: true, referenceBy: levelThreeCategoryList,type:level_two_category;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		productList	parent_category(__no_group)--parent_category;
	}
} depth=4; isRoot = false

meta{name=product}
product{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('啤酒|可乐|久久鸭'), verb: false, required: true,type:string;
		level_three_category	parent_category('$(object)'), verb: false, required: true, referenceBy: productList,type:level_three_category;
		string	origin('四川|广东|江苏|安徽|日本|法国'), verb: false, required: true,type:string;
		string	remark('可口可乐，销售百年的糖水，获得了全世界额青睐'), verb: false, required: true,type:string;
		string	brand('品牌品牌品牌品牌品牌品牌品牌品牌品牌品牌品牌品'), verb: false, required: true,type:string;
		string_image	picture('this is a looooooooooog.jpg'), verb: false, required: true,type:string_image;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		skuList	product(__no_group)--product;
	}
} depth=5; isRoot = false

meta{name=sku}
sku{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('可乐-大罐的'), verb: false, required: true,type:string;
		string	size('大|中|小'), verb: false, required: true,type:string;
		product	product('$(object)'), verb: false, required: true, referenceBy: skuList,type:product;
		string	barcode('TM00000000001'), verb: false, required: true,type:string;
		string	package_type('包装类型'), verb: false, required: true,type:string;
		string	net_content('包装数量等信息,包装数量等信息,包装数量等信息'), verb: false, required: true,type:string;
		money	price('$1323.33'), verb: false, required: true,type:money;
		string_image	picture('coco.jpg'), verb: false, required: true,type:string_image;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsList	sku(__no_group)--sku;
	}
} depth=6; isRoot = false

meta{name=retail_store_province_center, vg4country=组织机构}
retail_store_province_center{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('双链小超四川省运营中心|双链小超北京运营中心'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		retail_store_country_center	country('$(object)'), verb: false, required: true, referenceBy: retailStoreProvinceCenterList,type:retail_store_country_center;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		provinceCenterDepartmentList	province_center(__no_group)--province_center;
		provinceCenterEmployeeList	province_center(__no_group)--province_center;
		retailStoreCityServiceCenterList	belongs_to(__no_group)--belongs_to;
	}
} depth=1; isRoot = false

meta{name=province_center_department, features=setting}
province_center_department{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('供应链部|采购部|管理部|财务部|法务部|市场部|人力资源部'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		retail_store_province_center	province_center('$(object)'), verb: false, required: true, referenceBy: provinceCenterDepartmentList,type:retail_store_province_center;
		string	manager('刘强|王德宏'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		provinceCenterEmployeeList	department(__no_group)--department;
	}
} depth=2; isRoot = false

meta{name=province_center_employee}
province_center_employee{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('刘强|王德宏'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13999998888'), verb: false, required: true,type:string_china_mobile_phone;
		string_email	email('wangdehong@yatang.cn|liuqiang@yatang.cn'), verb: false, required: true,type:string_email;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		province_center_department	department('$(object)'), verb: false, required: true, referenceBy: provinceCenterEmployeeList,type:province_center_department;
		retail_store_province_center	province_center('$(object)'), verb: false, required: true, referenceBy: provinceCenterEmployeeList,type:retail_store_province_center;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=retail_store_city_service_center}
retail_store_city_service_center{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('双链小超成都办事处|双链小超绵阳办事处|双链小超巴中办事处'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		retail_store_province_center	belongs_to('$(object)'), verb: false, required: true, referenceBy: retailStoreCityServiceCenterList,type:retail_store_province_center;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		cityPartnerList	city_service_center(__no_group)--city_service_center;
		potentialCustomerList	city_service_center(__no_group)--city_service_center;
		cityEventList	city_service_center(__no_group)--city_service_center;
		retailStoreList	city_service_center(__no_group)--city_service_center;
	}
} depth=2; isRoot = false

meta{name=city_partner}
city_partner{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('曾倩|黄风格|郭超'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true,type:string_china_mobile_phone;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: cityPartnerList,type:retail_store_city_service_center;
		string	description('负责开拓市场，具有极强的开拓能力'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		potentialCustomerList	city_partner(__no_group)--city_partner;
		potentialCustomerContactList	city_partner(__no_group)--city_partner;
	}
} depth=3; isRoot = false

meta{name=potential_customer}
potential_customer{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('曾倩|黄风格|郭超'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true,type:string_china_mobile_phone;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: potentialCustomerList,type:retail_store_city_service_center;
		city_partner	city_partner('$(object)'), verb: false, required: true, referenceBy: potentialCustomerList,type:city_partner;
		string	description('负责开拓市场，具有极强的开拓能力'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		potentialCustomerContactPersonList	potential_customer(__no_group)--potential_customer;
		potentialCustomerContactList	potential_customer(__no_group)--potential_customer;
		eventAttendanceList	potential_customer(__no_group)--potential_customer;
	}
} depth=4; isRoot = false

meta{name=potential_customer_contact_person}
potential_customer_contact_person{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('赵先生'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true,type:string_china_mobile_phone;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactPersonList,type:potential_customer;
		string	description('这人在决策中战友较大的权重，密切观察中.....'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		potentialCustomerContactList	contact_to(__no_group)--contact_to;
	}
} depth=5; isRoot = false

meta{name=potential_customer_contact}
potential_customer_contact{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('和连载客户的联系记录'), verb: false, required: true,type:string;
		date	contact_date('2016-09-09'), verb: false, required: true,type:date;
		string	contact_method('电话|短信|登门拜访|活动聊天'), verb: false, required: true,type:string;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList,type:potential_customer;
		city_partner	city_partner('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList,type:city_partner;
		potential_customer_contact_person	contact_to('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList,type:potential_customer_contact_person;
		string	description('转化希望很大'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=city_event}
city_event{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('小超见面会|双链小超说明会'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true,type:string_china_mobile_phone;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: cityEventList,type:retail_store_city_service_center;
		string	description('给大家讲解小超的发展蓝图'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		eventAttendanceList	city_event(__no_group)--city_event;
	}
} depth=3; isRoot = false

meta{name=event_attendance}
event_attendance{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('小超见面会参加信息'), verb: false, required: true,type:string;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: eventAttendanceList,type:potential_customer;
		city_event	city_event('$(object)'), verb: false, required: true, referenceBy: eventAttendanceList,type:city_event;
		string	description('体会不错，考虑加盟'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=retail_store, vg4retail_store_country_center=加盟管理}
retail_store{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('中和社区小超|华阳社区小超|大源社区小超'), verb: false, required: true,type:string;
		string	telephone('028 87654321'), verb: false, required: true,type:string;
		string	owner('吕刚'), verb: false, required: true,type:string;
		retail_store_country_center	retail_store_country_center('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_country_center;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_city_service_center;
		retail_store_creation	creation('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_creation;
		retail_store_investment_invitation	investment_invitation('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_investment_invitation;
		retail_store_franchising	franchising('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_franchising;
		retail_store_decoration	decoration('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_decoration;
		retail_store_opening	opening('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_opening;
		retail_store_closing	closing('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_closing;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		string	description('啤酒饮料矿泉水，香肠瓜子方便面, 请让一让'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(5){
		consumerOrderList	store(__no_group)--store;
		retailStoreOrderList	buyer(__no_group)--buyer;
		goodsList	retail_store(__no_group)--retail_store;
		transportTaskList	end(__no_group)--end;
		accountSetList	retail_store(__no_group)--retail_store;
	}
} depth=3; isRoot = false

meta{name=retail_store_creation}
retail_store_creation{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('已经建好了'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	creation(__no_group)--creation;
	}
} depth=0; isRoot = true

meta{name=retail_store_investment_invitation}
retail_store_investment_invitation{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('欢迎前来咨询'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	investment_invitation(__no_group)--investment_invitation;
	}
} depth=0; isRoot = true

meta{name=retail_store_franchising}
retail_store_franchising{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('谢谢加盟'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	franchising(__no_group)--franchising;
	}
} depth=0; isRoot = true

meta{name=retail_store_decoration}
retail_store_decoration{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('装修'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	decoration(__no_group)--decoration;
	}
} depth=0; isRoot = true

meta{name=retail_store_opening}
retail_store_opening{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('装修'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	opening(__no_group)--opening;
	}
} depth=0; isRoot = true

meta{name=retail_store_closing}
retail_store_closing{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('关闭'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	closing(__no_group)--closing;
	}
} depth=0; isRoot = true

meta{name=retail_store_member, vg4owner=会员管理}
retail_store_member{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('李亚青'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile_phone('18099887766'), verb: false, required: true,type:string_china_mobile_phone;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberList,type:retail_store_country_center;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(7){
		consumerOrderList	consumer(__no_group)--consumer;
		retailStoreMemberCouponList	owner(__no_group)--owner;
		memberWishlistList	owner(__no_group)--owner;
		memberRewardPointList	owner(__no_group)--owner;
		memberRewardPointRedemptionList	owner(__no_group)--owner;
		retailStoreMemberAddressList	owner(__no_group)--owner;
		retailStoreMemberGiftCardList	owner(__no_group)--owner;
	}
} depth=1; isRoot = false

meta{name=consumer_order}
consumer_order{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('消费订单'), verb: false, required: true,type:string;
		retail_store_member	consumer('$(object)'), verb: false, required: true, referenceBy: consumerOrderList,type:retail_store_member;
		retail_store	store('$(object)'), verb: false, required: true, referenceBy: consumerOrderList,type:retail_store;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(5){
		consumerOrderLineItemList	biz_order(__no_group)--biz_order;
		consumerOrderShippingGroupList	biz_order(__no_group)--biz_order;
		consumerOrderPaymentGroupList	biz_order(__no_group)--biz_order;
		consumerOrderPriceAdjustmentList	biz_order(__no_group)--biz_order;
		retailStoreMemberGiftCardConsumeRecordList	biz_order(__no_group)--biz_order;
	}
} depth=4; isRoot = false

meta{name=consumer_order_line_item}
consumer_order_line_item{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderLineItemList,type:consumer_order;
		string	sku_id('SKU'), verb: false, required: true,type:string;
		string	sku_name('大瓶可乐'), verb: false, required: true,type:string;
		money	price('$5.97'), verb: false, required: true,type:money;
		double	quantity('1000.00'), verb: false, required: true,type:double;
		money	amount('$9999.99'), verb: false, required: true,type:money;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=consumer_order_shipping_group}
consumer_order_shipping_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('送货到刘强家'), verb: false, required: true,type:string;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderShippingGroupList,type:consumer_order;
		money	amount('$599.99'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=consumer_order_payment_group}
consumer_order_payment_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('信用卡|支付宝|微信支付'), verb: false, required: true,type:string;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderPaymentGroupList,type:consumer_order;
		string	card_number('4111 1111 1111 - '), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=consumer_order_price_adjustment}
consumer_order_price_adjustment{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('端午促销'), verb: false, required: true,type:string;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderPriceAdjustmentList,type:consumer_order;
		money	amount('$599.99'), verb: false, required: true,type:money;
		string	provider('供货商|小超老板|广告赞助'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=retail_store_member_coupon}
retail_store_member_coupon{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('优惠券'), verb: false, required: true,type:string;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberCouponList,type:retail_store_member;
		string	number('CP00001'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=member_wishlist}
member_wishlist{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('每周购买清单|每月购买清单'), verb: false, required: true,type:string;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberWishlistList,type:retail_store_member;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		memberWishlistProductList	owner(__no_group)--owner;
	}
} depth=2; isRoot = false

meta{name=member_reward_point}
member_reward_point{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('购买积分|每月购买清单'), verb: false, required: true,type:string;
		int	point('20'), verb: false, required: true,type:int;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberRewardPointList,type:retail_store_member;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=member_reward_point_redemption}
member_reward_point_redemption{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('积分换锅|积分换刀'), verb: false, required: true,type:string;
		int	point('20'), verb: false, required: true,type:int;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberRewardPointRedemptionList,type:retail_store_member;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=member_wishlist_product}
member_wishlist_product{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('农夫山泉|利箭口香糖'), verb: false, required: true,type:string;
		member_wishlist	owner('$(object)'), verb: false, required: true, referenceBy: memberWishlistProductList,type:member_wishlist;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=retail_store_member_address}
retail_store_member_address{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('家里|办公室|出差临时地址'), verb: false, required: true,type:string;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberAddressList,type:retail_store_member;
		string_china_mobile_phone	mobile_phone('18099887766'), verb: false, required: true,type:string_china_mobile_phone;
		string	address('四川省成都市科学城北路33号'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=retail_store_member_gift_card}
retail_store_member_gift_card{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('礼品卡'), verb: false, required: true,type:string;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardList,type:retail_store_member;
		string	number('CP00001'), verb: false, required: true,type:string;
		money	remain('$213.99'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreMemberGiftCardConsumeRecordList	owner(__no_group)--owner;
	}
} depth=2; isRoot = false

meta{name=retail_store_member_gift_card_consume_record}
retail_store_member_gift_card_consume_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		date_past	occure_time('past()'), verb: false, required: true,type:date_past;
		retail_store_member_gift_card	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardConsumeRecordList,type:retail_store_member_gift_card;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardConsumeRecordList,type:consumer_order;
		string	number('GF00001'), verb: false, required: true,type:string;
		money	amount('$20.99'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=goods_supplier, vg4belong_to=供应管理}
goods_supplier{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('宝洁|中粮|福临门'), verb: false, required: true,type:string;
		string	supply_product('洗护用品|食品|植物油'), verb: false, required: true,type:string;
		retail_store_country_center	belong_to('$(object)'), verb: false, required: true, referenceBy: goodsSupplierList,type:retail_store_country_center;
		string_china_mobile_phone	contact_number('18677889999'), verb: false, required: true,type:string_china_mobile_phone;
		string	description('啤酒饮料矿泉水，香肠瓜子方便面都提供'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		supplierProductList	supplier(__no_group)--supplier;
		supplyOrderList	seller(__no_group)--seller;
		accountSetList	goods_supplier(__no_group)--goods_supplier;
	}
} depth=1; isRoot = false

meta{name=supplier_product}
supplier_product{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	product_name('黑人牙膏'), verb: false, required: true,type:string;
		string	product_description('最好的黑人牙膏，只卖3块喽'), verb: false, required: true,type:string;
		string	product_unit('件|公斤|米'), verb: false, required: true,type:string;
		goods_supplier	supplier('$(object)'), verb: false, required: true, referenceBy: supplierProductList,type:goods_supplier;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		productSupplyDurationList	product(__no_group)--product;
	}
} depth=2; isRoot = false

meta{name=product_supply_duration}
product_supply_duration{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		int	quantity('100|200|500'), verb: false, required: true,type:int;
		string	duration('现货|两天|三天|一周'), verb: false, required: true,type:string;
		money	price('$9999.99'), verb: false, required: true,type:money;
		supplier_product	product('$(object)'), verb: false, required: true, referenceBy: productSupplyDurationList,type:supplier_product;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=supply_order, vg4buyer=供应管理}
supply_order{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		retail_store_country_center	buyer('$(object)'), verb: false, required: true, referenceBy: supplyOrderList,type:retail_store_country_center;
		goods_supplier	seller('$(object)'), verb: false, required: true, referenceBy: supplyOrderList,type:goods_supplier;
		string	title('双链给供货商下的订单'), verb: false, required: true,type:string;
		money	total_amount('$3000000000.88'), verb: false, required: true,type:money;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		supplyOrderLineItemList	biz_order(__no_group)--biz_order;
		supplyOrderShippingGroupList	biz_order(__no_group)--biz_order;
		supplyOrderPaymentGroupList	biz_order(__no_group)--biz_order;
		goodsList	biz_order(__no_group)--biz_order;
	}
} depth=2; isRoot = false

meta{name=supply_order_line_item}
supply_order_line_item{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderLineItemList,type:supply_order;
		string	sku_id('SKU'), verb: false, required: true,type:string;
		string	sku_name('大瓶可乐'), verb: false, required: true,type:string;
		money	amount('$5.97'), verb: false, required: true,type:money;
		int	quantity('10000'), verb: false, required: true,type:int;
		string	unit_of_measurement('件|公斤|米'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=supply_order_shipping_group}
supply_order_shipping_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('送货到双链成都2号仓'), verb: false, required: true,type:string;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderShippingGroupList,type:supply_order;
		money	amount('$5.99'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=supply_order_payment_group}
supply_order_payment_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('付款办法'), verb: false, required: true,type:string;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderPaymentGroupList,type:supply_order;
		string	card_number('4111 1111 1111 - '), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=retail_store_order, vg4seller=销售管理}
retail_store_order{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		retail_store	buyer('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderList,type:retail_store;
		retail_store_country_center	seller('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderList,type:retail_store_country_center;
		string	title('双链小超给双链供应链下的订单'), verb: false, required: true,type:string;
		money	total_amount('$3000000000.88'), verb: false, required: true,type:money;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		retailStoreOrderLineItemList	biz_order(__no_group)--biz_order;
		retailStoreOrderShippingGroupList	biz_order(__no_group)--biz_order;
		retailStoreOrderPaymentGroupList	biz_order(__no_group)--biz_order;
		goodsList	retail_store_order(__no_group)--retail_store_order;
	}
} depth=4; isRoot = false

meta{name=retail_store_order_line_item}
retail_store_order_line_item{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderLineItemList,type:retail_store_order;
		string	sku_id('SKU'), verb: false, required: true,type:string;
		string	sku_name('大瓶可乐'), verb: false, required: true,type:string;
		money	amount('$3.97'), verb: false, required: true,type:money;
		int	quantity('10000'), verb: false, required: true,type:int;
		string	unit_of_measurement('件|公斤|米'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=retail_store_order_shipping_group}
retail_store_order_shipping_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('送货到双链中和社区店'), verb: false, required: true,type:string;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderShippingGroupList,type:retail_store_order;
		money	amount('$5.99'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=retail_store_order_payment_group}
retail_store_order_payment_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('付款办法'), verb: false, required: true,type:string;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderPaymentGroupList,type:retail_store_order;
		string	card_number('4111 1111 1111 - '), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=warehouse, vg4owner=仓配运一体化}
warehouse{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('187672平方米'), verb: false, required: true,type:string;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: warehouseList,type:retail_store_country_center;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(7){
		storageSpaceList	warehouse(__no_group)--warehouse;
		smartPalletList	warehouse(__no_group)--warehouse;
		supplierSpaceList	warehouse(__no_group)--warehouse;
		receivingSpaceList	warehouse(__no_group)--warehouse;
		shippingSpaceList	warehouse(__no_group)--warehouse;
		damageSpaceList	warehouse(__no_group)--warehouse;
		warehouseAssetList	owner(__no_group)--owner;
	}
} depth=1; isRoot = false

meta{name=storage_space}
storage_space{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号存货区'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: storageSpaceList,type:warehouse;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsShelfList	storage_space(__no_group)--storage_space;
	}
} depth=2; isRoot = false

meta{name=smart_pallet}
smart_pallet{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号移动区域，比如过道，货运通道等'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: smartPalletList,type:warehouse;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsList	smart_pallet(__no_group)--smart_pallet;
	}
} depth=2; isRoot = false

meta{name=goods_shelf}
goods_shelf{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号存货区货架'), verb: false, required: true,type:string;
		storage_space	storage_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList,type:storage_space;
		supplier_space	supplier_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList,type:supplier_space;
		damage_space	damage_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList,type:damage_space;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		goodsShelfStockCountList	shelf(__no_group)--shelf;
		goodsAllocationList	goods_shelf(__no_group)--goods_shelf;
	}
} depth=3; isRoot = false

meta{name=goods_shelf_stock_count}
goods_shelf_stock_count{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('每日盘点|每周盘点|每月盘点|年终盘点'), verb: false, required: true,type:string;
		date	count_time('2017-04-01'), verb: false, required: true,type:date;
		string	summary('使用先进的rfid技术，没有任何错误'), verb: false, required: true,type:string;
		goods_shelf	shelf('$(object)'), verb: false, required: true, referenceBy: goodsShelfStockCountList,type:goods_shelf;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		stockCountIssueTrackList	stock_count(__no_group)--stock_count;
	}
} depth=4; isRoot = false

meta{name=stock_count_issue_track}
stock_count_issue_track{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('盘点差错'), verb: false, required: true,type:string;
		date	count_time('2017-04-01'), verb: false, required: true,type:date;
		string	summary('发现错误已经修正完成'), verb: false, required: true,type:string;
		goods_shelf_stock_count	stock_count('$(object)'), verb: false, required: true, referenceBy: stockCountIssueTrackList,type:goods_shelf_stock_count;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=goods_allocation}
goods_allocation{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号存货区货架20号货位'), verb: false, required: true,type:string;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		goods_shelf	goods_shelf('$(object)'), verb: false, required: true, referenceBy: goodsAllocationList,type:goods_shelf;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsList	goods_allocation(__no_group)--goods_allocation;
	}
} depth=4; isRoot = false

meta{name=goods}
goods{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('可口可乐'), verb: false, required: true,type:string;
		string	rfid('RF99192'), verb: false, required: true,type:string;
		string	uom('件|箱'), verb: false, required: true,type:string;
		int	max_package('10'), verb: false, required: true,type:int;
		date	expire_time('2019-09-09'), verb: false, required: true,type:date;
		sku	sku('$(object)'), verb: false, required: true, referenceBy: goodsList,type:sku;
		receiving_space	receiving_space('$(object)'), verb: false, required: true, referenceBy: goodsList,type:receiving_space;
		goods_allocation	goods_allocation('$(object)'), verb: false, required: true, referenceBy: goodsList,type:goods_allocation;
		smart_pallet	smart_pallet('$(object)'), verb: false, required: true, referenceBy: goodsList,type:smart_pallet;
		shipping_space	shipping_space('$(object)'), verb: false, required: true, referenceBy: goodsList,type:shipping_space;
		transport_task	transport_task('$(object)'), verb: false, required: true, referenceBy: goodsList,type:transport_task;
		retail_store	retail_store('$(object)'), verb: false, required: true, referenceBy: goodsList,type:retail_store;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: goodsList,type:supply_order;
		retail_store_order	retail_store_order('$(object)'), verb: false, required: true, referenceBy: goodsList,type:retail_store_order;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsMovementList	goods(__no_group)--goods;
	}
} depth=7; isRoot = false

meta{name=goods_movement}
goods_movement{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		date_time	move_time('2017-08-09T09:09:09'), verb: false, required: true,type:date_time;
		string	facility('仓库货位|卡车|小超'), verb: false, required: true,type:string;
		string	facility_id('仓库货位|卡车|小超'), verb: false, required: true,type:string;
		string	from_ip('192.168.20.1'), verb: false, required: true,type:string;
		string	user_agent('Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405'), verb: false, required: true,type:string;
		string	session_id('FTYUIOLJYT^*(PLKJYT)'), verb: false, required: true,type:string;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		goods	goods('$(object)'), verb: false, required: true, referenceBy: goodsMovementList,type:goods;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{name=supplier_space}
supplier_space{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号供货商独立管理区'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: supplierSpaceList,type:warehouse;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsShelfList	supplier_space(__no_group)--supplier_space;
	}
} depth=2; isRoot = false

meta{name=receiving_space}
receiving_space{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号仓库卸货区'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	description('每个收货区可以供一辆车卸货'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: receivingSpaceList,type:warehouse;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsList	receiving_space(__no_group)--receiving_space;
	}
} depth=2; isRoot = false

meta{name=shipping_space}
shipping_space{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号装货区'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: shippingSpaceList,type:warehouse;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		string	description('每个收货区可以供一辆车装货'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsList	shipping_space(__no_group)--shipping_space;
	}
} depth=2; isRoot = false

meta{name=damage_space}
damage_space{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号仓库损坏货物堆放区'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: damageSpaceList,type:warehouse;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsShelfList	damage_space(__no_group)--damage_space;
	}
} depth=2; isRoot = false

meta{name=warehouse_asset}
warehouse_asset{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('叉车|托盘|传送带备件'), verb: false, required: true,type:string;
		string	position('备用件存放区设备库房'), verb: false, required: true,type:string;
		warehouse	owner('$(object)'), verb: false, required: true, referenceBy: warehouseAssetList,type:warehouse;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=transport_fleet, vg4owner=仓配运一体化}
transport_fleet{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('双链先锋号车队'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: transportFleetList,type:retail_store_country_center;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		transportTruckList	owner(__no_group)--owner;
		truckDriverList	belongs_to(__no_group)--belongs_to;
		transportTaskList	belongs_to(__no_group)--belongs_to;
	}
} depth=1; isRoot = false

meta{name=transport_truck}
transport_truck{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('运货卡车'), verb: false, required: true,type:string;
		string	plate_number('川AK5'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	vehicle_license_number('VL9198'), verb: false, required: true,type:string;
		string	engine_number('EN00102'), verb: false, required: true,type:string;
		date	make_date('2010-09-09'), verb: false, required: true,type:date;
		string	mileage('100万公里'), verb: false, required: true,type:string;
		string	body_color('红色|蓝色|白色|灰色|银色|黑色'), verb: false, required: true,type:string;
		transport_fleet	owner('$(object)'), verb: false, required: true, referenceBy: transportTruckList,type:transport_fleet;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		transportTaskList	truck(__no_group)--truck;
	}
} depth=2; isRoot = false

meta{name=truck_driver}
truck_driver{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('运货卡车司机'), verb: false, required: true,type:string;
		string	driver_license_number('5109 9887 733'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_number('18777778888'), verb: false, required: true,type:string_china_mobile_phone;
		transport_fleet	belongs_to('$(object)'), verb: false, required: true, referenceBy: truckDriverList,type:transport_fleet;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		transportTaskList	driver(__no_group)--driver;
	}
} depth=2; isRoot = false

meta{name=transport_task}
transport_task{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('货运记录'), verb: false, required: true,type:string;
		string	start('双链二号仓'), verb: false, required: true,type:string;
		date_past	begin_time('past()'), verb: false, required: true,type:date_past;
		retail_store	end('$(object)'), verb: false, required: true, referenceBy: transportTaskList,type:retail_store;
		truck_driver	driver('$(object)'), verb: false, required: true, referenceBy: transportTaskList,type:truck_driver;
		transport_truck	truck('$(object)'), verb: false, required: true, referenceBy: transportTaskList,type:transport_truck;
		transport_fleet	belongs_to('$(object)'), verb: false, required: true, referenceBy: transportTaskList,type:transport_fleet;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		goodsList	transport_task(__no_group)--transport_task;
		transportTaskTrackList	movement(__no_group)--movement;
	}
} depth=4; isRoot = false

meta{name=transport_task_track}
transport_task_track{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		date_past	track_time('past()'), verb: false, required: true,type:date_past;
		double	latitude('30.912929'), verb: false, required: true,type:double;
		double	longitude('104.121232'), verb: false, required: true,type:double;
		transport_task	movement('$(object)'), verb: false, required: true, referenceBy: transportTaskTrackList,type:transport_task;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4country_center=财务管理, name=account_set}
account_set{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('账套2017|账套2018|账套2019'), verb: false, required: true,type:string;
		string	year_set('2017年|2018年|2019年'), verb: false, required: true,type:string;
		date	effective_date('2017-05-28'), verb: false, required: true,type:date;
		string	accounting_system('企业会计制度|小企业会计制度|合伙制会计制度'), verb: false, required: true,type:string;
		string	domestic_currency_code('RMB|USD'), verb: false, required: true,type:string;
		string	domestic_currency_name('人民币|美元'), verb: false, required: true,type:string;
		string	opening_bank('招商银行|工商银行'), verb: false, required: true,type:string;
		string	account_number('3326 5805 0548 85'), verb: false, required: true,type:string;
		retail_store_country_center	country_center('$(object)'), verb: false, required: true, referenceBy: accountSetList,type:retail_store_country_center;
		retail_store	retail_store('$(object)'), verb: false, required: true, referenceBy: accountSetList,type:retail_store;
		goods_supplier	goods_supplier('$(object)'), verb: false, required: true, referenceBy: accountSetList,type:goods_supplier;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		accountingSubjectList	account_set(__no_group)--account_set;
		accountingPeriodList	account_set(__no_group)--account_set;
		accountingDocumentTypeList	accounting_period(__no_group)--accounting_period;
	}
} depth=4; isRoot = false

meta{name=accounting_subject}
accounting_subject{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	accounting_subject_code('AS9999'), verb: false, required: true,type:string;
		string	accounting_subject_name('银行存款'), verb: false, required: true,type:string;
		int	accounting_subject_class_code('1|2|3|4|5|6'), verb: false, required: true,type:int;
		string	accounting_subject_class_name('资产类|负债类|共同类|所有者权益类|成本类|损益类'), verb: false, required: true,type:string;
		account_set	account_set('$(object)'), verb: false, required: true, referenceBy: accountingSubjectList,type:account_set;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		accountingDocumentLineList	accounting_subject(__no_group)--accounting_subject;
	}
} depth=5; isRoot = false

meta{name=accounting_period}
accounting_period{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('2017年1月|2017年2月|2017年3月|2017年4月|2017年5月|2017年6月|2017年7月|2017年8月|2017年9月|2017年10月|2017年11月|2017年12月'), verb: false, required: true,type:string;
		date	start_date('2017-01-09'), verb: false, required: true,type:date;
		date	end_date('2017-01-09'), verb: false, required: true,type:date;
		account_set	account_set('$(object)'), verb: false, required: true, referenceBy: accountingPeriodList,type:account_set;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		accountingDocumentList	accounting_period(__no_group)--accounting_period;
	}
} depth=5; isRoot = false

meta{name=accounting_document_type}
accounting_document_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('记账凭证|收款凭证|付款凭证'), verb: false, required: true,type:string;
		string	description('又称记账凭单，是会计人员根据审核无误的原始凭证按照经济业务事项的内容加以分类，并据以确定会计分录后所填制的会计凭证。它是登记账簿的直接依据。'), verb: false, required: true,type:string;
		account_set	accounting_period('$(object)'), verb: false, required: true, referenceBy: accountingDocumentTypeList,type:account_set;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		accountingDocumentList	document_type(__no_group)--document_type;
	}
} depth=5; isRoot = false

meta{name=accounting_document}
accounting_document{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('记账凭证'), verb: false, required: true,type:string;
		date	accounting_document_date('2018-09-09'), verb: false, required: true,type:date;
		accounting_period	accounting_period('$(object)'), verb: false, required: true, referenceBy: accountingDocumentList,type:accounting_period;
		accounting_document_type	document_type('$(object)'), verb: false, required: true, referenceBy: accountingDocumentList,type:accounting_document_type;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		originalVoucherList	belongs_to(__no_group)--belongs_to;
		accountingDocumentLineList	belongs_to(__no_group)--belongs_to;
	}
} depth=6; isRoot = false

meta{name=original_voucher}
original_voucher{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('这是手写的发票'), verb: false, required: true,type:string;
		string	made_by('李亚青'), verb: false, required: true,type:string;
		string	received_by('本公司'), verb: false, required: true,type:string;
		string	voucher_type('原始凭证|发票|出库单|入库单|存款回执|验收证明|借款凭证'), verb: false, required: true,type:string;
		string_image	voucher_image('goodthing.jpg'), verb: false, required: true,type:string_image;
		accounting_document	belongs_to('$(object)'), verb: false, required: true, referenceBy: originalVoucherList,type:accounting_document;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=accounting_document_line}
accounting_document_line{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('收到存款'), verb: false, required: true,type:string;
		string	code('AS9999'), verb: false, required: true,type:string;
		string	direct('借|贷'), verb: false, required: true,type:string;
		money	amount('$989127.99'), verb: false, required: true,type:money;
		accounting_document	belongs_to('$(object)'), verb: false, required: true, referenceBy: accountingDocumentLineList,type:accounting_document;
		accounting_subject	accounting_subject('$(object)'), verb: false, required: true, referenceBy: accountingDocumentLineList,type:accounting_subject;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=level_one_department, vg4belongs_to=组织机构}
level_one_department{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		retail_store_country_center	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelOneDepartmentList,type:retail_store_country_center;
		string	name('供应链部|采购部|管理部|财务部|信息技术部|法务部|市场部|人力资源部'), verb: false, required: true,type:string;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true,type:string;
		string	manager('刘强|王德宏'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		levelTwoDepartmentList	belongs_to(__no_group)--belongs_to;
	}
} depth=1; isRoot = false

meta{name=level_two_department}
level_two_department{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		level_one_department	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelTwoDepartmentList,type:level_one_department;
		string	name('信息系统部大数据部门'), verb: false, required: true,type:string;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		levelThreeDepartmentList	belongs_to(__no_group)--belongs_to;
	}
} depth=2; isRoot = false

meta{name=level_three_department}
level_three_department{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		level_two_department	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelThreeDepartmentList,type:level_two_department;
		string	name('信息系统部大数据清洗组|信息系统部大数据运算组|信息系统部大数据解决方案组'), verb: false, required: true,type:string;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeList	department(__no_group)--department;
	}
} depth=3; isRoot = false

meta{name=skill_type, features=setting, vg4company=人力资源}
skill_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('S0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: skillTypeList,type:retail_store_country_center;
		string	description('JAVA编程|大数据|并行计算|操作系统|数据库'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeSkillList	skill_type(__no_group)--skill_type;
	}
} depth=1; isRoot = false

meta{name=responsibility_type, features=setting, vg4company=人力资源}
responsibility_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('S0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: responsibilityTypeList,type:retail_store_country_center;
		string	base_description('合规管理|财务管理|总务管理|信息管理|库存管理|市场管理|产品管理|采购管理|资产管理|销售管理|安全管理'), verb: false, required: true,type:string;
		string	detail_description('负责集团及其他分公司信息系统有效运作，并使集团在技术上领先'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeList	responsible_for(__no_group)--responsible_for;
	}
} depth=1; isRoot = false

meta{name=termination_reason, features=setting, vg4company=人力资源}
termination_reason{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('ETR0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: terminationReasonList,type:retail_store_country_center;
		string	description('业务发展，公司转型|战略调整|业务优化'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		terminationList	reason(__no_group)--reason;
	}
} depth=1; isRoot = false

meta{name=termination_type, features=setting, vg4company=人力资源}
termination_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('ETT0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: terminationTypeList,type:retail_store_country_center;
		string	base_description('合同解除|辞职|退休'), verb: false, required: true,type:string;
		string	detail_description('这个终止原因的描述是这样的.................................................'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		terminationList	type(__no_group)--type;
	}
} depth=1; isRoot = false

meta{name=occupation_type, features=setting, vg4company=人力资源}
occupation_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('OT0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: occupationTypeList,type:retail_store_country_center;
		string	description('需求分析员|软件工程师|高级软件工程师|财务分析师|财务主管|出纳|总经理|副总经历|大数据架构师|销售经理|销售总监|技术总监|区域销售经理'), verb: false, required: true,type:string;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeList	occupation(__no_group)--occupation;
	}
} depth=1; isRoot = false

meta{name=leave_type, features=setting, vg4company=人力资源}
leave_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('LT0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: leaveTypeList,type:retail_store_country_center;
		string	description('带薪年假|病假|事假|婚假|产假|陪产假|丧假|探亲假|哺乳假|待产假|陪待产假'), verb: false, required: true,type:string;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeLeaveList	type(__no_group)--type;
	}
} depth=1; isRoot = false

meta{name=salary_grade, features=setting, vg4company=人力资源}
salary_grade{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('SG0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: salaryGradeList,type:retail_store_country_center;
		string	name('一级薪资|二级薪资|三级薪资|四级薪资|五级薪资|六级薪资|七级薪资'), verb: false, required: true,type:string;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		employeeList	current_salary_grade(__no_group)--current_salary_grade;
		employeeSalarySheetList	current_salary_grade(__no_group)--current_salary_grade;
	}
} depth=1; isRoot = false

meta{name=interview_type, features=setting, vg4company=人力资源}
interview_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('INTRVW00'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: interviewTypeList,type:retail_store_country_center;
		string	description('特别情况面试|离职面试|信息面试|入职面试'), verb: false, required: true,type:string;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeInterviewList	interview_type(__no_group)--interview_type;
	}
} depth=1; isRoot = false

meta{name=training_course_type, features=setting, vg4company=人力资源}
training_course_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('TC00'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: trainingCourseTypeList,type:retail_store_country_center;
		string	name('入职培训|售前培训|技术培训|管理培训|外训'), verb: false, required: true,type:string;
		string	description('培训是提升个人和企业竞争力的法宝'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		companyTrainingList	training_course_type(__no_group)--training_course_type;
	}
} depth=1; isRoot = false

meta{name=public_holiday, features=setting, vg4company=人力资源}
public_holiday{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('PH00'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: publicHolidayList,type:retail_store_country_center;
		string	name('元旦节|春节|妇女节|清明节|端午节|暑假|国庆节|中秋节'), verb: false, required: true,type:string;
		string	description('节日快乐，万事如意！'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=termination}
termination{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		termination_reason	reason('$(object)'), verb: false, required: true, referenceBy: terminationList,type:termination_reason;
		termination_type	type('$(object)'), verb: false, required: true, referenceBy: terminationList,type:termination_type;
		string	comment('员工离职'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=view}
view{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	who('面试官'), verb: false, required: true,type:string;
		string	assessment('小伙子不错，值得培养'), verb: false, required: true,type:string;
		date	interview_time('2017-03-03'), verb: false, required: true,type:date;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=0; isRoot = true

meta{name=employee, vg4company=人力资源}
employee{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: employeeList,type:retail_store_country_center;
		string	title('程序员'), verb: false, required: true,type:string;
		level_three_department	department('$(object)'), verb: false, required: true, referenceBy: employeeList,type:level_three_department;
		string	family_name('张|王|李|贺'), verb: false, required: true,type:string;
		string	given_name('文强|大伟|字章'), verb: false, required: true,type:string;
		string_email	email('share@163.com'), verb: false, required: true,type:string_email;
		string	city('北京|天津|成都|上海|深圳|广州|西安'), verb: false, required: true,type:string;
		string	address('学院路234号'), verb: false, required: true,type:string;
		string_china_mobile_phone	cell_phone('18677778888'), verb: false, required: true,type:string_china_mobile_phone;
		occupation_type	occupation('$(object)'), verb: false, required: true, referenceBy: employeeList,type:occupation_type;
		responsibility_type	responsible_for('$(object)'), verb: false, required: true, referenceBy: employeeList,type:responsibility_type;
		salary_grade	current_salary_grade('$(object)'), verb: false, required: true, referenceBy: employeeList,type:salary_grade;
		string	salary_account('6226 7788 9908 '), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(12){
		employeeCompanyTrainingList	employee(__no_group)--employee;
		employeeSkillList	employee(__no_group)--employee;
		employeePerformanceList	employee(__no_group)--employee;
		employeeWorkExperienceList	employee(__no_group)--employee;
		employeeLeaveList	who(__no_group)--who;
		employeeInterviewList	employee(__no_group)--employee;
		employeeAttendanceList	employee(__no_group)--employee;
		employeeQualifierList	employee(__no_group)--employee;
		employeeEducationList	employee(__no_group)--employee;
		employeeAwardList	employee(__no_group)--employee;
		employeeSalarySheetList	employee(__no_group)--employee;
		payingOffList	paid_for(__no_group)--paid_for;
	}
} depth=4; isRoot = false

meta{name=instructor, vg4company=人力资源}
instructor{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('高级讲师'), verb: false, required: true,type:string;
		string	family_name('张|王|李|贺'), verb: false, required: true,type:string;
		string	given_name('文强|大伟|字章'), verb: false, required: true,type:string;
		string_china_mobile_phone	cell_phone('18699990000'), verb: false, required: true,type:string_china_mobile_phone;
		string_email	email('instructor@gmail.com'), verb: false, required: true,type:string_email;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: instructorList,type:retail_store_country_center;
		string	introduction('这是一个长长长长长长长长的介绍'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		companyTrainingList	instructor(__no_group)--instructor;
	}
} depth=1; isRoot = false

meta{name=company_training, vg4company=人力资源}
company_training{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('入职培训'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: companyTrainingList,type:retail_store_country_center;
		instructor	instructor('$(object)'), verb: false, required: true, referenceBy: companyTrainingList,type:instructor;
		training_course_type	training_course_type('$(object)'), verb: false, required: true, referenceBy: companyTrainingList,type:training_course_type;
		date_past	time_start('past()'), verb: false, required: true,type:date_past;
		int	duration_hours('3'), verb: false, required: true,type:int;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeCompanyTrainingList	training(__no_group)--training;
	}
} depth=2; isRoot = false

meta{name=scoring}
scoring{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	scored_by('王志文'), verb: false, required: true,type:string;
		int	score('100'), verb: false, required: true,type:int;
		string	comment('这个题做的真不错啊'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeCompanyTrainingList	scoring(__no_group)--scoring;
	}
} depth=0; isRoot = true

meta{name=employee_company_training}
employee_company_training{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeCompanyTrainingList,type:employee;
		company_training	training('$(object)'), verb: false, required: true, referenceBy: employeeCompanyTrainingList,type:company_training;
		scoring	scoring('$(object)'), verb: false, required: true, referenceBy: employeeCompanyTrainingList,type:scoring;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_skill}
employee_skill{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeSkillList,type:employee;
		skill_type	skill_type('$(object)'), verb: false, required: true, referenceBy: employeeSkillList,type:skill_type;
		string	description('高手高手高高手'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_performance}
employee_performance{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeePerformanceList,type:employee;
		string	performance_comment('绩效大大的不错'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_work_experience}
employee_work_experience{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeWorkExperienceList,type:employee;
		date	start('2008-01-10'), verb: false, required: true,type:date;
		date	end('2018-01-10'), verb: false, required: true,type:date;
		string	company('丝芙兰化妆品公司'), verb: false, required: true,type:string;
		string	description('在此期间取得非常好的绩效，赢得了客户的信赖'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_leave}
employee_leave{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		employee	who('$(object)'), verb: false, required: true, referenceBy: employeeLeaveList,type:employee;
		leave_type	type('$(object)'), verb: false, required: true, referenceBy: employeeLeaveList,type:leave_type;
		int	leave_duration_hour('8'), verb: false, required: true,type:int;
		string	remark('请年假，出去耍！！！！'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_interview}
employee_interview{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeInterviewList,type:employee;
		interview_type	interview_type('$(object)'), verb: false, required: true, referenceBy: employeeInterviewList,type:interview_type;
		string	remark('结果不错，面试通过！'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_attendance}
employee_attendance{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeAttendanceList,type:employee;
		date	enter_time('2017-01-01'), verb: false, required: true,type:date;
		date	leave_time('2017-03-01'), verb: false, required: true,type:date;
		int	duration_hours('8'), verb: false, required: true,type:int;
		string	remark('今天状态不错啊'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_qualifier}
employee_qualifier{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeQualifierList,type:employee;
		date	qualified_time('2017-01-01'), verb: false, required: true,type:date;
		string	type('认证药剂师|认证架构师|认证会计师|认证经济师|OCP|CCNA|CCNP'), verb: false, required: true,type:string;
		string	level('高级|中级|初级'), verb: false, required: true,type:string;
		string	remark('考试成绩当年第一名'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_education}
employee_education{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeEducationList,type:employee;
		date	complete_time('2017-01-01'), verb: false, required: true,type:date;
		string	type('小学|初中|高中|大学|硕士|博士|职业教育'), verb: false, required: true,type:string;
		string	remark('考试成绩当年第一名'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_award}
employee_award{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeAwardList,type:employee;
		date	complete_time('2017-01-01'), verb: false, required: true,type:date;
		string	type('明星员工|销售之星|技术之星|管理之星|终身成就奖'), verb: false, required: true,type:string;
		string	remark('考试成绩当年第一名'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_salary_sheet}
employee_salary_sheet{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeSalarySheetList,type:employee;
		salary_grade	current_salary_grade('$(object)'), verb: false, required: true, referenceBy: employeeSalarySheetList,type:salary_grade;
		money	base_salary('$3000.10'), verb: false, required: true,type:money;
		money	bonus('$1000.10'), verb: false, required: true,type:money;
		money	reward('$1000.10'), verb: false, required: true,type:money;
		money	personal_tax('$792.88'), verb: false, required: true,type:money;
		money	social_security('$1100.22'), verb: false, required: true,type:money;
		money	housing_found('$1222.99'), verb: false, required: true,type:money;
		money	job_insurance('$8.88'), verb: false, required: true,type:money;
		paying_off	paying_off('$(object)'), verb: false, required: true, referenceBy: employeeSalarySheetList,type:paying_off;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=paying_off}
paying_off{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	who('出纳'), verb: false, required: true,type:string;
		employee	paid_for('$(object)'), verb: false, required: true, referenceBy: payingOffList,type:employee;
		date	paid_time('2018-01-19'), verb: false, required: true,type:date;
		money	amount('$5223.88'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeSalarySheetList	paying_off(__no_group)--paying_off;
	}
} depth=5; isRoot = false

meta{name=retail_store_country_center}
retail_store_country_center{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('双链小超中国国运营中心|双链小超美国国运营中心|双链小超日本国运营中心|双链小超泰国国运营中心'), verb: false, required: true,type:string;
		string	service_number('4000-800-'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		string_url	web_site('https://www.doublechaintech.com/'), verb: false, required: true,type:string_url;
		string	address('四川省成都市天府新区双链大厦'), verb: false, required: true,type:string;
		string	operated_by('双链集团'), verb: false, required: true,type:string;
		string	legal_representative('张喜来|张喜来'), verb: false, required: true,type:string;
		string	description('中国中心正式成立，恭喜恭喜'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(24){
		catalogList	owner(产品管理)--owner;
		retailStoreProvinceCenterList	country(组织机构)--country;
		retailStoreList	retail_store_country_center(加盟管理)--retail_store_country_center;
		retailStoreMemberList	owner(会员管理)--owner;
		goodsSupplierList	belong_to(供应管理)--belong_to;
		supplyOrderList	buyer(供应管理)--buyer;
		retailStoreOrderList	seller(销售管理)--seller;
		warehouseList	owner(仓配运一体化)--owner;
		transportFleetList	owner(仓配运一体化)--owner;
		accountSetList	country_center(财务管理)--country_center;
		levelOneDepartmentList	belongs_to(组织机构)--belongs_to;
		skillTypeList	company(人力资源)--company;
		responsibilityTypeList	company(人力资源)--company;
		terminationReasonList	company(人力资源)--company;
		terminationTypeList	company(人力资源)--company;
		occupationTypeList	company(人力资源)--company;
		leaveTypeList	company(人力资源)--company;
		salaryGradeList	company(人力资源)--company;
		interviewTypeList	company(人力资源)--company;
		trainingCourseTypeList	company(人力资源)--company;
		publicHolidayList	company(人力资源)--company;
		employeeList	company(人力资源)--company;
		instructorList	company(人力资源)--company;
		companyTrainingList	company(人力资源)--company;
	}
} depth=0; isRoot = true

meta{name=catalog, vg4owner=产品管理}
catalog{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true,type:string;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: catalogList,type:retail_store_country_center;
		int	sub_count('10'), verb: false, required: true,type:int;
		money	amount('$10.11'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		levelOneCategoryList	catalog(__no_group)--catalog;
	}
} depth=1; isRoot = false

meta{name=level_one_category}
level_one_category{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		catalog	catalog('$(object)'), verb: false, required: true, referenceBy: levelOneCategoryList,type:catalog;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		levelTwoCategoryList	parent_category(__no_group)--parent_category;
	}
} depth=2; isRoot = false

meta{name=level_two_category}
level_two_category{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		level_one_category	parent_category('$(object)'), verb: false, required: true, referenceBy: levelTwoCategoryList,type:level_one_category;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		levelThreeCategoryList	parent_category(__no_group)--parent_category;
	}
} depth=3; isRoot = false

meta{name=level_three_category}
level_three_category{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		level_two_category	parent_category('$(object)'), verb: false, required: true, referenceBy: levelThreeCategoryList,type:level_two_category;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		productList	parent_category(__no_group)--parent_category;
	}
} depth=4; isRoot = false

meta{name=product}
product{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('啤酒|可乐|久久鸭'), verb: false, required: true,type:string;
		level_three_category	parent_category('$(object)'), verb: false, required: true, referenceBy: productList,type:level_three_category;
		string	origin('四川|广东|江苏|安徽|日本|法国'), verb: false, required: true,type:string;
		string	remark('可口可乐，销售百年的糖水，获得了全世界额青睐'), verb: false, required: true,type:string;
		string	brand('品牌品牌品牌品牌品牌品牌品牌品牌品牌品牌品牌品'), verb: false, required: true,type:string;
		string_image	picture('this is a looooooooooog.jpg'), verb: false, required: true,type:string_image;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		skuList	product(__no_group)--product;
	}
} depth=5; isRoot = false

meta{name=sku}
sku{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('可乐-大罐的'), verb: false, required: true,type:string;
		string	size('大|中|小'), verb: false, required: true,type:string;
		product	product('$(object)'), verb: false, required: true, referenceBy: skuList,type:product;
		string	barcode('TM00000000001'), verb: false, required: true,type:string;
		string	package_type('包装类型'), verb: false, required: true,type:string;
		string	net_content('包装数量等信息,包装数量等信息,包装数量等信息'), verb: false, required: true,type:string;
		money	price('$1323.33'), verb: false, required: true,type:money;
		string_image	picture('coco.jpg'), verb: false, required: true,type:string_image;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsList	sku(__no_group)--sku;
	}
} depth=6; isRoot = false

meta{name=retail_store_province_center, vg4country=组织机构}
retail_store_province_center{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('双链小超四川省运营中心|双链小超北京运营中心'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		retail_store_country_center	country('$(object)'), verb: false, required: true, referenceBy: retailStoreProvinceCenterList,type:retail_store_country_center;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		provinceCenterDepartmentList	province_center(__no_group)--province_center;
		provinceCenterEmployeeList	province_center(__no_group)--province_center;
		retailStoreCityServiceCenterList	belongs_to(__no_group)--belongs_to;
	}
} depth=1; isRoot = false

meta{name=province_center_department, features=setting}
province_center_department{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('供应链部|采购部|管理部|财务部|法务部|市场部|人力资源部'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		retail_store_province_center	province_center('$(object)'), verb: false, required: true, referenceBy: provinceCenterDepartmentList,type:retail_store_province_center;
		string	manager('刘强|王德宏'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		provinceCenterEmployeeList	department(__no_group)--department;
	}
} depth=2; isRoot = false

meta{name=province_center_employee}
province_center_employee{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('刘强|王德宏'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13999998888'), verb: false, required: true,type:string_china_mobile_phone;
		string_email	email('wangdehong@yatang.cn|liuqiang@yatang.cn'), verb: false, required: true,type:string_email;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		province_center_department	department('$(object)'), verb: false, required: true, referenceBy: provinceCenterEmployeeList,type:province_center_department;
		retail_store_province_center	province_center('$(object)'), verb: false, required: true, referenceBy: provinceCenterEmployeeList,type:retail_store_province_center;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=retail_store_city_service_center}
retail_store_city_service_center{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('双链小超成都办事处|双链小超绵阳办事处|双链小超巴中办事处'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		retail_store_province_center	belongs_to('$(object)'), verb: false, required: true, referenceBy: retailStoreCityServiceCenterList,type:retail_store_province_center;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		cityPartnerList	city_service_center(__no_group)--city_service_center;
		potentialCustomerList	city_service_center(__no_group)--city_service_center;
		cityEventList	city_service_center(__no_group)--city_service_center;
		retailStoreList	city_service_center(__no_group)--city_service_center;
	}
} depth=2; isRoot = false

meta{name=city_partner}
city_partner{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('曾倩|黄风格|郭超'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true,type:string_china_mobile_phone;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: cityPartnerList,type:retail_store_city_service_center;
		string	description('负责开拓市场，具有极强的开拓能力'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		potentialCustomerList	city_partner(__no_group)--city_partner;
		potentialCustomerContactList	city_partner(__no_group)--city_partner;
	}
} depth=3; isRoot = false

meta{name=potential_customer}
potential_customer{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('曾倩|黄风格|郭超'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true,type:string_china_mobile_phone;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: potentialCustomerList,type:retail_store_city_service_center;
		city_partner	city_partner('$(object)'), verb: false, required: true, referenceBy: potentialCustomerList,type:city_partner;
		string	description('负责开拓市场，具有极强的开拓能力'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		potentialCustomerContactPersonList	potential_customer(__no_group)--potential_customer;
		potentialCustomerContactList	potential_customer(__no_group)--potential_customer;
		eventAttendanceList	potential_customer(__no_group)--potential_customer;
	}
} depth=4; isRoot = false

meta{name=potential_customer_contact_person}
potential_customer_contact_person{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('赵先生'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true,type:string_china_mobile_phone;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactPersonList,type:potential_customer;
		string	description('这人在决策中战友较大的权重，密切观察中.....'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		potentialCustomerContactList	contact_to(__no_group)--contact_to;
	}
} depth=5; isRoot = false

meta{name=potential_customer_contact}
potential_customer_contact{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('和连载客户的联系记录'), verb: false, required: true,type:string;
		date	contact_date('2016-09-09'), verb: false, required: true,type:date;
		string	contact_method('电话|短信|登门拜访|活动聊天'), verb: false, required: true,type:string;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList,type:potential_customer;
		city_partner	city_partner('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList,type:city_partner;
		potential_customer_contact_person	contact_to('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList,type:potential_customer_contact_person;
		string	description('转化希望很大'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=city_event}
city_event{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('小超见面会|双链小超说明会'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true,type:string_china_mobile_phone;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: cityEventList,type:retail_store_city_service_center;
		string	description('给大家讲解小超的发展蓝图'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		eventAttendanceList	city_event(__no_group)--city_event;
	}
} depth=3; isRoot = false

meta{name=event_attendance}
event_attendance{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('小超见面会参加信息'), verb: false, required: true,type:string;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: eventAttendanceList,type:potential_customer;
		city_event	city_event('$(object)'), verb: false, required: true, referenceBy: eventAttendanceList,type:city_event;
		string	description('体会不错，考虑加盟'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=retail_store, vg4retail_store_country_center=加盟管理}
retail_store{
	fields(18){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('中和社区小超|华阳社区小超|大源社区小超'), verb: false, required: true,type:string;
		string	telephone('028 87654321'), verb: false, required: true,type:string;
		string	owner('吕刚'), verb: false, required: true,type:string;
		retail_store_country_center	retail_store_country_center('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_country_center;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_city_service_center;
		retail_store_creation	creation('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_creation;
		retail_store_investment_invitation	investment_invitation('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_investment_invitation;
		retail_store_franchising	franchising('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_franchising;
		retail_store_decoration	decoration('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_decoration;
		retail_store_opening	opening('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_opening;
		retail_store_closing	closing('$(object)'), verb: false, required: true, referenceBy: retailStoreList,type:retail_store_closing;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		string	description('啤酒饮料矿泉水，香肠瓜子方便面, 请让一让'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(5){
		consumerOrderList	store(__no_group)--store;
		retailStoreOrderList	buyer(__no_group)--buyer;
		goodsList	retail_store(__no_group)--retail_store;
		transportTaskList	end(__no_group)--end;
		accountSetList	retail_store(__no_group)--retail_store;
	}
} depth=3; isRoot = false

meta{name=retail_store_creation}
retail_store_creation{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('已经建好了'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	creation(__no_group)--creation;
	}
} depth=0; isRoot = true

meta{name=retail_store_investment_invitation}
retail_store_investment_invitation{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('欢迎前来咨询'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	investment_invitation(__no_group)--investment_invitation;
	}
} depth=0; isRoot = true

meta{name=retail_store_franchising}
retail_store_franchising{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('谢谢加盟'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	franchising(__no_group)--franchising;
	}
} depth=0; isRoot = true

meta{name=retail_store_decoration}
retail_store_decoration{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('装修'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	decoration(__no_group)--decoration;
	}
} depth=0; isRoot = true

meta{name=retail_store_opening}
retail_store_opening{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('装修'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	opening(__no_group)--opening;
	}
} depth=0; isRoot = true

meta{name=retail_store_closing}
retail_store_closing{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	comment('关闭'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreList	closing(__no_group)--closing;
	}
} depth=0; isRoot = true

meta{name=retail_store_member, vg4owner=会员管理}
retail_store_member{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('李亚青'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile_phone('18099887766'), verb: false, required: true,type:string_china_mobile_phone;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberList,type:retail_store_country_center;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(7){
		consumerOrderList	consumer(__no_group)--consumer;
		retailStoreMemberCouponList	owner(__no_group)--owner;
		memberWishlistList	owner(__no_group)--owner;
		memberRewardPointList	owner(__no_group)--owner;
		memberRewardPointRedemptionList	owner(__no_group)--owner;
		retailStoreMemberAddressList	owner(__no_group)--owner;
		retailStoreMemberGiftCardList	owner(__no_group)--owner;
	}
} depth=1; isRoot = false

meta{name=consumer_order}
consumer_order{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('消费订单'), verb: false, required: true,type:string;
		retail_store_member	consumer('$(object)'), verb: false, required: true, referenceBy: consumerOrderList,type:retail_store_member;
		retail_store	store('$(object)'), verb: false, required: true, referenceBy: consumerOrderList,type:retail_store;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(5){
		consumerOrderLineItemList	biz_order(__no_group)--biz_order;
		consumerOrderShippingGroupList	biz_order(__no_group)--biz_order;
		consumerOrderPaymentGroupList	biz_order(__no_group)--biz_order;
		consumerOrderPriceAdjustmentList	biz_order(__no_group)--biz_order;
		retailStoreMemberGiftCardConsumeRecordList	biz_order(__no_group)--biz_order;
	}
} depth=4; isRoot = false

meta{name=consumer_order_line_item}
consumer_order_line_item{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderLineItemList,type:consumer_order;
		string	sku_id('SKU'), verb: false, required: true,type:string;
		string	sku_name('大瓶可乐'), verb: false, required: true,type:string;
		money	price('$5.97'), verb: false, required: true,type:money;
		double	quantity('1000.00'), verb: false, required: true,type:double;
		money	amount('$9999.99'), verb: false, required: true,type:money;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=consumer_order_shipping_group}
consumer_order_shipping_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('送货到刘强家'), verb: false, required: true,type:string;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderShippingGroupList,type:consumer_order;
		money	amount('$599.99'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=consumer_order_payment_group}
consumer_order_payment_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('信用卡|支付宝|微信支付'), verb: false, required: true,type:string;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderPaymentGroupList,type:consumer_order;
		string	card_number('4111 1111 1111 - '), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=consumer_order_price_adjustment}
consumer_order_price_adjustment{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('端午促销'), verb: false, required: true,type:string;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderPriceAdjustmentList,type:consumer_order;
		money	amount('$599.99'), verb: false, required: true,type:money;
		string	provider('供货商|小超老板|广告赞助'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=retail_store_member_coupon}
retail_store_member_coupon{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('优惠券'), verb: false, required: true,type:string;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberCouponList,type:retail_store_member;
		string	number('CP00001'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=member_wishlist}
member_wishlist{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('每周购买清单|每月购买清单'), verb: false, required: true,type:string;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberWishlistList,type:retail_store_member;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		memberWishlistProductList	owner(__no_group)--owner;
	}
} depth=2; isRoot = false

meta{name=member_reward_point}
member_reward_point{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('购买积分|每月购买清单'), verb: false, required: true,type:string;
		int	point('20'), verb: false, required: true,type:int;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberRewardPointList,type:retail_store_member;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=member_reward_point_redemption}
member_reward_point_redemption{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('积分换锅|积分换刀'), verb: false, required: true,type:string;
		int	point('20'), verb: false, required: true,type:int;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberRewardPointRedemptionList,type:retail_store_member;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=member_wishlist_product}
member_wishlist_product{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('农夫山泉|利箭口香糖'), verb: false, required: true,type:string;
		member_wishlist	owner('$(object)'), verb: false, required: true, referenceBy: memberWishlistProductList,type:member_wishlist;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=retail_store_member_address}
retail_store_member_address{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('家里|办公室|出差临时地址'), verb: false, required: true,type:string;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberAddressList,type:retail_store_member;
		string_china_mobile_phone	mobile_phone('18099887766'), verb: false, required: true,type:string_china_mobile_phone;
		string	address('四川省成都市科学城北路33号'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=retail_store_member_gift_card}
retail_store_member_gift_card{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('礼品卡'), verb: false, required: true,type:string;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardList,type:retail_store_member;
		string	number('CP00001'), verb: false, required: true,type:string;
		money	remain('$213.99'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		retailStoreMemberGiftCardConsumeRecordList	owner(__no_group)--owner;
	}
} depth=2; isRoot = false

meta{name=retail_store_member_gift_card_consume_record}
retail_store_member_gift_card_consume_record{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		date_past	occure_time('past()'), verb: false, required: true,type:date_past;
		retail_store_member_gift_card	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardConsumeRecordList,type:retail_store_member_gift_card;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardConsumeRecordList,type:consumer_order;
		string	number('GF00001'), verb: false, required: true,type:string;
		money	amount('$20.99'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=goods_supplier, vg4belong_to=供应管理}
goods_supplier{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('宝洁|中粮|福临门'), verb: false, required: true,type:string;
		string	supply_product('洗护用品|食品|植物油'), verb: false, required: true,type:string;
		retail_store_country_center	belong_to('$(object)'), verb: false, required: true, referenceBy: goodsSupplierList,type:retail_store_country_center;
		string_china_mobile_phone	contact_number('18677889999'), verb: false, required: true,type:string_china_mobile_phone;
		string	description('啤酒饮料矿泉水，香肠瓜子方便面都提供'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		supplierProductList	supplier(__no_group)--supplier;
		supplyOrderList	seller(__no_group)--seller;
		accountSetList	goods_supplier(__no_group)--goods_supplier;
	}
} depth=1; isRoot = false

meta{name=supplier_product}
supplier_product{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	product_name('黑人牙膏'), verb: false, required: true,type:string;
		string	product_description('最好的黑人牙膏，只卖3块喽'), verb: false, required: true,type:string;
		string	product_unit('件|公斤|米'), verb: false, required: true,type:string;
		goods_supplier	supplier('$(object)'), verb: false, required: true, referenceBy: supplierProductList,type:goods_supplier;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		productSupplyDurationList	product(__no_group)--product;
	}
} depth=2; isRoot = false

meta{name=product_supply_duration}
product_supply_duration{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		int	quantity('100|200|500'), verb: false, required: true,type:int;
		string	duration('现货|两天|三天|一周'), verb: false, required: true,type:string;
		money	price('$9999.99'), verb: false, required: true,type:money;
		supplier_product	product('$(object)'), verb: false, required: true, referenceBy: productSupplyDurationList,type:supplier_product;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=supply_order, vg4buyer=供应管理}
supply_order{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		retail_store_country_center	buyer('$(object)'), verb: false, required: true, referenceBy: supplyOrderList,type:retail_store_country_center;
		goods_supplier	seller('$(object)'), verb: false, required: true, referenceBy: supplyOrderList,type:goods_supplier;
		string	title('双链给供货商下的订单'), verb: false, required: true,type:string;
		money	total_amount('$3000000000.88'), verb: false, required: true,type:money;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		supplyOrderLineItemList	biz_order(__no_group)--biz_order;
		supplyOrderShippingGroupList	biz_order(__no_group)--biz_order;
		supplyOrderPaymentGroupList	biz_order(__no_group)--biz_order;
		goodsList	biz_order(__no_group)--biz_order;
	}
} depth=2; isRoot = false

meta{name=supply_order_line_item}
supply_order_line_item{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderLineItemList,type:supply_order;
		string	sku_id('SKU'), verb: false, required: true,type:string;
		string	sku_name('大瓶可乐'), verb: false, required: true,type:string;
		money	amount('$5.97'), verb: false, required: true,type:money;
		int	quantity('10000'), verb: false, required: true,type:int;
		string	unit_of_measurement('件|公斤|米'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=supply_order_shipping_group}
supply_order_shipping_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('送货到双链成都2号仓'), verb: false, required: true,type:string;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderShippingGroupList,type:supply_order;
		money	amount('$5.99'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=supply_order_payment_group}
supply_order_payment_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('付款办法'), verb: false, required: true,type:string;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderPaymentGroupList,type:supply_order;
		string	card_number('4111 1111 1111 - '), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=retail_store_order, vg4seller=销售管理}
retail_store_order{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		retail_store	buyer('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderList,type:retail_store;
		retail_store_country_center	seller('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderList,type:retail_store_country_center;
		string	title('双链小超给双链供应链下的订单'), verb: false, required: true,type:string;
		money	total_amount('$3000000000.88'), verb: false, required: true,type:money;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(4){
		retailStoreOrderLineItemList	biz_order(__no_group)--biz_order;
		retailStoreOrderShippingGroupList	biz_order(__no_group)--biz_order;
		retailStoreOrderPaymentGroupList	biz_order(__no_group)--biz_order;
		goodsList	retail_store_order(__no_group)--retail_store_order;
	}
} depth=4; isRoot = false

meta{name=retail_store_order_line_item}
retail_store_order_line_item{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderLineItemList,type:retail_store_order;
		string	sku_id('SKU'), verb: false, required: true,type:string;
		string	sku_name('大瓶可乐'), verb: false, required: true,type:string;
		money	amount('$3.97'), verb: false, required: true,type:money;
		int	quantity('10000'), verb: false, required: true,type:int;
		string	unit_of_measurement('件|公斤|米'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=retail_store_order_shipping_group}
retail_store_order_shipping_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('送货到双链中和社区店'), verb: false, required: true,type:string;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderShippingGroupList,type:retail_store_order;
		money	amount('$5.99'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=retail_store_order_payment_group}
retail_store_order_payment_group{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('付款办法'), verb: false, required: true,type:string;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderPaymentGroupList,type:retail_store_order;
		string	card_number('4111 1111 1111 - '), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=warehouse, vg4owner=仓配运一体化}
warehouse{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('187672平方米'), verb: false, required: true,type:string;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: warehouseList,type:retail_store_country_center;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(7){
		storageSpaceList	warehouse(__no_group)--warehouse;
		smartPalletList	warehouse(__no_group)--warehouse;
		supplierSpaceList	warehouse(__no_group)--warehouse;
		receivingSpaceList	warehouse(__no_group)--warehouse;
		shippingSpaceList	warehouse(__no_group)--warehouse;
		damageSpaceList	warehouse(__no_group)--warehouse;
		warehouseAssetList	owner(__no_group)--owner;
	}
} depth=1; isRoot = false

meta{name=storage_space}
storage_space{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号存货区'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: storageSpaceList,type:warehouse;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsShelfList	storage_space(__no_group)--storage_space;
	}
} depth=2; isRoot = false

meta{name=smart_pallet}
smart_pallet{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号移动区域，比如过道，货运通道等'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: smartPalletList,type:warehouse;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsList	smart_pallet(__no_group)--smart_pallet;
	}
} depth=2; isRoot = false

meta{name=goods_shelf}
goods_shelf{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号存货区货架'), verb: false, required: true,type:string;
		storage_space	storage_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList,type:storage_space;
		supplier_space	supplier_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList,type:supplier_space;
		damage_space	damage_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList,type:damage_space;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		goodsShelfStockCountList	shelf(__no_group)--shelf;
		goodsAllocationList	goods_shelf(__no_group)--goods_shelf;
	}
} depth=3; isRoot = false

meta{name=goods_shelf_stock_count}
goods_shelf_stock_count{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('每日盘点|每周盘点|每月盘点|年终盘点'), verb: false, required: true,type:string;
		date	count_time('2017-04-01'), verb: false, required: true,type:date;
		string	summary('使用先进的rfid技术，没有任何错误'), verb: false, required: true,type:string;
		goods_shelf	shelf('$(object)'), verb: false, required: true, referenceBy: goodsShelfStockCountList,type:goods_shelf;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		stockCountIssueTrackList	stock_count(__no_group)--stock_count;
	}
} depth=4; isRoot = false

meta{name=stock_count_issue_track}
stock_count_issue_track{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('盘点差错'), verb: false, required: true,type:string;
		date	count_time('2017-04-01'), verb: false, required: true,type:date;
		string	summary('发现错误已经修正完成'), verb: false, required: true,type:string;
		goods_shelf_stock_count	stock_count('$(object)'), verb: false, required: true, referenceBy: stockCountIssueTrackList,type:goods_shelf_stock_count;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=goods_allocation}
goods_allocation{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号存货区货架20号货位'), verb: false, required: true,type:string;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		goods_shelf	goods_shelf('$(object)'), verb: false, required: true, referenceBy: goodsAllocationList,type:goods_shelf;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsList	goods_allocation(__no_group)--goods_allocation;
	}
} depth=4; isRoot = false

meta{name=goods}
goods{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('可口可乐'), verb: false, required: true,type:string;
		string	rfid('RF99192'), verb: false, required: true,type:string;
		string	uom('件|箱'), verb: false, required: true,type:string;
		int	max_package('10'), verb: false, required: true,type:int;
		date	expire_time('2019-09-09'), verb: false, required: true,type:date;
		sku	sku('$(object)'), verb: false, required: true, referenceBy: goodsList,type:sku;
		receiving_space	receiving_space('$(object)'), verb: false, required: true, referenceBy: goodsList,type:receiving_space;
		goods_allocation	goods_allocation('$(object)'), verb: false, required: true, referenceBy: goodsList,type:goods_allocation;
		smart_pallet	smart_pallet('$(object)'), verb: false, required: true, referenceBy: goodsList,type:smart_pallet;
		shipping_space	shipping_space('$(object)'), verb: false, required: true, referenceBy: goodsList,type:shipping_space;
		transport_task	transport_task('$(object)'), verb: false, required: true, referenceBy: goodsList,type:transport_task;
		retail_store	retail_store('$(object)'), verb: false, required: true, referenceBy: goodsList,type:retail_store;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: goodsList,type:supply_order;
		retail_store_order	retail_store_order('$(object)'), verb: false, required: true, referenceBy: goodsList,type:retail_store_order;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsMovementList	goods(__no_group)--goods;
	}
} depth=7; isRoot = false

meta{name=goods_movement}
goods_movement{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		date_time	move_time('2017-08-09T09:09:09'), verb: false, required: true,type:date_time;
		string	facility('仓库货位|卡车|小超'), verb: false, required: true,type:string;
		string	facility_id('仓库货位|卡车|小超'), verb: false, required: true,type:string;
		string	from_ip('192.168.20.1'), verb: false, required: true,type:string;
		string	user_agent('Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405'), verb: false, required: true,type:string;
		string	session_id('FTYUIOLJYT^*(PLKJYT)'), verb: false, required: true,type:string;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		goods	goods('$(object)'), verb: false, required: true, referenceBy: goodsMovementList,type:goods;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=8; isRoot = false

meta{name=supplier_space}
supplier_space{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号供货商独立管理区'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: supplierSpaceList,type:warehouse;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsShelfList	supplier_space(__no_group)--supplier_space;
	}
} depth=2; isRoot = false

meta{name=receiving_space}
receiving_space{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号仓库卸货区'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	description('每个收货区可以供一辆车卸货'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: receivingSpaceList,type:warehouse;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsList	receiving_space(__no_group)--receiving_space;
	}
} depth=2; isRoot = false

meta{name=shipping_space}
shipping_space{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号装货区'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: shippingSpaceList,type:warehouse;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		string	description('每个收货区可以供一辆车装货'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsList	shipping_space(__no_group)--shipping_space;
	}
} depth=2; isRoot = false

meta{name=damage_space}
damage_space{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	location('成都龙泉驿飞鹤路20号仓库损坏货物堆放区'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	total_area('1876平方米'), verb: false, required: true,type:string;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: damageSpaceList,type:warehouse;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		goodsShelfList	damage_space(__no_group)--damage_space;
	}
} depth=2; isRoot = false

meta{name=warehouse_asset}
warehouse_asset{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('叉车|托盘|传送带备件'), verb: false, required: true,type:string;
		string	position('备用件存放区设备库房'), verb: false, required: true,type:string;
		warehouse	owner('$(object)'), verb: false, required: true, referenceBy: warehouseAssetList,type:warehouse;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=transport_fleet, vg4owner=仓配运一体化}
transport_fleet{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('双链先锋号车队'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: transportFleetList,type:retail_store_country_center;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		transportTruckList	owner(__no_group)--owner;
		truckDriverList	belongs_to(__no_group)--belongs_to;
		transportTaskList	belongs_to(__no_group)--belongs_to;
	}
} depth=1; isRoot = false

meta{name=transport_truck}
transport_truck{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('运货卡车'), verb: false, required: true,type:string;
		string	plate_number('川AK5'), verb: false, required: true,type:string;
		string	contact_number('028 87654321'), verb: false, required: true,type:string;
		string	vehicle_license_number('VL9198'), verb: false, required: true,type:string;
		string	engine_number('EN00102'), verb: false, required: true,type:string;
		date	make_date('2010-09-09'), verb: false, required: true,type:date;
		string	mileage('100万公里'), verb: false, required: true,type:string;
		string	body_color('红色|蓝色|白色|灰色|银色|黑色'), verb: false, required: true,type:string;
		transport_fleet	owner('$(object)'), verb: false, required: true, referenceBy: transportTruckList,type:transport_fleet;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		transportTaskList	truck(__no_group)--truck;
	}
} depth=2; isRoot = false

meta{name=truck_driver}
truck_driver{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('运货卡车司机'), verb: false, required: true,type:string;
		string	driver_license_number('5109 9887 733'), verb: false, required: true,type:string;
		string_china_mobile_phone	contact_number('18777778888'), verb: false, required: true,type:string_china_mobile_phone;
		transport_fleet	belongs_to('$(object)'), verb: false, required: true, referenceBy: truckDriverList,type:transport_fleet;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		transportTaskList	driver(__no_group)--driver;
	}
} depth=2; isRoot = false

meta{name=transport_task}
transport_task{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('货运记录'), verb: false, required: true,type:string;
		string	start('双链二号仓'), verb: false, required: true,type:string;
		date_past	begin_time('past()'), verb: false, required: true,type:date_past;
		retail_store	end('$(object)'), verb: false, required: true, referenceBy: transportTaskList,type:retail_store;
		truck_driver	driver('$(object)'), verb: false, required: true, referenceBy: transportTaskList,type:truck_driver;
		transport_truck	truck('$(object)'), verb: false, required: true, referenceBy: transportTaskList,type:transport_truck;
		transport_fleet	belongs_to('$(object)'), verb: false, required: true, referenceBy: transportTaskList,type:transport_fleet;
		double	latitude('40.776877'), verb: false, required: true,type:double;
		double	longitude('130.273647'), verb: false, required: true,type:double;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		goodsList	transport_task(__no_group)--transport_task;
		transportTaskTrackList	movement(__no_group)--movement;
	}
} depth=4; isRoot = false

meta{name=transport_task_track}
transport_task_track{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		date_past	track_time('past()'), verb: false, required: true,type:date_past;
		double	latitude('30.912929'), verb: false, required: true,type:double;
		double	longitude('104.121232'), verb: false, required: true,type:double;
		transport_task	movement('$(object)'), verb: false, required: true, referenceBy: transportTaskTrackList,type:transport_task;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{vg4country_center=财务管理, name=account_set}
account_set{
	fields(14){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('账套2017|账套2018|账套2019'), verb: false, required: true,type:string;
		string	year_set('2017年|2018年|2019年'), verb: false, required: true,type:string;
		date	effective_date('2017-05-28'), verb: false, required: true,type:date;
		string	accounting_system('企业会计制度|小企业会计制度|合伙制会计制度'), verb: false, required: true,type:string;
		string	domestic_currency_code('RMB|USD'), verb: false, required: true,type:string;
		string	domestic_currency_name('人民币|美元'), verb: false, required: true,type:string;
		string	opening_bank('招商银行|工商银行'), verb: false, required: true,type:string;
		string	account_number('3326 5805 0548 85'), verb: false, required: true,type:string;
		retail_store_country_center	country_center('$(object)'), verb: false, required: true, referenceBy: accountSetList,type:retail_store_country_center;
		retail_store	retail_store('$(object)'), verb: false, required: true, referenceBy: accountSetList,type:retail_store;
		goods_supplier	goods_supplier('$(object)'), verb: false, required: true, referenceBy: accountSetList,type:goods_supplier;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		accountingSubjectList	account_set(__no_group)--account_set;
		accountingPeriodList	account_set(__no_group)--account_set;
		accountingDocumentTypeList	accounting_period(__no_group)--accounting_period;
	}
} depth=4; isRoot = false

meta{name=accounting_subject}
accounting_subject{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	accounting_subject_code('AS9999'), verb: false, required: true,type:string;
		string	accounting_subject_name('银行存款'), verb: false, required: true,type:string;
		int	accounting_subject_class_code('1|2|3|4|5|6'), verb: false, required: true,type:int;
		string	accounting_subject_class_name('资产类|负债类|共同类|所有者权益类|成本类|损益类'), verb: false, required: true,type:string;
		account_set	account_set('$(object)'), verb: false, required: true, referenceBy: accountingSubjectList,type:account_set;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		accountingDocumentLineList	accounting_subject(__no_group)--accounting_subject;
	}
} depth=5; isRoot = false

meta{name=accounting_period}
accounting_period{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('2017年1月|2017年2月|2017年3月|2017年4月|2017年5月|2017年6月|2017年7月|2017年8月|2017年9月|2017年10月|2017年11月|2017年12月'), verb: false, required: true,type:string;
		date	start_date('2017-01-09'), verb: false, required: true,type:date;
		date	end_date('2017-01-09'), verb: false, required: true,type:date;
		account_set	account_set('$(object)'), verb: false, required: true, referenceBy: accountingPeriodList,type:account_set;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		accountingDocumentList	accounting_period(__no_group)--accounting_period;
	}
} depth=5; isRoot = false

meta{name=accounting_document_type}
accounting_document_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('记账凭证|收款凭证|付款凭证'), verb: false, required: true,type:string;
		string	description('又称记账凭单，是会计人员根据审核无误的原始凭证按照经济业务事项的内容加以分类，并据以确定会计分录后所填制的会计凭证。它是登记账簿的直接依据。'), verb: false, required: true,type:string;
		account_set	accounting_period('$(object)'), verb: false, required: true, referenceBy: accountingDocumentTypeList,type:account_set;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		accountingDocumentList	document_type(__no_group)--document_type;
	}
} depth=5; isRoot = false

meta{name=accounting_document}
accounting_document{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('记账凭证'), verb: false, required: true,type:string;
		date	accounting_document_date('2018-09-09'), verb: false, required: true,type:date;
		accounting_period	accounting_period('$(object)'), verb: false, required: true, referenceBy: accountingDocumentList,type:accounting_period;
		accounting_document_type	document_type('$(object)'), verb: false, required: true, referenceBy: accountingDocumentList,type:accounting_document_type;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		originalVoucherList	belongs_to(__no_group)--belongs_to;
		accountingDocumentLineList	belongs_to(__no_group)--belongs_to;
	}
} depth=6; isRoot = false

meta{name=original_voucher}
original_voucher{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('这是手写的发票'), verb: false, required: true,type:string;
		string	made_by('李亚青'), verb: false, required: true,type:string;
		string	received_by('本公司'), verb: false, required: true,type:string;
		string	voucher_type('原始凭证|发票|出库单|入库单|存款回执|验收证明|借款凭证'), verb: false, required: true,type:string;
		string_image	voucher_image('goodthing.jpg'), verb: false, required: true,type:string_image;
		accounting_document	belongs_to('$(object)'), verb: false, required: true, referenceBy: originalVoucherList,type:accounting_document;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=accounting_document_line}
accounting_document_line{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('收到存款'), verb: false, required: true,type:string;
		string	code('AS9999'), verb: false, required: true,type:string;
		string	direct('借|贷'), verb: false, required: true,type:string;
		money	amount('$989127.99'), verb: false, required: true,type:money;
		accounting_document	belongs_to('$(object)'), verb: false, required: true, referenceBy: accountingDocumentLineList,type:accounting_document;
		accounting_subject	accounting_subject('$(object)'), verb: false, required: true, referenceBy: accountingDocumentLineList,type:accounting_subject;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=7; isRoot = false

meta{name=level_one_department, vg4belongs_to=组织机构}
level_one_department{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		retail_store_country_center	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelOneDepartmentList,type:retail_store_country_center;
		string	name('供应链部|采购部|管理部|财务部|信息技术部|法务部|市场部|人力资源部'), verb: false, required: true,type:string;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true,type:string;
		string	manager('刘强|王德宏'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		levelTwoDepartmentList	belongs_to(__no_group)--belongs_to;
	}
} depth=1; isRoot = false

meta{name=level_two_department}
level_two_department{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		level_one_department	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelTwoDepartmentList,type:level_one_department;
		string	name('信息系统部大数据部门'), verb: false, required: true,type:string;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		levelThreeDepartmentList	belongs_to(__no_group)--belongs_to;
	}
} depth=2; isRoot = false

meta{name=level_three_department}
level_three_department{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		level_two_department	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelThreeDepartmentList,type:level_two_department;
		string	name('信息系统部大数据清洗组|信息系统部大数据运算组|信息系统部大数据解决方案组'), verb: false, required: true,type:string;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true,type:string;
		date_past	founded('past()'), verb: false, required: true,type:date_past;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeList	department(__no_group)--department;
	}
} depth=3; isRoot = false

meta{name=skill_type, features=setting, vg4company=人力资源}
skill_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('S0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: skillTypeList,type:retail_store_country_center;
		string	description('JAVA编程|大数据|并行计算|操作系统|数据库'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeSkillList	skill_type(__no_group)--skill_type;
	}
} depth=1; isRoot = false

meta{name=responsibility_type, features=setting, vg4company=人力资源}
responsibility_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('S0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: responsibilityTypeList,type:retail_store_country_center;
		string	base_description('合规管理|财务管理|总务管理|信息管理|库存管理|市场管理|产品管理|采购管理|资产管理|销售管理|安全管理'), verb: false, required: true,type:string;
		string	detail_description('负责集团及其他分公司信息系统有效运作，并使集团在技术上领先'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeList	responsible_for(__no_group)--responsible_for;
	}
} depth=1; isRoot = false

meta{name=termination_reason, features=setting, vg4company=人力资源}
termination_reason{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('ETR0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: terminationReasonList,type:retail_store_country_center;
		string	description('业务发展，公司转型|战略调整|业务优化'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		terminationList	reason(__no_group)--reason;
	}
} depth=1; isRoot = false

meta{name=termination_type, features=setting, vg4company=人力资源}
termination_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('ETT0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: terminationTypeList,type:retail_store_country_center;
		string	base_description('合同解除|辞职|退休'), verb: false, required: true,type:string;
		string	detail_description('这个终止原因的描述是这样的.................................................'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		terminationList	type(__no_group)--type;
	}
} depth=1; isRoot = false

meta{name=occupation_type, features=setting, vg4company=人力资源}
occupation_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('OT0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: occupationTypeList,type:retail_store_country_center;
		string	description('需求分析员|软件工程师|高级软件工程师|财务分析师|财务主管|出纳|总经理|副总经历|大数据架构师|销售经理|销售总监|技术总监|区域销售经理'), verb: false, required: true,type:string;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeList	occupation(__no_group)--occupation;
	}
} depth=1; isRoot = false

meta{name=leave_type, features=setting, vg4company=人力资源}
leave_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('LT0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: leaveTypeList,type:retail_store_country_center;
		string	description('带薪年假|病假|事假|婚假|产假|陪产假|丧假|探亲假|哺乳假|待产假|陪待产假'), verb: false, required: true,type:string;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeLeaveList	type(__no_group)--type;
	}
} depth=1; isRoot = false

meta{name=salary_grade, features=setting, vg4company=人力资源}
salary_grade{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('SG0000'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: salaryGradeList,type:retail_store_country_center;
		string	name('一级薪资|二级薪资|三级薪资|四级薪资|五级薪资|六级薪资|七级薪资'), verb: false, required: true,type:string;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		employeeList	current_salary_grade(__no_group)--current_salary_grade;
		employeeSalarySheetList	current_salary_grade(__no_group)--current_salary_grade;
	}
} depth=1; isRoot = false

meta{name=interview_type, features=setting, vg4company=人力资源}
interview_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('INTRVW00'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: interviewTypeList,type:retail_store_country_center;
		string	description('特别情况面试|离职面试|信息面试|入职面试'), verb: false, required: true,type:string;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeInterviewList	interview_type(__no_group)--interview_type;
	}
} depth=1; isRoot = false

meta{name=training_course_type, features=setting, vg4company=人力资源}
training_course_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('TC00'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: trainingCourseTypeList,type:retail_store_country_center;
		string	name('入职培训|售前培训|技术培训|管理培训|外训'), verb: false, required: true,type:string;
		string	description('培训是提升个人和企业竞争力的法宝'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		companyTrainingList	training_course_type(__no_group)--training_course_type;
	}
} depth=1; isRoot = false

meta{name=public_holiday, features=setting, vg4company=人力资源}
public_holiday{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('PH00'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: publicHolidayList,type:retail_store_country_center;
		string	name('元旦节|春节|妇女节|清明节|端午节|暑假|国庆节|中秋节'), verb: false, required: true,type:string;
		string	description('节日快乐，万事如意！'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=termination}
termination{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		termination_reason	reason('$(object)'), verb: false, required: true, referenceBy: terminationList,type:termination_reason;
		termination_type	type('$(object)'), verb: false, required: true, referenceBy: terminationList,type:termination_type;
		string	comment('员工离职'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=view}
view{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	who('面试官'), verb: false, required: true,type:string;
		string	assessment('小伙子不错，值得培养'), verb: false, required: true,type:string;
		date	interview_time('2017-03-03'), verb: false, required: true,type:date;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=0; isRoot = true

meta{name=employee, vg4company=人力资源}
employee{
	fields(16){
		string	id('AB'), verb: false, required: true,type:id;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: employeeList,type:retail_store_country_center;
		string	title('程序员'), verb: false, required: true,type:string;
		level_three_department	department('$(object)'), verb: false, required: true, referenceBy: employeeList,type:level_three_department;
		string	family_name('张|王|李|贺'), verb: false, required: true,type:string;
		string	given_name('文强|大伟|字章'), verb: false, required: true,type:string;
		string_email	email('share@163.com'), verb: false, required: true,type:string_email;
		string	city('北京|天津|成都|上海|深圳|广州|西安'), verb: false, required: true,type:string;
		string	address('学院路234号'), verb: false, required: true,type:string;
		string_china_mobile_phone	cell_phone('18677778888'), verb: false, required: true,type:string_china_mobile_phone;
		occupation_type	occupation('$(object)'), verb: false, required: true, referenceBy: employeeList,type:occupation_type;
		responsibility_type	responsible_for('$(object)'), verb: false, required: true, referenceBy: employeeList,type:responsibility_type;
		salary_grade	current_salary_grade('$(object)'), verb: false, required: true, referenceBy: employeeList,type:salary_grade;
		string	salary_account('6226 7788 9908 '), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(12){
		employeeCompanyTrainingList	employee(__no_group)--employee;
		employeeSkillList	employee(__no_group)--employee;
		employeePerformanceList	employee(__no_group)--employee;
		employeeWorkExperienceList	employee(__no_group)--employee;
		employeeLeaveList	who(__no_group)--who;
		employeeInterviewList	employee(__no_group)--employee;
		employeeAttendanceList	employee(__no_group)--employee;
		employeeQualifierList	employee(__no_group)--employee;
		employeeEducationList	employee(__no_group)--employee;
		employeeAwardList	employee(__no_group)--employee;
		employeeSalarySheetList	employee(__no_group)--employee;
		payingOffList	paid_for(__no_group)--paid_for;
	}
} depth=4; isRoot = false

meta{name=instructor, vg4company=人力资源}
instructor{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('高级讲师'), verb: false, required: true,type:string;
		string	family_name('张|王|李|贺'), verb: false, required: true,type:string;
		string	given_name('文强|大伟|字章'), verb: false, required: true,type:string;
		string_china_mobile_phone	cell_phone('18699990000'), verb: false, required: true,type:string_china_mobile_phone;
		string_email	email('instructor@gmail.com'), verb: false, required: true,type:string_email;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: instructorList,type:retail_store_country_center;
		string	introduction('这是一个长长长长长长长长的介绍'), verb: false, required: true,type:string;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		companyTrainingList	instructor(__no_group)--instructor;
	}
} depth=1; isRoot = false

meta{name=company_training, vg4company=人力资源}
company_training{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('入职培训'), verb: false, required: true,type:string;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: companyTrainingList,type:retail_store_country_center;
		instructor	instructor('$(object)'), verb: false, required: true, referenceBy: companyTrainingList,type:instructor;
		training_course_type	training_course_type('$(object)'), verb: false, required: true, referenceBy: companyTrainingList,type:training_course_type;
		date_past	time_start('past()'), verb: false, required: true,type:date_past;
		int	duration_hours('3'), verb: false, required: true,type:int;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true,type:date_time_update;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeCompanyTrainingList	training(__no_group)--training;
	}
} depth=2; isRoot = false

meta{name=scoring}
scoring{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	scored_by('王志文'), verb: false, required: true,type:string;
		int	score('100'), verb: false, required: true,type:int;
		string	comment('这个题做的真不错啊'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeCompanyTrainingList	scoring(__no_group)--scoring;
	}
} depth=0; isRoot = true

meta{name=employee_company_training}
employee_company_training{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeCompanyTrainingList,type:employee;
		company_training	training('$(object)'), verb: false, required: true, referenceBy: employeeCompanyTrainingList,type:company_training;
		scoring	scoring('$(object)'), verb: false, required: true, referenceBy: employeeCompanyTrainingList,type:scoring;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_skill}
employee_skill{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeSkillList,type:employee;
		skill_type	skill_type('$(object)'), verb: false, required: true, referenceBy: employeeSkillList,type:skill_type;
		string	description('高手高手高高手'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_performance}
employee_performance{
	fields(4){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeePerformanceList,type:employee;
		string	performance_comment('绩效大大的不错'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_work_experience}
employee_work_experience{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeWorkExperienceList,type:employee;
		date	start('2008-01-10'), verb: false, required: true,type:date;
		date	end('2018-01-10'), verb: false, required: true,type:date;
		string	company('丝芙兰化妆品公司'), verb: false, required: true,type:string;
		string	description('在此期间取得非常好的绩效，赢得了客户的信赖'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_leave}
employee_leave{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		employee	who('$(object)'), verb: false, required: true, referenceBy: employeeLeaveList,type:employee;
		leave_type	type('$(object)'), verb: false, required: true, referenceBy: employeeLeaveList,type:leave_type;
		int	leave_duration_hour('8'), verb: false, required: true,type:int;
		string	remark('请年假，出去耍！！！！'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_interview}
employee_interview{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeInterviewList,type:employee;
		interview_type	interview_type('$(object)'), verb: false, required: true, referenceBy: employeeInterviewList,type:interview_type;
		string	remark('结果不错，面试通过！'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_attendance}
employee_attendance{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeAttendanceList,type:employee;
		date	enter_time('2017-01-01'), verb: false, required: true,type:date;
		date	leave_time('2017-03-01'), verb: false, required: true,type:date;
		int	duration_hours('8'), verb: false, required: true,type:int;
		string	remark('今天状态不错啊'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_qualifier}
employee_qualifier{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeQualifierList,type:employee;
		date	qualified_time('2017-01-01'), verb: false, required: true,type:date;
		string	type('认证药剂师|认证架构师|认证会计师|认证经济师|OCP|CCNA|CCNP'), verb: false, required: true,type:string;
		string	level('高级|中级|初级'), verb: false, required: true,type:string;
		string	remark('考试成绩当年第一名'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_education}
employee_education{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeEducationList,type:employee;
		date	complete_time('2017-01-01'), verb: false, required: true,type:date;
		string	type('小学|初中|高中|大学|硕士|博士|职业教育'), verb: false, required: true,type:string;
		string	remark('考试成绩当年第一名'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_award}
employee_award{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeAwardList,type:employee;
		date	complete_time('2017-01-01'), verb: false, required: true,type:date;
		string	type('明星员工|销售之星|技术之星|管理之星|终身成就奖'), verb: false, required: true,type:string;
		string	remark('考试成绩当年第一名'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=5; isRoot = false

meta{name=employee_salary_sheet}
employee_salary_sheet{
	fields(12){
		string	id('AB'), verb: false, required: true,type:id;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeSalarySheetList,type:employee;
		salary_grade	current_salary_grade('$(object)'), verb: false, required: true, referenceBy: employeeSalarySheetList,type:salary_grade;
		money	base_salary('$3000.10'), verb: false, required: true,type:money;
		money	bonus('$1000.10'), verb: false, required: true,type:money;
		money	reward('$1000.10'), verb: false, required: true,type:money;
		money	personal_tax('$792.88'), verb: false, required: true,type:money;
		money	social_security('$1100.22'), verb: false, required: true,type:money;
		money	housing_found('$1222.99'), verb: false, required: true,type:money;
		money	job_insurance('$8.88'), verb: false, required: true,type:money;
		paying_off	paying_off('$(object)'), verb: false, required: true, referenceBy: employeeSalarySheetList,type:paying_off;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=6; isRoot = false

meta{name=paying_off}
paying_off{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	who('出纳'), verb: false, required: true,type:string;
		employee	paid_for('$(object)'), verb: false, required: true, referenceBy: payingOffList,type:employee;
		date	paid_time('2018-01-19'), verb: false, required: true,type:date;
		money	amount('$5223.88'), verb: false, required: true,type:money;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		employeeSalarySheetList	paying_off(__no_group)--paying_off;
	}
} depth=5; isRoot = false

meta{name=mobile_app}
mobile_app{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('移动端配置'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		pageList	mobile_app(__no_group)--mobile_app;
		pageTypeList	mobile_app(__no_group)--mobile_app;
	}
} depth=0; isRoot = true

meta{name=page}
page{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	page_title('首页'), verb: false, required: true,type:string;
		string	link_to_url('首页'), verb: false, required: true,type:string;
		page_type	page_type('$(object)'), verb: false, required: true, referenceBy: pageList,type:page_type;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageList,type:mobile_app;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		slideList	page(__no_group)--page;
		uiActionList	page(__no_group)--page;
		sectionList	page(__no_group)--page;
	}
} depth=2; isRoot = false

meta{name=page_type, features=status, identified_by=code}
page_type{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('首页|我的|Generic Page|Listof Page|功能大厅|普通'), verb: false, required: true,type:string;
		string	code('home|me|generic-page|listof-page|service-center|simple'), verb: false, required: true,type:string;
		mobile_app	mobile_app('$(object)'), verb: false, required: true, referenceBy: pageTypeList,type:mobile_app;
		bool	footer_tab('true|false'), verb: false, required: true,type:bool;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		pageList	page_type(__no_group)--page_type;
	}
} depth=1; isRoot = false

meta{name=slide}
slide{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('首页Focus的内容'), verb: false, required: true,type:string;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string_image	video_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string	link_to_url('|/section/article/'), verb: false, required: false,type:string;
		page	page('$(object)'), verb: false, required: true, referenceBy: slideList,type:page;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=ui_action}
ui_action{
	fields(11){
		string	id('AB'), verb: false, required: true,type:id;
		string	code('submit|share|view|more'), verb: false, required: true,type:string;
		string	icon('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	title('提交|分享|查看|更多'), verb: false, required: true,type:string;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		string	brief('Submit|Share|View|View More'), verb: false, required: true,type:string;
		string_image	image_url('https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_1.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_2.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_3.jpg|https://xubai-test.oss-cn-beijing.aliyuncs.com/app/test/slide_4.jpg'), verb: false, required: true,type:string_image;
		string	link_to_url('wxappService/section/article/'), verb: false, required: true,type:string;
		string_longtext	extra_data('text()'), verb: false, required: true,type:string_longtext;
		page	page('$(object)'), verb: false, required: true, referenceBy: uiActionList,type:page;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=section}
section{
	fields(9){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('文章|作品'), verb: false, required: true,type:string;
		string	brief('Article|Artwork'), verb: false, required: true,type:string;
		string_image	icon('icon.jpg'), verb: false, required: true,type:string_image;
		int	display_order('1|2|3'), verb: false, required: true,type:int;
		string	view_group('icon_edit|icon_share|icon_eye|icon_more'), verb: false, required: true,type:string;
		string	link_to_url('wxappService/section/article/'), verb: false, required: true,type:string;
		page	page('$(object)'), verb: false, required: true, referenceBy: sectionList,type:page;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=user_domain, features=ootb}
user_domain{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('用户区域'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(3){
		userWhiteListList	domain(__no_group)--domain;
		secUserList	domain(__no_group)--domain;
		publicKeyTypeList	domain(__no_group)--domain;
	}
} depth=0; isRoot = true

meta{name=user_white_list, features=syssetting}
user_white_list{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	user_identity('clariones|13808188512'), verb: false, required: true,type:string;
		string	user_special_functions('tester;ios-spokesperson'), verb: false, required: true,type:string;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: userWhiteListList,type:user_domain;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=sec_user, features=ootb, identified_by=login,email,mobile}
sec_user{
	fields(13){
		string	id('AB'), verb: false, required: true,type:id;
		string	login('login'), verb: false, required: true,type:string;
		string_china_mobile_phone	mobile('13900000001'), verb: false, required: true,type:string_china_mobile_phone;
		string_email	email('suddy_chang@163.com'), verb: false, required: true,type:string_email;
		string_password	pwd('*******'), verb: false, required: true,type:string_password;
		string	weixin_openid('wx123456789abcdefghijklmn'), verb: false, required: true,type:string;
		string	weixin_appid('wxapp12098410239840'), verb: false, required: true,type:string;
		string	access_token('jwt_token_12345678'), verb: false, required: true,type:string;
		int	verification_code('0|9999999'), verb: false, required: true,type:int;
		date_time	verification_code_expire('2099-12-31T09:09:09'), verb: false, required: true,type:date_time;
		date_time	last_login_time('2099-12-31T09:09:09'), verb: false, required: false,type:date_time;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: secUserList,type:user_domain;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(5){
		userAppList	sec_user(__no_group)--sec_user;
		loginHistoryList	sec_user(__no_group)--sec_user;
		wechatWorkappIdentifyList	sec_user(__no_group)--sec_user;
		wechatMiniappIdentifyList	sec_user(__no_group)--sec_user;
		keypairIdentifyList	sec_user(__no_group)--sec_user;
	}
} depth=1; isRoot = false

meta{name=user_app, features=ootb}
user_app{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	title('审车平台|账户管理|接车公司|审车公司|维修公司|顾客'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: userAppList,type:sec_user;
		string	app_icon('users|bank|wechat|bar-chart|user|users'), verb: false, required: true,type:string;
		bool	full_access('true'), verb: false, required: true,type:bool;
		string	permission('MXWR|MXWR'), verb: false, required: true,type:string;
		string	object_type('CarInspectionPlatform|UserDomain|CarReceivingServiceCompany|CarInspectionServiceCompany|CarRepairingServiceCompany|CustomerInfo'), verb: false, required: true,type:string;
		string	object_id('CIP000001|UD000001|CRSC000001|CISC000001|CRSC000001|CI000001'), verb: false, required: true,type:string;
		string	location('/link/to/app'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(2){
		quickLinkList	app(__no_group)--app;
		listAccessList	app(__no_group)--app;
	}
} depth=2; isRoot = false

meta{name=quick_link, features=ootb}
quick_link{
	fields(8){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('列表'), verb: false, required: true,type:string;
		string	icon('facebook|google'), verb: false, required: true,type:string;
		string_image	image_path('y-200-200-red.jpg'), verb: false, required: true,type:string_image;
		string	link_target('列表'), verb: false, required: true,type:string;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: quickLinkList,type:user_app;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=list_access, features=ootb}
list_access{
	fields(10){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('列表'), verb: false, required: true,type:string;
		string	internal_name('levelOneCategoryList'), verb: false, required: true,type:string;
		bool	read_permission('true'), verb: false, required: true,type:bool;
		bool	create_permission('true'), verb: false, required: true,type:bool;
		bool	delete_permission('true'), verb: false, required: true,type:bool;
		bool	update_permission('true'), verb: false, required: true,type:bool;
		bool	execution_permission('true'), verb: false, required: true,type:bool;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: listAccessList,type:user_app;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=3; isRoot = false

meta{name=login_history, features=syslog}
login_history{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		date_time_create	login_time('createTime()'), verb: false, required: true,type:date_time_create;
		string	from_ip('192.168.1.1|192.168.1.2'), verb: false, required: true,type:string;
		string	description('登陆成功'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: loginHistoryList,type:sec_user;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=candidate_container, features=internal,ootb}
candidate_container{
	fields(3){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('我只是一个容器'), verb: false, required: true,type:string;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		candidateElementList	container(__no_group)--container;
	}
} depth=0; isRoot = true

meta{name=candidate_element, features=internal,ootb}
candidate_element{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('搜索到的匹配字段'), verb: false, required: true,type:string;
		string	type('类型描述'), verb: false, required: true,type:string;
		string_image	image('1.jpg'), verb: false, required: true,type:string_image;
		candidate_container	container('$(object)'), verb: false, required: true, referenceBy: candidateElementList,type:candidate_container;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=1; isRoot = false

meta{name=wechat_workapp_identify}
wechat_workapp_identify{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	corp_id('corporation123'), verb: false, required: true,type:string;
		string	user_id('user123'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatWorkappIdentifyList,type:sec_user;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=wechat_miniapp_identify}
wechat_miniapp_identify{
	fields(7){
		string	id('AB'), verb: false, required: true,type:id;
		string	open_id('wechat_open_id_1234567890'), verb: false, required: true,type:string;
		string	app_id('wechat_miniapp_id_1234567890'), verb: false, required: true,type:string;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: wechatMiniappIdentifyList,type:sec_user;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		date_time	last_login_time('2100-01-01T00:00:00'), verb: false, required: false,type:date_time;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=keypair_identify}
keypair_identify{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string_longtext	public_key('text()'), verb: false, required: true,type:string_longtext;
		public_key_type	key_type('$(object)'), verb: false, required: true, referenceBy: keypairIdentifyList,type:public_key_type;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: keypairIdentifyList,type:sec_user;
		date_time_create	create_time('createTime()'), verb: false, required: true,type:date_time_create;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=2; isRoot = false

meta{name=public_key_type}
public_key_type{
	fields(5){
		string	id('AB'), verb: false, required: true,type:id;
		string	name('rsa|ecc'), verb: false, required: true,type:string;
		string	code('rsa|ecc'), verb: false, required: true,type:string;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: publicKeyTypeList,type:user_domain;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(1){
		keypairIdentifyList	key_type(__no_group)--key_type;
	}
} depth=1; isRoot = false

meta{name=tree_node}
tree_node{
	fields(6){
		string	id('AB'), verb: false, required: true,type:id;
		string	node_id('node000001'), verb: false, required: true,type:string;
		string	node_type('nodetype'), verb: false, required: true,type:string;
		int	left_value('1'), verb: false, required: true,type:int;
		int	right_value('10'), verb: false, required: true,type:int;
		int	version('2147483647'), verb: false, required: true,type:int;
	}
	references field(0){
	}
} depth=0; isRoot = true




=================================End Report=================================
