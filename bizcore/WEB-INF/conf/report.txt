@warning sku.barcode: word 'barcode' seems not found in library
@warning object definition: member_wishlist: word 'wishlist' seems not found in library
@warning retail_store_member_gift_card_consume_record.occure_time: word 'occure' seems not found in library
@warning goods.rfid: word 'rfid' seems not found in library
@warning goods.uom: word 'uom' seems not found in library

#Error field definition: province_center_department.manager: word 'manager' in keywords set skynet.kw; 
#Error field definition: level_one_department.manager: word 'manager' in keywords set skynet.kw; 


=================Execute Report (Model Time 181218T0136) @Wed Jan 09 15:20:33 CST 2019, 150 objects and 997 fields===========================



 processing: retail_store_country_center


 processing: catalog


 processing: catalog.retail_store_country_center.owner

Info: Add virtual field [catalogs(es)] to <retail_store_country_center>
	catalog.owner


 processing: level_one_category


 processing: level_one_category.catalog.catalog

Info: Add virtual field [level_one_categorys(es)] to <catalog>
	level_one_category.catalog


 processing: level_two_category


 processing: level_two_category.level_one_category.parent_category

Info: Add virtual field [level_two_categorys(es)] to <level_one_category>
	level_two_category.parent_category


 processing: level_three_category


 processing: level_three_category.level_two_category.parent_category

Info: Add virtual field [level_three_categorys(es)] to <level_two_category>
	level_three_category.parent_category


 processing: product


 processing: product.level_three_category.parent_category

Info: Add virtual field [products(es)] to <level_three_category>
	product.parent_category


 processing: sku


 processing: sku.product.product

Info: Add virtual field [skus(es)] to <product>
	sku.product


 processing: retail_store_province_center


 processing: retail_store_province_center.retail_store_country_center.country

Info: Add virtual field [retail_store_province_centers(es)] to <retail_store_country_center>
	retail_store_province_center.country


 processing: province_center_department


 processing: province_center_department.retail_store_province_center.province_center

Info: Add virtual field [province_center_departments(es)] to <retail_store_province_center>
	province_center_department.province_center


 processing: province_center_employee


 processing: province_center_employee.province_center_department.department

Info: Add virtual field [province_center_employees(es)] to <province_center_department>
	province_center_employee.department


 processing: province_center_employee.retail_store_province_center.province_center

Info: Add virtual field [province_center_employees(es)] to <retail_store_province_center>
	province_center_employee.province_center


 processing: retail_store_city_service_center


 processing: retail_store_city_service_center.retail_store_province_center.belongs_to

Info: Add virtual field [retail_store_city_service_centers(es)] to <retail_store_province_center>
	retail_store_city_service_center.belongs_to


 processing: city_partner


 processing: city_partner.retail_store_city_service_center.city_service_center

Info: Add virtual field [city_partners(es)] to <retail_store_city_service_center>
	city_partner.city_service_center


 processing: potential_customer


 processing: potential_customer.retail_store_city_service_center.city_service_center

Info: Add virtual field [potential_customers(es)] to <retail_store_city_service_center>
	potential_customer.city_service_center


 processing: potential_customer.city_partner.city_partner

Info: Add virtual field [potential_customers(es)] to <city_partner>
	potential_customer.city_partner


 processing: potential_customer_contact_person


 processing: potential_customer_contact_person.potential_customer.potential_customer

Info: Add virtual field [potential_customer_contact_persons(es)] to <potential_customer>
	potential_customer_contact_person.potential_customer


 processing: potential_customer_contact


 processing: potential_customer_contact.potential_customer.potential_customer

Info: Add virtual field [potential_customer_contacts(es)] to <potential_customer>
	potential_customer_contact.potential_customer


 processing: potential_customer_contact.city_partner.city_partner

Info: Add virtual field [potential_customer_contacts(es)] to <city_partner>
	potential_customer_contact.city_partner


 processing: potential_customer_contact.potential_customer_contact_person.contact_to

Info: Add virtual field [potential_customer_contacts(es)] to <potential_customer_contact_person>
	potential_customer_contact.contact_to


 processing: city_event


 processing: city_event.retail_store_city_service_center.city_service_center

Info: Add virtual field [city_events(es)] to <retail_store_city_service_center>
	city_event.city_service_center


 processing: event_attendance


 processing: event_attendance.potential_customer.potential_customer

Info: Add virtual field [event_attendances(es)] to <potential_customer>
	event_attendance.potential_customer


 processing: event_attendance.city_event.city_event

Info: Add virtual field [event_attendances(es)] to <city_event>
	event_attendance.city_event


 processing: retail_store


 processing: retail_store.retail_store_country_center.retail_store_country_center

Info: Add virtual field [retail_stores(es)] to <retail_store_country_center>
	retail_store.retail_store_country_center


 processing: retail_store.retail_store_city_service_center.city_service_center

Info: Add virtual field [retail_stores(es)] to <retail_store_city_service_center>
	retail_store.city_service_center


 processing: retail_store.retail_store_creation.creation

Info: Add virtual field [retail_stores(es)] to <retail_store_creation>
	retail_store.creation


 processing: retail_store.retail_store_investment_invitation.investment_invitation

Info: Add virtual field [retail_stores(es)] to <retail_store_investment_invitation>
	retail_store.investment_invitation


 processing: retail_store.retail_store_franchising.franchising

Info: Add virtual field [retail_stores(es)] to <retail_store_franchising>
	retail_store.franchising


 processing: retail_store.retail_store_decoration.decoration

Info: Add virtual field [retail_stores(es)] to <retail_store_decoration>
	retail_store.decoration


 processing: retail_store.retail_store_opening.opening

Info: Add virtual field [retail_stores(es)] to <retail_store_opening>
	retail_store.opening


 processing: retail_store.retail_store_closing.closing

Info: Add virtual field [retail_stores(es)] to <retail_store_closing>
	retail_store.closing


 processing: retail_store_creation


 processing: retail_store_investment_invitation


 processing: retail_store_franchising


 processing: retail_store_decoration


 processing: retail_store_opening


 processing: retail_store_closing


 processing: retail_store_member


 processing: retail_store_member.retail_store_country_center.owner

Info: Add virtual field [retail_store_members(es)] to <retail_store_country_center>
	retail_store_member.owner


 processing: consumer_order


 processing: consumer_order.retail_store_member.consumer

Info: Add virtual field [consumer_orders(es)] to <retail_store_member>
	consumer_order.consumer


 processing: consumer_order.supply_order_confirmation.confirmation

Info: Add virtual field [consumer_orders(es)] to <supply_order_confirmation>
	consumer_order.confirmation


 processing: consumer_order.supply_order_approval.approval

Info: Add virtual field [consumer_orders(es)] to <supply_order_approval>
	consumer_order.approval


 processing: consumer_order.supply_order_processing.processing

Info: Add virtual field [consumer_orders(es)] to <supply_order_processing>
	consumer_order.processing


 processing: consumer_order.supply_order_shipment.shipment

Info: Add virtual field [consumer_orders(es)] to <supply_order_shipment>
	consumer_order.shipment


 processing: consumer_order.supply_order_delivery.delivery

Info: Add virtual field [consumer_orders(es)] to <supply_order_delivery>
	consumer_order.delivery


 processing: consumer_order.retail_store.store

Info: Add virtual field [consumer_orders(es)] to <retail_store>
	consumer_order.store


 processing: consumer_order_confirmation


 processing: consumer_order_approval


 processing: consumer_order_processing


 processing: consumer_order_shipment


 processing: consumer_order_delivery


 processing: consumer_order_line_item


 processing: consumer_order_line_item.consumer_order.biz_order

Info: Add virtual field [consumer_order_line_items(es)] to <consumer_order>
	consumer_order_line_item.biz_order


 processing: consumer_order_shipping_group


 processing: consumer_order_shipping_group.consumer_order.biz_order

Info: Add virtual field [consumer_order_shipping_groups(es)] to <consumer_order>
	consumer_order_shipping_group.biz_order


 processing: consumer_order_payment_group


 processing: consumer_order_payment_group.consumer_order.biz_order

Info: Add virtual field [consumer_order_payment_groups(es)] to <consumer_order>
	consumer_order_payment_group.biz_order


 processing: consumer_order_price_adjustment


 processing: consumer_order_price_adjustment.consumer_order.biz_order

Info: Add virtual field [consumer_order_price_adjustments(es)] to <consumer_order>
	consumer_order_price_adjustment.biz_order


 processing: retail_store_member_coupon


 processing: retail_store_member_coupon.retail_store_member.owner

Info: Add virtual field [retail_store_member_coupons(es)] to <retail_store_member>
	retail_store_member_coupon.owner


 processing: member_wishlist


 processing: member_wishlist.retail_store_member.owner

Info: Add virtual field [member_wishlists(es)] to <retail_store_member>
	member_wishlist.owner


 processing: member_reward_point


 processing: member_reward_point.retail_store_member.owner

Info: Add virtual field [member_reward_points(es)] to <retail_store_member>
	member_reward_point.owner


 processing: member_reward_point_redemption


 processing: member_reward_point_redemption.retail_store_member.owner

Info: Add virtual field [member_reward_point_redemptions(es)] to <retail_store_member>
	member_reward_point_redemption.owner


 processing: member_wishlist_product


 processing: member_wishlist_product.member_wishlist.owner

Info: Add virtual field [member_wishlist_products(es)] to <member_wishlist>
	member_wishlist_product.owner


 processing: retail_store_member_address


 processing: retail_store_member_address.retail_store_member.owner

Info: Add virtual field [retail_store_member_addresss(es)] to <retail_store_member>
	retail_store_member_address.owner


 processing: retail_store_member_gift_card


 processing: retail_store_member_gift_card.retail_store_member.owner

Info: Add virtual field [retail_store_member_gift_cards(es)] to <retail_store_member>
	retail_store_member_gift_card.owner


 processing: retail_store_member_gift_card_consume_record


 processing: retail_store_member_gift_card_consume_record.retail_store_member_gift_card.owner

Info: Add virtual field [retail_store_member_gift_card_consume_records(es)] to <retail_store_member_gift_card>
	retail_store_member_gift_card_consume_record.owner


 processing: retail_store_member_gift_card_consume_record.consumer_order.biz_order

Info: Add virtual field [retail_store_member_gift_card_consume_records(es)] to <consumer_order>
	retail_store_member_gift_card_consume_record.biz_order


 processing: goods_supplier


 processing: goods_supplier.retail_store_country_center.belong_to

Info: Add virtual field [goods_suppliers(es)] to <retail_store_country_center>
	goods_supplier.belong_to


 processing: supplier_product


 processing: supplier_product.goods_supplier.supplier

Info: Add virtual field [supplier_products(es)] to <goods_supplier>
	supplier_product.supplier


 processing: product_supply_duration


 processing: product_supply_duration.supplier_product.product

Info: Add virtual field [product_supply_durations(es)] to <supplier_product>
	product_supply_duration.product


 processing: supply_order


 processing: supply_order.retail_store_country_center.buyer

Info: Add virtual field [supply_orders(es)] to <retail_store_country_center>
	supply_order.buyer


 processing: supply_order.goods_supplier.seller

Info: Add virtual field [supply_orders(es)] to <goods_supplier>
	supply_order.seller


 processing: supply_order.supply_order_confirmation.confirmation

Info: Add virtual field [supply_orders(es)] to <supply_order_confirmation>
	supply_order.confirmation


 processing: supply_order.supply_order_approval.approval

Info: Add virtual field [supply_orders(es)] to <supply_order_approval>
	supply_order.approval


 processing: supply_order.supply_order_processing.processing

Info: Add virtual field [supply_orders(es)] to <supply_order_processing>
	supply_order.processing


 processing: supply_order.supply_order_picking.picking

Info: Add virtual field [supply_orders(es)] to <supply_order_picking>
	supply_order.picking


 processing: supply_order.supply_order_shipment.shipment

Info: Add virtual field [supply_orders(es)] to <supply_order_shipment>
	supply_order.shipment


 processing: supply_order.supply_order_delivery.delivery

Info: Add virtual field [supply_orders(es)] to <supply_order_delivery>
	supply_order.delivery


 processing: supply_order_confirmation


 processing: supply_order_approval


 processing: supply_order_processing


 processing: supply_order_picking


 processing: supply_order_shipment


 processing: supply_order_delivery


 processing: supply_order_line_item


 processing: supply_order_line_item.supply_order.biz_order

Info: Add virtual field [supply_order_line_items(es)] to <supply_order>
	supply_order_line_item.biz_order


 processing: supply_order_shipping_group


 processing: supply_order_shipping_group.supply_order.biz_order

Info: Add virtual field [supply_order_shipping_groups(es)] to <supply_order>
	supply_order_shipping_group.biz_order


 processing: supply_order_payment_group


 processing: supply_order_payment_group.supply_order.biz_order

Info: Add virtual field [supply_order_payment_groups(es)] to <supply_order>
	supply_order_payment_group.biz_order


 processing: retail_store_order


 processing: retail_store_order.retail_store.buyer

Info: Add virtual field [retail_store_orders(es)] to <retail_store>
	retail_store_order.buyer


 processing: retail_store_order.retail_store_country_center.seller

Info: Add virtual field [retail_store_orders(es)] to <retail_store_country_center>
	retail_store_order.seller


 processing: retail_store_order.retail_store_order_confirmation.confirmation

Info: Add virtual field [retail_store_orders(es)] to <retail_store_order_confirmation>
	retail_store_order.confirmation


 processing: retail_store_order.retail_store_order_approval.approval

Info: Add virtual field [retail_store_orders(es)] to <retail_store_order_approval>
	retail_store_order.approval


 processing: retail_store_order.retail_store_order_processing.processing

Info: Add virtual field [retail_store_orders(es)] to <retail_store_order_processing>
	retail_store_order.processing


 processing: retail_store_order.retail_store_order_picking.picking

Info: Add virtual field [retail_store_orders(es)] to <retail_store_order_picking>
	retail_store_order.picking


 processing: retail_store_order.retail_store_order_shipment.shipment

Info: Add virtual field [retail_store_orders(es)] to <retail_store_order_shipment>
	retail_store_order.shipment


 processing: retail_store_order.retail_store_order_delivery.delivery

Info: Add virtual field [retail_store_orders(es)] to <retail_store_order_delivery>
	retail_store_order.delivery


 processing: retail_store_order_confirmation


 processing: retail_store_order_approval


 processing: retail_store_order_processing


 processing: retail_store_order_picking


 processing: retail_store_order_shipment


 processing: retail_store_order_delivery


 processing: retail_store_order_line_item


 processing: retail_store_order_line_item.retail_store_order.biz_order

Info: Add virtual field [retail_store_order_line_items(es)] to <retail_store_order>
	retail_store_order_line_item.biz_order


 processing: retail_store_order_shipping_group


 processing: retail_store_order_shipping_group.retail_store_order.biz_order

Info: Add virtual field [retail_store_order_shipping_groups(es)] to <retail_store_order>
	retail_store_order_shipping_group.biz_order


 processing: retail_store_order_payment_group


 processing: retail_store_order_payment_group.retail_store_order.biz_order

Info: Add virtual field [retail_store_order_payment_groups(es)] to <retail_store_order>
	retail_store_order_payment_group.biz_order


 processing: warehouse


 processing: warehouse.retail_store_country_center.owner

Info: Add virtual field [warehouses(es)] to <retail_store_country_center>
	warehouse.owner


 processing: storage_space


 processing: storage_space.warehouse.warehouse

Info: Add virtual field [storage_spaces(es)] to <warehouse>
	storage_space.warehouse


 processing: smart_pallet


 processing: smart_pallet.warehouse.warehouse

Info: Add virtual field [smart_pallets(es)] to <warehouse>
	smart_pallet.warehouse


 processing: goods_shelf


 processing: goods_shelf.storage_space.storage_space

Info: Add virtual field [goods_shelfs(es)] to <storage_space>
	goods_shelf.storage_space


 processing: goods_shelf.supplier_space.supplier_space

Info: Add virtual field [goods_shelfs(es)] to <supplier_space>
	goods_shelf.supplier_space


 processing: goods_shelf.damage_space.damage_space

Info: Add virtual field [goods_shelfs(es)] to <damage_space>
	goods_shelf.damage_space


 processing: goods_shelf_stock_count


 processing: goods_shelf_stock_count.goods_shelf.shelf

Info: Add virtual field [goods_shelf_stock_counts(es)] to <goods_shelf>
	goods_shelf_stock_count.shelf


 processing: stock_count_issue_track


 processing: stock_count_issue_track.goods_shelf_stock_count.stock_count

Info: Add virtual field [stock_count_issue_tracks(es)] to <goods_shelf_stock_count>
	stock_count_issue_track.stock_count


 processing: goods_allocation


 processing: goods_allocation.goods_shelf.goods_shelf

Info: Add virtual field [goods_allocations(es)] to <goods_shelf>
	goods_allocation.goods_shelf


 processing: goods


 processing: goods.sku.sku

Info: Add virtual field [goodss(es)] to <sku>
	goods.sku


 processing: goods.receiving_space.receiving_space

Info: Add virtual field [goodss(es)] to <receiving_space>
	goods.receiving_space


 processing: goods.goods_allocation.goods_allocation

Info: Add virtual field [goodss(es)] to <goods_allocation>
	goods.goods_allocation


 processing: goods.smart_pallet.smart_pallet

Info: Add virtual field [goodss(es)] to <smart_pallet>
	goods.smart_pallet


 processing: goods.shipping_space.shipping_space

Info: Add virtual field [goodss(es)] to <shipping_space>
	goods.shipping_space


 processing: goods.transport_task.transport_task

Info: Add virtual field [goodss(es)] to <transport_task>
	goods.transport_task


 processing: goods.retail_store.retail_store

Info: Add virtual field [goodss(es)] to <retail_store>
	goods.retail_store


 processing: goods.supply_order.biz_order

Info: Add virtual field [goodss(es)] to <supply_order>
	goods.biz_order


 processing: goods.retail_store_order.retail_store_order

Info: Add virtual field [goodss(es)] to <retail_store_order>
	goods.retail_store_order


 processing: goods.goods_packaging.packaging

Info: Add virtual field [goodss(es)] to <goods_packaging>
	goods.packaging


 processing: goods_packaging


 processing: goods_movement


 processing: goods_movement.goods.goods

Info: Add virtual field [goods_movements(es)] to <goods>
	goods_movement.goods


 processing: supplier_space


 processing: supplier_space.warehouse.warehouse

Info: Add virtual field [supplier_spaces(es)] to <warehouse>
	supplier_space.warehouse


 processing: receiving_space


 processing: receiving_space.warehouse.warehouse

Info: Add virtual field [receiving_spaces(es)] to <warehouse>
	receiving_space.warehouse


 processing: shipping_space


 processing: shipping_space.warehouse.warehouse

Info: Add virtual field [shipping_spaces(es)] to <warehouse>
	shipping_space.warehouse


 processing: damage_space


 processing: damage_space.warehouse.warehouse

Info: Add virtual field [damage_spaces(es)] to <warehouse>
	damage_space.warehouse


 processing: warehouse_asset


 processing: warehouse_asset.warehouse.owner

Info: Add virtual field [warehouse_assets(es)] to <warehouse>
	warehouse_asset.owner


 processing: transport_fleet


 processing: transport_fleet.retail_store_country_center.owner

Info: Add virtual field [transport_fleets(es)] to <retail_store_country_center>
	transport_fleet.owner


 processing: transport_truck


 processing: transport_truck.transport_fleet.owner

Info: Add virtual field [transport_trucks(es)] to <transport_fleet>
	transport_truck.owner


 processing: truck_driver


 processing: truck_driver.transport_fleet.belongs_to

Info: Add virtual field [truck_drivers(es)] to <transport_fleet>
	truck_driver.belongs_to


 processing: transport_task


 processing: transport_task.retail_store.end

Info: Add virtual field [transport_tasks(es)] to <retail_store>
	transport_task.end


 processing: transport_task.truck_driver.driver

Info: Add virtual field [transport_tasks(es)] to <truck_driver>
	transport_task.driver


 processing: transport_task.transport_truck.truck

Info: Add virtual field [transport_tasks(es)] to <transport_truck>
	transport_task.truck


 processing: transport_task.transport_fleet.belongs_to

Info: Add virtual field [transport_tasks(es)] to <transport_fleet>
	transport_task.belongs_to


 processing: transport_task_track


 processing: transport_task_track.transport_task.movement

Info: Add virtual field [transport_task_tracks(es)] to <transport_task>
	transport_task_track.movement


 processing: account_set


 processing: account_set.retail_store_country_center.country_center

Info: Add virtual field [account_sets(es)] to <retail_store_country_center>
	account_set.country_center


 processing: account_set.retail_store.retail_store

Info: Add virtual field [account_sets(es)] to <retail_store>
	account_set.retail_store


 processing: account_set.goods_supplier.goods_supplier

Info: Add virtual field [account_sets(es)] to <goods_supplier>
	account_set.goods_supplier


 processing: accounting_subject


 processing: accounting_subject.account_set.account_set

Info: Add virtual field [accounting_subjects(es)] to <account_set>
	accounting_subject.account_set


 processing: accounting_period


 processing: accounting_period.account_set.account_set

Info: Add virtual field [accounting_periods(es)] to <account_set>
	accounting_period.account_set


 processing: accounting_document_type


 processing: accounting_document_type.account_set.accounting_period

Info: Add virtual field [accounting_document_types(es)] to <account_set>
	accounting_document_type.accounting_period


 processing: accounting_document


 processing: accounting_document.accounting_period.accounting_period

Info: Add virtual field [accounting_documents(es)] to <accounting_period>
	accounting_document.accounting_period


 processing: accounting_document.accounting_document_type.document_type

Info: Add virtual field [accounting_documents(es)] to <accounting_document_type>
	accounting_document.document_type


 processing: accounting_document.accounting_document_creation.creation

Info: Add virtual field [accounting_documents(es)] to <accounting_document_creation>
	accounting_document.creation


 processing: accounting_document.accounting_document_confirmation.confirmation

Info: Add virtual field [accounting_documents(es)] to <accounting_document_confirmation>
	accounting_document.confirmation


 processing: accounting_document.accounting_document_auditing.auditing

Info: Add virtual field [accounting_documents(es)] to <accounting_document_auditing>
	accounting_document.auditing


 processing: accounting_document.accounting_document_posting.posting

Info: Add virtual field [accounting_documents(es)] to <accounting_document_posting>
	accounting_document.posting


 processing: accounting_document_creation


 processing: accounting_document_confirmation


 processing: accounting_document_auditing


 processing: accounting_document_posting


 processing: original_voucher


 processing: original_voucher.accounting_document.belongs_to

Info: Add virtual field [original_vouchers(es)] to <accounting_document>
	original_voucher.belongs_to


 processing: original_voucher.original_voucher_creation.creation

Info: Add virtual field [original_vouchers(es)] to <original_voucher_creation>
	original_voucher.creation


 processing: original_voucher.original_voucher_confirmation.confirmation

Info: Add virtual field [original_vouchers(es)] to <original_voucher_confirmation>
	original_voucher.confirmation


 processing: original_voucher.original_voucher_auditing.auditing

Info: Add virtual field [original_vouchers(es)] to <original_voucher_auditing>
	original_voucher.auditing


 processing: original_voucher_creation


 processing: original_voucher_confirmation


 processing: original_voucher_auditing


 processing: accounting_document_line


 processing: accounting_document_line.accounting_document.belongs_to

Info: Add virtual field [accounting_document_lines(es)] to <accounting_document>
	accounting_document_line.belongs_to


 processing: accounting_document_line.accounting_subject.accounting_subject

Info: Add virtual field [accounting_document_lines(es)] to <accounting_subject>
	accounting_document_line.accounting_subject


 processing: level_one_department


 processing: level_one_department.retail_store_country_center.belongs_to

Info: Add virtual field [level_one_departments(es)] to <retail_store_country_center>
	level_one_department.belongs_to


 processing: level_two_department


 processing: level_two_department.level_one_department.belongs_to

Info: Add virtual field [level_two_departments(es)] to <level_one_department>
	level_two_department.belongs_to


 processing: level_three_department


 processing: level_three_department.level_two_department.belongs_to

Info: Add virtual field [level_three_departments(es)] to <level_two_department>
	level_three_department.belongs_to


 processing: skill_type


 processing: skill_type.retail_store_country_center.company

Info: Add virtual field [skill_types(es)] to <retail_store_country_center>
	skill_type.company


 processing: responsibility_type


 processing: responsibility_type.retail_store_country_center.company

Info: Add virtual field [responsibility_types(es)] to <retail_store_country_center>
	responsibility_type.company


 processing: termination_reason


 processing: termination_reason.retail_store_country_center.company

Info: Add virtual field [termination_reasons(es)] to <retail_store_country_center>
	termination_reason.company


 processing: termination_type


 processing: termination_type.retail_store_country_center.company

Info: Add virtual field [termination_types(es)] to <retail_store_country_center>
	termination_type.company


 processing: occupation_type


 processing: occupation_type.retail_store_country_center.company

Info: Add virtual field [occupation_types(es)] to <retail_store_country_center>
	occupation_type.company


 processing: leave_type


 processing: leave_type.retail_store_country_center.company

Info: Add virtual field [leave_types(es)] to <retail_store_country_center>
	leave_type.company


 processing: salary_grade


 processing: salary_grade.retail_store_country_center.company

Info: Add virtual field [salary_grades(es)] to <retail_store_country_center>
	salary_grade.company


 processing: interview_type


 processing: interview_type.retail_store_country_center.company

Info: Add virtual field [interview_types(es)] to <retail_store_country_center>
	interview_type.company


 processing: training_course_type


 processing: training_course_type.retail_store_country_center.company

Info: Add virtual field [training_course_types(es)] to <retail_store_country_center>
	training_course_type.company


 processing: public_holiday


 processing: public_holiday.retail_store_country_center.company

Info: Add virtual field [public_holidays(es)] to <retail_store_country_center>
	public_holiday.company


 processing: termination


 processing: termination.termination_reason.reason

Info: Add virtual field [terminations(es)] to <termination_reason>
	termination.reason


 processing: termination.termination_type.type

Info: Add virtual field [terminations(es)] to <termination_type>
	termination.type


 processing: view


 processing: employee


 processing: employee.retail_store_country_center.company

Info: Add virtual field [employees(es)] to <retail_store_country_center>
	employee.company


 processing: employee.level_three_department.department

Info: Add virtual field [employees(es)] to <level_three_department>
	employee.department


 processing: employee.occupation_type.occupation

Info: Add virtual field [employees(es)] to <occupation_type>
	employee.occupation


 processing: employee.responsibility_type.responsible_for

Info: Add virtual field [employees(es)] to <responsibility_type>
	employee.responsible_for


 processing: employee.salary_grade.current_salary_grade

Info: Add virtual field [employees(es)] to <salary_grade>
	employee.current_salary_grade


 processing: employee.job_application.job_application

Info: Add virtual field [employees(es)] to <job_application>
	employee.job_application


 processing: employee.profession_interview.profession_interview

Info: Add virtual field [employees(es)] to <profession_interview>
	employee.profession_interview


 processing: employee.hr_interview.hr_interview

Info: Add virtual field [employees(es)] to <hr_interview>
	employee.hr_interview


 processing: employee.offer_approval.offer_approval

Info: Add virtual field [employees(es)] to <offer_approval>
	employee.offer_approval


 processing: employee.offer_acceptance.offer_acceptance

Info: Add virtual field [employees(es)] to <offer_acceptance>
	employee.offer_acceptance


 processing: employee.employee_boarding.employee_boarding

Info: Add virtual field [employees(es)] to <employee_boarding>
	employee.employee_boarding


 processing: employee.termination.termination

Info: Add virtual field [employees(es)] to <termination>
	employee.termination


 processing: job_application


 processing: profession_interview


 processing: hr_interview


 processing: offer_approval


 processing: offer_acceptance


 processing: employee_boarding


 processing: instructor


 processing: instructor.retail_store_country_center.company

Info: Add virtual field [instructors(es)] to <retail_store_country_center>
	instructor.company


 processing: company_training


 processing: company_training.retail_store_country_center.company

Info: Add virtual field [company_trainings(es)] to <retail_store_country_center>
	company_training.company


 processing: company_training.instructor.instructor

Info: Add virtual field [company_trainings(es)] to <instructor>
	company_training.instructor


 processing: company_training.training_course_type.training_course_type

Info: Add virtual field [company_trainings(es)] to <training_course_type>
	company_training.training_course_type


 processing: scoring


 processing: employee_company_training


 processing: employee_company_training.employee.employee

Info: Add virtual field [employee_company_trainings(es)] to <employee>
	employee_company_training.employee


 processing: employee_company_training.company_training.training

Info: Add virtual field [employee_company_trainings(es)] to <company_training>
	employee_company_training.training


 processing: employee_company_training.scoring.scoring

Info: Add virtual field [employee_company_trainings(es)] to <scoring>
	employee_company_training.scoring


 processing: employee_skill


 processing: employee_skill.employee.employee

Info: Add virtual field [employee_skills(es)] to <employee>
	employee_skill.employee


 processing: employee_skill.skill_type.skill_type

Info: Add virtual field [employee_skills(es)] to <skill_type>
	employee_skill.skill_type


 processing: employee_performance


 processing: employee_performance.employee.employee

Info: Add virtual field [employee_performances(es)] to <employee>
	employee_performance.employee


 processing: employee_work_experience


 processing: employee_work_experience.employee.employee

Info: Add virtual field [employee_work_experiences(es)] to <employee>
	employee_work_experience.employee


 processing: employee_leave


 processing: employee_leave.employee.who

Info: Add virtual field [employee_leaves(es)] to <employee>
	employee_leave.who


 processing: employee_leave.leave_type.type

Info: Add virtual field [employee_leaves(es)] to <leave_type>
	employee_leave.type


 processing: employee_interview


 processing: employee_interview.employee.employee

Info: Add virtual field [employee_interviews(es)] to <employee>
	employee_interview.employee


 processing: employee_interview.interview_type.interview_type

Info: Add virtual field [employee_interviews(es)] to <interview_type>
	employee_interview.interview_type


 processing: employee_attendance


 processing: employee_attendance.employee.employee

Info: Add virtual field [employee_attendances(es)] to <employee>
	employee_attendance.employee


 processing: employee_qualifier


 processing: employee_qualifier.employee.employee

Info: Add virtual field [employee_qualifiers(es)] to <employee>
	employee_qualifier.employee


 processing: employee_education


 processing: employee_education.employee.employee

Info: Add virtual field [employee_educations(es)] to <employee>
	employee_education.employee


 processing: employee_award


 processing: employee_award.employee.employee

Info: Add virtual field [employee_awards(es)] to <employee>
	employee_award.employee


 processing: employee_salary_sheet


 processing: employee_salary_sheet.employee.employee

Info: Add virtual field [employee_salary_sheets(es)] to <employee>
	employee_salary_sheet.employee


 processing: employee_salary_sheet.salary_grade.current_salary_grade

Info: Add virtual field [employee_salary_sheets(es)] to <salary_grade>
	employee_salary_sheet.current_salary_grade


 processing: employee_salary_sheet.paying_off.paying_off

Info: Add virtual field [employee_salary_sheets(es)] to <paying_off>
	employee_salary_sheet.paying_off


 processing: paying_off


 processing: paying_off.employee.paid_for

Info: Add virtual field [paying_offs(es)] to <employee>
	paying_off.paid_for


 processing: user_domain


 processing: user_white_list


 processing: user_white_list.user_domain.domain

Info: Add virtual field [user_white_lists(es)] to <user_domain>
	user_white_list.domain


 processing: sec_user


 processing: sec_user.user_domain.domain

Info: Add virtual field [sec_users(es)] to <user_domain>
	sec_user.domain


 processing: sec_user.sec_user_blocking.blocking

Info: Add virtual field [sec_users(es)] to <sec_user_blocking>
	sec_user.blocking


 processing: sec_user_blocking


 processing: user_app


 processing: user_app.sec_user.sec_user

Info: Add virtual field [user_apps(es)] to <sec_user>
	user_app.sec_user


 processing: list_access


 processing: list_access.user_app.app

Info: Add virtual field [list_accesss(es)] to <user_app>
	list_access.app


 processing: object_access


 processing: object_access.user_app.app

Info: Add virtual field [object_accesss(es)] to <user_app>
	object_access.app


 processing: login_history


 processing: login_history.sec_user.sec_user

Info: Add virtual field [login_historys(es)] to <sec_user>
	login_history.sec_user


 processing: generic_form


 processing: form_message


 processing: form_message.generic_form.form

Info: Add virtual field [form_messages(es)] to <generic_form>
	form_message.form


 processing: form_field_message


 processing: form_field_message.generic_form.form

Info: Add virtual field [form_field_messages(es)] to <generic_form>
	form_field_message.form


 processing: form_field


 processing: form_field.generic_form.form

Info: Add virtual field [form_fields(es)] to <generic_form>
	form_field.form


 processing: form_action


 processing: form_action.generic_form.form

Info: Add virtual field [form_actions(es)] to <generic_form>
	form_action.form


**************************************************

retail_store_country_center{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('双链小超中国国运营中心|双链小超美国国运营中心|双链小超日本国运营中心|双链小超泰国国运营中心'), verb: false, required: true;
		string	service_number('4000-800-'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		string_url	web_site('https://www.doublechaintech.com/'), verb: false, required: true;
		string	address('四川省成都市天府新区双链大厦'), verb: false, required: true;
		string	operated_by('双链集团'), verb: false, required: true;
		string	legal_representative('张喜来|张喜来'), verb: false, required: true;
		string	description('中国中心正式成立，恭喜恭喜'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(24){
		catalogList	owner(基本信息)--owner;
		retailStoreProvinceCenterList	country(基本信息)--country;
		retailStoreList	retail_store_country_center(基本信息)--retail_store_country_center;
		retailStoreMemberList	owner(基本信息)--owner;
		goodsSupplierList	belong_to(基本信息)--belong_to;
		supplyOrderList	buyer(基本信息)--buyer;
		retailStoreOrderList	seller(基本信息)--seller;
		warehouseList	owner(基本信息)--owner;
		transportFleetList	owner(基本信息)--owner;
		accountSetList	country_center(基本信息)--country_center;
		levelOneDepartmentList	belongs_to(基本信息)--belongs_to;
		skillTypeList	company(基本信息)--company;
		responsibilityTypeList	company(基本信息)--company;
		terminationReasonList	company(基本信息)--company;
		terminationTypeList	company(基本信息)--company;
		occupationTypeList	company(基本信息)--company;
		leaveTypeList	company(基本信息)--company;
		salaryGradeList	company(基本信息)--company;
		interviewTypeList	company(基本信息)--company;
		trainingCourseTypeList	company(基本信息)--company;
		publicHolidayList	company(基本信息)--company;
		employeeList	company(基本信息)--company;
		instructorList	company(基本信息)--company;
		companyTrainingList	company(基本信息)--company;
	}
} depth=0; isRoot = true

catalog{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: catalogList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		levelOneCategoryList	catalog(基本信息)--catalog;
	}
} depth=1; isRoot = false

level_one_category{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		catalog	catalog('$(object)'), verb: false, required: true, referenceBy: levelOneCategoryList;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		levelTwoCategoryList	parent_category(基本信息)--parent_category;
	}
} depth=2; isRoot = false

level_two_category{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		level_one_category	parent_category('$(object)'), verb: false, required: true, referenceBy: levelTwoCategoryList;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		levelThreeCategoryList	parent_category(基本信息)--parent_category;
	}
} depth=3; isRoot = false

level_three_category{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		level_two_category	parent_category('$(object)'), verb: false, required: true, referenceBy: levelThreeCategoryList;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		productList	parent_category(基本信息)--parent_category;
	}
} depth=4; isRoot = false

product{
	fields(9){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('啤酒|可乐|久久鸭'), verb: false, required: true;
		level_three_category	parent_category('$(object)'), verb: false, required: true, referenceBy: productList;
		string	origin('四川|广东|江苏|安徽|日本|法国'), verb: false, required: true;
		string	remark('可口可乐，销售百年的糖水，获得了全世界额青睐'), verb: false, required: true;
		string	brand('品牌品牌品牌品牌品牌品牌品牌品牌品牌品牌品牌品'), verb: false, required: true;
		string_image	picture('this is a looooooooooog.jpg'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		skuList	product(基本信息)--product;
	}
} depth=5; isRoot = false

sku{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('可乐-大罐的'), verb: false, required: true;
		string	size('大|中|小'), verb: false, required: true;
		product	product('$(object)'), verb: false, required: true, referenceBy: skuList;
		string	barcode('TM00000000001'), verb: false, required: true;
		string	package_type('包装类型'), verb: false, required: true;
		string	net_content('包装数量等信息,包装数量等信息,包装数量等信息'), verb: false, required: true;
		money	price('$1323.33'), verb: false, required: true;
		string_image	picture('this is a loooooooooooooooog.jpg'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	sku(基本信息)--sku;
	}
} depth=6; isRoot = false

retail_store_province_center{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('双链小超四川省运营中心|双链小超北京运营中心'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		retail_store_country_center	country('$(object)'), verb: false, required: true, referenceBy: retailStoreProvinceCenterList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		provinceCenterDepartmentList	province_center(基本信息)--province_center;
		provinceCenterEmployeeList	province_center(基本信息)--province_center;
		retailStoreCityServiceCenterList	belongs_to(基本信息)--belongs_to;
	}
} depth=1; isRoot = false

province_center_department{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('供应链部|采购部|管理部|财务部|法务部|市场部|人力资源部'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		retail_store_province_center	province_center('$(object)'), verb: false, required: true, referenceBy: provinceCenterDepartmentList;
		string	manager('刘强|王德宏'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		provinceCenterEmployeeList	department(基本信息)--department;
	}
} depth=2; isRoot = false

province_center_employee{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('刘强|王德宏'), verb: false, required: true;
		string_china_mobile_phone	mobile('13999998888'), verb: false, required: true;
		string_email	email('wangdehong@yatang.cn|liuqiang@yatang.cn'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		province_center_department	department('$(object)'), verb: false, required: true, referenceBy: provinceCenterEmployeeList;
		retail_store_province_center	province_center('$(object)'), verb: false, required: true, referenceBy: provinceCenterEmployeeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

retail_store_city_service_center{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('双链小超成都办事处|双链小超绵阳办事处|双链小超巴中办事处'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		retail_store_province_center	belongs_to('$(object)'), verb: false, required: true, referenceBy: retailStoreCityServiceCenterList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		cityPartnerList	city_service_center(基本信息)--city_service_center;
		potentialCustomerList	city_service_center(基本信息)--city_service_center;
		cityEventList	city_service_center(基本信息)--city_service_center;
		retailStoreList	city_service_center(基本信息)--city_service_center;
	}
} depth=2; isRoot = false

city_partner{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('曾倩|黄风格|郭超'), verb: false, required: true;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: cityPartnerList;
		string	description('负责开拓市场，具有极强的开拓能力'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		potentialCustomerList	city_partner(基本信息)--city_partner;
		potentialCustomerContactList	city_partner(基本信息)--city_partner;
	}
} depth=3; isRoot = false

potential_customer{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('曾倩|黄风格|郭超'), verb: false, required: true;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: potentialCustomerList;
		city_partner	city_partner('$(object)'), verb: false, required: true, referenceBy: potentialCustomerList;
		string	description('负责开拓市场，具有极强的开拓能力'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		potentialCustomerContactPersonList	potential_customer(基本信息)--potential_customer;
		potentialCustomerContactList	potential_customer(基本信息)--potential_customer;
		eventAttendanceList	potential_customer(基本信息)--potential_customer;
	}
} depth=4; isRoot = false

potential_customer_contact_person{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('赵先生'), verb: false, required: true;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactPersonList;
		string	description('这人在决策中战友较大的权重，密切观察中.....'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		potentialCustomerContactList	contact_to(基本信息)--contact_to;
	}
} depth=5; isRoot = false

potential_customer_contact{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('和连载客户的联系记录'), verb: false, required: true;
		date	contact_date('2016-09-09'), verb: false, required: true;
		string	contact_method('电话|短信|登门拜访|活动聊天'), verb: false, required: true;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList;
		city_partner	city_partner('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList;
		potential_customer_contact_person	contact_to('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList;
		string	description('转化希望很大'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=6; isRoot = false

city_event{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('小超见面会|双链小超说明会'), verb: false, required: true;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: cityEventList;
		string	description('给大家讲解小超的发展蓝图'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		eventAttendanceList	city_event(基本信息)--city_event;
	}
} depth=3; isRoot = false

event_attendance{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('小超见面会参加信息'), verb: false, required: true;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: eventAttendanceList;
		city_event	city_event('$(object)'), verb: false, required: true, referenceBy: eventAttendanceList;
		string	description('体会不错，考虑加盟'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

retail_store{
	fields(19){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('中和社区小超|华阳社区小超|大源社区小超'), verb: false, required: true;
		string	telephone('02887654321'), verb: false, required: true;
		string	owner('吕刚'), verb: false, required: true;
		retail_store_country_center	retail_store_country_center('$(object)'), verb: false, required: true, referenceBy: retailStoreList;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: retailStoreList;
		retail_store_creation	creation('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		retail_store_investment_invitation	investment_invitation('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		retail_store_franchising	franchising('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		retail_store_decoration	decoration('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		retail_store_opening	opening('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		retail_store_closing	closing('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		date_past	founded('past()'), verb: false, required: true;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		string	description('啤酒饮料矿泉水，香肠瓜子方便面, 请让一让'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		string	current_status('CREATED|INVESTMENT_INVITED|FRANCHISED|DECORATED|OPENNED|CLOSED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(5){
		consumerOrderList	store(基本信息)--store;
		retailStoreOrderList	buyer(基本信息)--buyer;
		goodsList	retail_store(基本信息)--retail_store;
		transportTaskList	end(基本信息)--end;
		accountSetList	retail_store(基本信息)--retail_store;
	}
} depth=3; isRoot = false

retail_store_creation{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('已经建好了'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	creation(基本信息)--creation;
	}
} depth=0; isRoot = true

retail_store_investment_invitation{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('欢迎前来咨询'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	investment_invitation(基本信息)--investment_invitation;
	}
} depth=0; isRoot = true

retail_store_franchising{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('谢谢加盟'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	franchising(基本信息)--franchising;
	}
} depth=0; isRoot = true

retail_store_decoration{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('装修'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	decoration(基本信息)--decoration;
	}
} depth=0; isRoot = true

retail_store_opening{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('装修'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	opening(基本信息)--opening;
	}
} depth=0; isRoot = true

retail_store_closing{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('关闭'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	closing(基本信息)--closing;
	}
} depth=0; isRoot = true

retail_store_member{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('李亚青'), verb: false, required: true;
		string_china_mobile_phone	mobile_phone('18099887766'), verb: false, required: true;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(7){
		consumerOrderList	consumer(基本信息)--consumer;
		retailStoreMemberCouponList	owner(基本信息)--owner;
		memberWishlistList	owner(基本信息)--owner;
		memberRewardPointList	owner(基本信息)--owner;
		memberRewardPointRedemptionList	owner(基本信息)--owner;
		retailStoreMemberAddressList	owner(基本信息)--owner;
		retailStoreMemberGiftCardList	owner(基本信息)--owner;
	}
} depth=1; isRoot = false

consumer_order{
	fields(12){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('消费订单'), verb: false, required: true;
		retail_store_member	consumer('$(object)'), verb: false, required: true, referenceBy: consumerOrderList;
		supply_order_confirmation	confirmation('$(object)'), verb: true, required: true, referenceBy: consumerOrderList;
		supply_order_approval	approval('$(object)'), verb: true, required: true, referenceBy: consumerOrderList;
		supply_order_processing	processing('$(object)'), verb: true, required: true, referenceBy: consumerOrderList;
		supply_order_shipment	shipment('$(object)'), verb: true, required: true, referenceBy: consumerOrderList;
		supply_order_delivery	delivery('$(object)'), verb: true, required: true, referenceBy: consumerOrderList;
		retail_store	store('$(object)'), verb: false, required: true, referenceBy: consumerOrderList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		string	current_status('CONFIRMED|APPROVED|PROCESSED|SHIPPED|DELIVERED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(5){
		consumerOrderLineItemList	biz_order(基本信息)--biz_order;
		consumerOrderShippingGroupList	biz_order(基本信息)--biz_order;
		consumerOrderPaymentGroupList	biz_order(基本信息)--biz_order;
		consumerOrderPriceAdjustmentList	biz_order(基本信息)--biz_order;
		retailStoreMemberGiftCardConsumeRecordList	biz_order(基本信息)--biz_order;
	}
} depth=4; isRoot = false

consumer_order_confirmation{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('确认者'), verb: false, required: true;
		date	confirm_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

consumer_order_approval{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('批准者'), verb: false, required: true;
		date	approve_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

consumer_order_processing{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('处理者'), verb: false, required: true;
		date	process_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

consumer_order_shipment{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('运货者'), verb: false, required: true;
		date	ship_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

consumer_order_delivery{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('送货者'), verb: false, required: true;
		date	delivery_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

consumer_order_line_item{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderLineItemList;
		string	sku_id('SKU'), verb: false, required: true;
		string	sku_name('大瓶可乐'), verb: false, required: true;
		money	price('$5.97'), verb: false, required: true;
		double	quantity('1000.00'), verb: false, required: true;
		money	amount('$9999.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

consumer_order_shipping_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('送货到刘强家'), verb: false, required: true;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderShippingGroupList;
		money	amount('$599.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

consumer_order_payment_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('信用卡|支付宝|微信支付'), verb: false, required: true;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderPaymentGroupList;
		string	card_number('4111 1111 1111 - '), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

consumer_order_price_adjustment{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('端午促销'), verb: false, required: true;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderPriceAdjustmentList;
		money	amount('$599.99'), verb: false, required: true;
		string	provider('供货商|小超老板|广告赞助'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

retail_store_member_coupon{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('优惠券'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberCouponList;
		string	number('CP00001'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

member_wishlist{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('每周购买清单|每月购买清单'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberWishlistList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		memberWishlistProductList	owner(基本信息)--owner;
	}
} depth=2; isRoot = false

member_reward_point{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('购买积分|每月购买清单'), verb: false, required: true;
		int	point('20'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberRewardPointList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

member_reward_point_redemption{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('积分换锅|积分换刀'), verb: false, required: true;
		int	point('20'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberRewardPointRedemptionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

member_wishlist_product{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('农夫山泉|利箭口香糖'), verb: false, required: true;
		member_wishlist	owner('$(object)'), verb: false, required: true, referenceBy: memberWishlistProductList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

retail_store_member_address{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('家里|办公室|出差临时地址'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberAddressList;
		string_china_mobile_phone	mobile_phone('18099887766'), verb: false, required: true;
		string	address('四川省成都市科学城北路33号'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

retail_store_member_gift_card{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('礼品卡'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardList;
		string	number('CP00001'), verb: false, required: true;
		money	remain('$213.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreMemberGiftCardConsumeRecordList	owner(基本信息)--owner;
	}
} depth=2; isRoot = false

retail_store_member_gift_card_consume_record{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		date_past	occure_time('past()'), verb: false, required: true;
		retail_store_member_gift_card	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardConsumeRecordList;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardConsumeRecordList;
		string	number('GF00001'), verb: false, required: true;
		money	amount('$20.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

goods_supplier{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('宝洁|中粮|福临门'), verb: false, required: true;
		string	supply_product('洗护用品|食品|植物油'), verb: false, required: true;
		retail_store_country_center	belong_to('$(object)'), verb: false, required: true, referenceBy: goodsSupplierList;
		string_china_mobile_phone	contact_number('18677889999'), verb: false, required: true;
		string	description('啤酒饮料矿泉水，香肠瓜子方便面都提供'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		supplierProductList	supplier(基本信息)--supplier;
		supplyOrderList	seller(基本信息)--seller;
		accountSetList	goods_supplier(基本信息)--goods_supplier;
	}
} depth=1; isRoot = false

supplier_product{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	product_name('黑人牙膏'), verb: false, required: true;
		string	product_description('最好的黑人牙膏，只卖3块喽'), verb: false, required: true;
		string	product_unit('件|公斤|米'), verb: false, required: true;
		goods_supplier	supplier('$(object)'), verb: false, required: true, referenceBy: supplierProductList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		productSupplyDurationList	product(基本信息)--product;
	}
} depth=2; isRoot = false

product_supply_duration{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		int	quantity('100|200|500'), verb: false, required: true;
		string	duration('现货|两天|三天|一周'), verb: false, required: true;
		money	price('$9999.99'), verb: false, required: true;
		supplier_product	product('$(object)'), verb: false, required: true, referenceBy: productSupplyDurationList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

supply_order{
	fields(14){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		retail_store_country_center	buyer('$(object)'), verb: false, required: true, referenceBy: supplyOrderList;
		goods_supplier	seller('$(object)'), verb: false, required: true, referenceBy: supplyOrderList;
		string	title('双链给供货商下的订单'), verb: false, required: true;
		money	total_amount('$3000000000.88'), verb: false, required: true;
		supply_order_confirmation	confirmation('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		supply_order_approval	approval('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		supply_order_processing	processing('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		supply_order_picking	picking('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		supply_order_shipment	shipment('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		supply_order_delivery	delivery('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		string	current_status('CONFIRMED|APPROVED|PROCESSED|PICKED|SHIPPED|DELIVERED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		supplyOrderLineItemList	biz_order(基本信息)--biz_order;
		supplyOrderShippingGroupList	biz_order(基本信息)--biz_order;
		supplyOrderPaymentGroupList	biz_order(基本信息)--biz_order;
		goodsList	biz_order(基本信息)--biz_order;
	}
} depth=2; isRoot = false

supply_order_confirmation{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('确认者'), verb: false, required: true;
		date	confirm_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		consumerOrderList	confirmation(基本信息)--confirmation;
		supplyOrderList	confirmation(基本信息)--confirmation;
	}
} depth=0; isRoot = true

supply_order_approval{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('批准者'), verb: false, required: true;
		date	approve_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		consumerOrderList	approval(基本信息)--approval;
		supplyOrderList	approval(基本信息)--approval;
	}
} depth=0; isRoot = true

supply_order_processing{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('处理者'), verb: false, required: true;
		date	process_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		consumerOrderList	processing(基本信息)--processing;
		supplyOrderList	processing(基本信息)--processing;
	}
} depth=0; isRoot = true

supply_order_picking{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('处理者'), verb: false, required: true;
		date	process_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		supplyOrderList	picking(基本信息)--picking;
	}
} depth=0; isRoot = true

supply_order_shipment{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('运货者'), verb: false, required: true;
		date	ship_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		consumerOrderList	shipment(基本信息)--shipment;
		supplyOrderList	shipment(基本信息)--shipment;
	}
} depth=0; isRoot = true

supply_order_delivery{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('送货者'), verb: false, required: true;
		date	delivery_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		consumerOrderList	delivery(基本信息)--delivery;
		supplyOrderList	delivery(基本信息)--delivery;
	}
} depth=0; isRoot = true

supply_order_line_item{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderLineItemList;
		string	sku_id('SKU'), verb: false, required: true;
		string	sku_name('大瓶可乐'), verb: false, required: true;
		money	amount('$5.97'), verb: false, required: true;
		int	quantity('10000'), verb: false, required: true;
		string	unit_of_measurement('件|公斤|米'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

supply_order_shipping_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('送货到双链成都2号仓'), verb: false, required: true;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderShippingGroupList;
		money	amount('$5.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

supply_order_payment_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('付款办法'), verb: false, required: true;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderPaymentGroupList;
		string	card_number('4111 1111 1111 - '), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

retail_store_order{
	fields(14){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		retail_store	buyer('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderList;
		retail_store_country_center	seller('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderList;
		string	title('双链小超给双链供应链下的订单'), verb: false, required: true;
		money	total_amount('$3000000000.88'), verb: false, required: true;
		retail_store_order_confirmation	confirmation('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		retail_store_order_approval	approval('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		retail_store_order_processing	processing('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		retail_store_order_picking	picking('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		retail_store_order_shipment	shipment('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		retail_store_order_delivery	delivery('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		string	current_status('CONFIRMED|APPROVED|PROCESSED|PICKED|SHIPPED|DELIVERED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		retailStoreOrderLineItemList	biz_order(基本信息)--biz_order;
		retailStoreOrderShippingGroupList	biz_order(基本信息)--biz_order;
		retailStoreOrderPaymentGroupList	biz_order(基本信息)--biz_order;
		goodsList	retail_store_order(基本信息)--retail_store_order;
	}
} depth=4; isRoot = false

retail_store_order_confirmation{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('确认者'), verb: false, required: true;
		date	confirm_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	confirmation(基本信息)--confirmation;
	}
} depth=0; isRoot = true

retail_store_order_approval{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('批准者'), verb: false, required: true;
		date	approve_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	approval(基本信息)--approval;
	}
} depth=0; isRoot = true

retail_store_order_processing{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('处理者'), verb: false, required: true;
		date	process_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	processing(基本信息)--processing;
	}
} depth=0; isRoot = true

retail_store_order_picking{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('处理者'), verb: false, required: true;
		date	process_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	picking(基本信息)--picking;
	}
} depth=0; isRoot = true

retail_store_order_shipment{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('运货者'), verb: false, required: true;
		date	ship_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	shipment(基本信息)--shipment;
	}
} depth=0; isRoot = true

retail_store_order_delivery{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('送货者'), verb: false, required: true;
		date	delivery_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	delivery(基本信息)--delivery;
	}
} depth=0; isRoot = true

retail_store_order_line_item{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderLineItemList;
		string	sku_id('SKU'), verb: false, required: true;
		string	sku_name('大瓶可乐'), verb: false, required: true;
		money	amount('$3.97'), verb: false, required: true;
		int	quantity('10000'), verb: false, required: true;
		string	unit_of_measurement('件|公斤|米'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

retail_store_order_shipping_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('送货到双链中和社区店'), verb: false, required: true;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderShippingGroupList;
		money	amount('$5.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

retail_store_order_payment_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('付款办法'), verb: false, required: true;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderPaymentGroupList;
		string	card_number('4111 1111 1111 - '), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

warehouse{
	fields(9){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('187672平方米'), verb: false, required: true;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: warehouseList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(7){
		storageSpaceList	warehouse(基本信息)--warehouse;
		smartPalletList	warehouse(基本信息)--warehouse;
		supplierSpaceList	warehouse(基本信息)--warehouse;
		receivingSpaceList	warehouse(基本信息)--warehouse;
		shippingSpaceList	warehouse(基本信息)--warehouse;
		damageSpaceList	warehouse(基本信息)--warehouse;
		warehouseAssetList	owner(基本信息)--owner;
	}
} depth=1; isRoot = false

storage_space{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号存货区'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: storageSpaceList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsShelfList	storage_space(基本信息)--storage_space;
	}
} depth=2; isRoot = false

smart_pallet{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号移动区域，比如过道，货运通道等'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: smartPalletList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	smart_pallet(基本信息)--smart_pallet;
	}
} depth=2; isRoot = false

goods_shelf{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号存货区货架'), verb: false, required: true;
		storage_space	storage_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList;
		supplier_space	supplier_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList;
		damage_space	damage_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		goodsShelfStockCountList	shelf(基本信息)--shelf;
		goodsAllocationList	goods_shelf(基本信息)--goods_shelf;
	}
} depth=3; isRoot = false

goods_shelf_stock_count{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('每日盘点|每周盘点|每月盘点|年终盘点'), verb: false, required: true;
		date	count_time('2017-04-01'), verb: false, required: true;
		string	summary('使用先进的rfid技术，没有任何错误'), verb: false, required: true;
		goods_shelf	shelf('$(object)'), verb: false, required: true, referenceBy: goodsShelfStockCountList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		stockCountIssueTrackList	stock_count(基本信息)--stock_count;
	}
} depth=4; isRoot = false

stock_count_issue_track{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('盘点差错'), verb: false, required: true;
		date	count_time('2017-04-01'), verb: false, required: true;
		string	summary('发现错误已经修正完成'), verb: false, required: true;
		goods_shelf_stock_count	stock_count('$(object)'), verb: false, required: true, referenceBy: stockCountIssueTrackList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

goods_allocation{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号存货区货架20号货位'), verb: false, required: true;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		goods_shelf	goods_shelf('$(object)'), verb: false, required: true, referenceBy: goodsAllocationList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	goods_allocation(基本信息)--goods_allocation;
	}
} depth=4; isRoot = false

goods{
	fields(18){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('可口可乐'), verb: false, required: true;
		string	rfid('RF99192'), verb: false, required: true;
		string	uom('件|箱'), verb: false, required: true;
		int	max_package('10'), verb: false, required: true;
		date	expire_time('2019-09-09'), verb: false, required: true;
		sku	sku('$(object)'), verb: false, required: true, referenceBy: goodsList;
		receiving_space	receiving_space('$(object)'), verb: false, required: true, referenceBy: goodsList;
		goods_allocation	goods_allocation('$(object)'), verb: false, required: true, referenceBy: goodsList;
		smart_pallet	smart_pallet('$(object)'), verb: false, required: true, referenceBy: goodsList;
		shipping_space	shipping_space('$(object)'), verb: false, required: true, referenceBy: goodsList;
		transport_task	transport_task('$(object)'), verb: false, required: true, referenceBy: goodsList;
		retail_store	retail_store('$(object)'), verb: false, required: true, referenceBy: goodsList;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: goodsList;
		retail_store_order	retail_store_order('$(object)'), verb: false, required: true, referenceBy: goodsList;
		goods_packaging	packaging('$(object)'), verb: true, required: true, referenceBy: goodsList;
		string	current_status('PACKED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsMovementList	goods(基本信息)--goods;
	}
} depth=7; isRoot = false

goods_packaging{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	package_name('王煜东'), verb: false, required: true;
		string	rfid('RF99192'), verb: false, required: true;
		date	package_time('2017-09-09'), verb: false, required: true;
		string	description('打包完成，准备起运'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	packaging(基本信息)--packaging;
	}
} depth=0; isRoot = true

goods_movement{
	fields(11){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		date_time	move_time('2017-08-09T09:09:09'), verb: false, required: true;
		string	facility('仓库货位|卡车|小超'), verb: false, required: true;
		string	facility_id('仓库货位|卡车|小超'), verb: false, required: true;
		string	from_ip('192.168.20.1'), verb: false, required: true;
		string	user_agent('Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405'), verb: false, required: true;
		string	session_id('FTYUIOLJYT^*(PLKJYT)'), verb: false, required: true;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		goods	goods('$(object)'), verb: false, required: true, referenceBy: goodsMovementList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=8; isRoot = false

supplier_space{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号供货商独立管理区'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: supplierSpaceList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsShelfList	supplier_space(基本信息)--supplier_space;
	}
} depth=2; isRoot = false

receiving_space{
	fields(9){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号仓库卸货区'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	description('每个收货区可以供一辆车卸货'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: receivingSpaceList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	receiving_space(基本信息)--receiving_space;
	}
} depth=2; isRoot = false

shipping_space{
	fields(9){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号装货区'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: shippingSpaceList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		string	description('每个收货区可以供一辆车装货'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	shipping_space(基本信息)--shipping_space;
	}
} depth=2; isRoot = false

damage_space{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号仓库损坏货物堆放区'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: damageSpaceList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsShelfList	damage_space(基本信息)--damage_space;
	}
} depth=2; isRoot = false

warehouse_asset{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('叉车|托盘|传送带备件'), verb: false, required: true;
		string	position('备用件存放区设备库房'), verb: false, required: true;
		warehouse	owner('$(object)'), verb: false, required: true, referenceBy: warehouseAssetList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

transport_fleet{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('双链先锋号车队'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: transportFleetList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		transportTruckList	owner(基本信息)--owner;
		truckDriverList	belongs_to(基本信息)--belongs_to;
		transportTaskList	belongs_to(基本信息)--belongs_to;
	}
} depth=1; isRoot = false

transport_truck{
	fields(11){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('运货卡车'), verb: false, required: true;
		string	plate_number('川AK5'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	vehicle_license_number('VL9198'), verb: false, required: true;
		string	engine_number('EN00102'), verb: false, required: true;
		date	make_date('2010-09-09'), verb: false, required: true;
		string	mileage('100万公里'), verb: false, required: true;
		string	body_color('红色|蓝色|白色|灰色|银色|黑色'), verb: false, required: true;
		transport_fleet	owner('$(object)'), verb: false, required: true, referenceBy: transportTruckList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		transportTaskList	truck(基本信息)--truck;
	}
} depth=2; isRoot = false

truck_driver{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('运货卡车司机'), verb: false, required: true;
		string	driver_license_number('51099887733'), verb: false, required: true;
		string_china_mobile_phone	contact_number('18777778888'), verb: false, required: true;
		transport_fleet	belongs_to('$(object)'), verb: false, required: true, referenceBy: truckDriverList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		transportTaskList	driver(基本信息)--driver;
	}
} depth=2; isRoot = false

transport_task{
	fields(11){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('货运记录'), verb: false, required: true;
		string	start('双链二号仓'), verb: false, required: true;
		date_past	begin_time('past()'), verb: false, required: true;
		retail_store	end('$(object)'), verb: false, required: true, referenceBy: transportTaskList;
		truck_driver	driver('$(object)'), verb: false, required: true, referenceBy: transportTaskList;
		transport_truck	truck('$(object)'), verb: false, required: true, referenceBy: transportTaskList;
		transport_fleet	belongs_to('$(object)'), verb: false, required: true, referenceBy: transportTaskList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		goodsList	transport_task(基本信息)--transport_task;
		transportTaskTrackList	movement(基本信息)--movement;
	}
} depth=4; isRoot = false

transport_task_track{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		date_past	track_time('past()'), verb: false, required: true;
		double	latitude('30.912929'), verb: false, required: true;
		double	longitude('104.121232'), verb: false, required: true;
		transport_task	movement('$(object)'), verb: false, required: true, referenceBy: transportTaskTrackList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

account_set{
	fields(14){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('账套2017|账套2018|账套2019'), verb: false, required: true;
		string	year_set('2017年|2018年|2019年'), verb: false, required: true;
		date	effective_date('2017-05-28'), verb: false, required: true;
		string	accounting_system('企业会计制度|小企业会计制度|合伙制会计制度'), verb: false, required: true;
		string	domestic_currency_code('RMB|USD'), verb: false, required: true;
		string	domestic_currency_name('人民币|美元'), verb: false, required: true;
		string	opening_bank('招商银行|工商银行'), verb: false, required: true;
		string	account_number('33265805054885'), verb: false, required: true;
		retail_store_country_center	country_center('$(object)'), verb: false, required: true, referenceBy: accountSetList;
		retail_store	retail_store('$(object)'), verb: false, required: true, referenceBy: accountSetList;
		goods_supplier	goods_supplier('$(object)'), verb: false, required: true, referenceBy: accountSetList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		accountingSubjectList	account_set(基本信息)--account_set;
		accountingPeriodList	account_set(基本信息)--account_set;
		accountingDocumentTypeList	accounting_period(基本信息)--accounting_period;
	}
} depth=4; isRoot = false

accounting_subject{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	accounting_subject_code('AS9999'), verb: false, required: true;
		string	accounting_subject_name('银行存款'), verb: false, required: true;
		int	accounting_subject_class_code('1|2|3|4|5|6'), verb: false, required: true;
		string	accounting_subject_class_name('资产类|负债类|共同类|所有者权益类|成本类|损益类'), verb: false, required: true;
		account_set	account_set('$(object)'), verb: false, required: true, referenceBy: accountingSubjectList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentLineList	accounting_subject(基本信息)--accounting_subject;
	}
} depth=5; isRoot = false

accounting_period{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('2017年1月|2017年2月|2017年3月|2017年4月|2017年5月|2017年6月|2017年7月|2017年8月|2017年9月|2017年10月|2017年11月|2017年12月'), verb: false, required: true;
		date	start_date('2017-01-09'), verb: false, required: true;
		date	end_date('2017-01-09'), verb: false, required: true;
		account_set	account_set('$(object)'), verb: false, required: true, referenceBy: accountingPeriodList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	accounting_period(基本信息)--accounting_period;
	}
} depth=5; isRoot = false

accounting_document_type{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('记账凭证|收款凭证|付款凭证'), verb: false, required: true;
		string	description('又称记账凭单，是会计人员根据审核无误的原始凭证按照经济业务事项的内容加以分类，并据以确定会计分录后所填制的会计凭证。它是登记账簿的直接依据。'), verb: false, required: true;
		account_set	accounting_period('$(object)'), verb: false, required: true, referenceBy: accountingDocumentTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	document_type(基本信息)--document_type;
	}
} depth=5; isRoot = false

accounting_document{
	fields(11){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('记账凭证'), verb: false, required: true;
		date	accounting_document_date('2018-09-09'), verb: false, required: true;
		accounting_period	accounting_period('$(object)'), verb: false, required: true, referenceBy: accountingDocumentList;
		accounting_document_type	document_type('$(object)'), verb: false, required: true, referenceBy: accountingDocumentList;
		accounting_document_creation	creation('$(object)'), verb: true, required: true, referenceBy: accountingDocumentList;
		accounting_document_confirmation	confirmation('$(object)'), verb: true, required: true, referenceBy: accountingDocumentList;
		accounting_document_auditing	auditing('$(object)'), verb: true, required: true, referenceBy: accountingDocumentList;
		accounting_document_posting	posting('$(object)'), verb: true, required: true, referenceBy: accountingDocumentList;
		string	current_status('CREATED|CONFIRMED|AUDITED|POSTED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		originalVoucherList	belongs_to(基本信息)--belongs_to;
		accountingDocumentLineList	belongs_to(基本信息)--belongs_to;
	}
} depth=6; isRoot = false

accounting_document_creation{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('确认提交'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	creation(基本信息)--creation;
	}
} depth=0; isRoot = true

accounting_document_confirmation{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('确认通过'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	confirmation(基本信息)--confirmation;
	}
} depth=0; isRoot = true

accounting_document_auditing{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('审核通过，要都审核过了才通过哦'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	auditing(基本信息)--auditing;
	}
} depth=0; isRoot = true

accounting_document_posting{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('审核通过，要都审核过了才通过哦'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	posting(基本信息)--posting;
	}
} depth=0; isRoot = true

original_voucher{
	fields(12){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('这是手写的发票'), verb: false, required: true;
		string	made_by('李亚青'), verb: false, required: true;
		string	received_by('本公司'), verb: false, required: true;
		string	voucher_type('原始凭证|发票|出库单|入库单|存款回执|验收证明|借款凭证'), verb: false, required: true;
		string_image	voucher_image('goodthing.jpg'), verb: false, required: true;
		accounting_document	belongs_to('$(object)'), verb: false, required: true, referenceBy: originalVoucherList;
		original_voucher_creation	creation('$(object)'), verb: true, required: true, referenceBy: originalVoucherList;
		original_voucher_confirmation	confirmation('$(object)'), verb: true, required: true, referenceBy: originalVoucherList;
		original_voucher_auditing	auditing('$(object)'), verb: true, required: true, referenceBy: originalVoucherList;
		string	current_status('CREATED|CONFIRMED|AUDITED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=7; isRoot = false

original_voucher_creation{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('确认提交'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		originalVoucherList	creation(基本信息)--creation;
	}
} depth=0; isRoot = true

original_voucher_confirmation{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('确认通过'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		originalVoucherList	confirmation(基本信息)--confirmation;
	}
} depth=0; isRoot = true

original_voucher_auditing{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('审核通过，要都审核过了才通过哦'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		originalVoucherList	auditing(基本信息)--auditing;
	}
} depth=0; isRoot = true

accounting_document_line{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('收到存款'), verb: false, required: true;
		string	code('AS9999'), verb: false, required: true;
		string	direct('借|贷'), verb: false, required: true;
		money	amount('$989127.99'), verb: false, required: true;
		accounting_document	belongs_to('$(object)'), verb: false, required: true, referenceBy: accountingDocumentLineList;
		accounting_subject	accounting_subject('$(object)'), verb: false, required: true, referenceBy: accountingDocumentLineList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=7; isRoot = false

level_one_department{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		retail_store_country_center	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelOneDepartmentList;
		string	name('供应链部|采购部|管理部|财务部|信息技术部|法务部|市场部|人力资源部'), verb: false, required: true;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true;
		string	manager('刘强|王德宏'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		levelTwoDepartmentList	belongs_to(基本信息)--belongs_to;
	}
} depth=1; isRoot = false

level_two_department{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		level_one_department	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelTwoDepartmentList;
		string	name('信息系统部大数据部门'), verb: false, required: true;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		levelThreeDepartmentList	belongs_to(基本信息)--belongs_to;
	}
} depth=2; isRoot = false

level_three_department{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		level_two_department	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelThreeDepartmentList;
		string	name('信息系统部大数据清洗组|信息系统部大数据运算组|信息系统部大数据解决方案组'), verb: false, required: true;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	department(基本信息)--department;
	}
} depth=3; isRoot = false

skill_type{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('S0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: skillTypeList;
		string	description('JAVA编程|大数据|并行计算|操作系统|数据库'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeSkillList	skill_type(基本信息)--skill_type;
	}
} depth=1; isRoot = false

responsibility_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('S0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: responsibilityTypeList;
		string	base_description('合规管理|财务管理|总务管理|信息管理|库存管理|市场管理|产品管理|采购管理|资产管理|销售管理|安全管理'), verb: false, required: true;
		string	detail_description('负责集团及其他分公司信息系统有效运作，并使集团在技术上领先'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	responsible_for(基本信息)--responsible_for;
	}
} depth=1; isRoot = false

termination_reason{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('ETR0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: terminationReasonList;
		string	description('业务发展，公司转型|战略调整|业务优化'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		terminationList	reason(基本信息)--reason;
	}
} depth=1; isRoot = false

termination_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('ETT0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: terminationTypeList;
		string	base_description('合同解除|辞职|退休'), verb: false, required: true;
		string	detail_description('这个终止原因的描述是这样的.................................................'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		terminationList	type(基本信息)--type;
	}
} depth=1; isRoot = false

occupation_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('OT0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: occupationTypeList;
		string	description('需求分析员|软件工程师|高级软件工程师|财务分析师|财务主管|出纳|总经理|副总经历|大数据架构师|销售经理|销售总监|技术总监|区域销售经理'), verb: false, required: true;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	occupation(基本信息)--occupation;
	}
} depth=1; isRoot = false

leave_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('LT0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: leaveTypeList;
		string	description('带薪年假|病假|事假|婚假|产假|陪产假|丧假|探亲假|哺乳假|待产假|陪待产假'), verb: false, required: true;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeLeaveList	type(基本信息)--type;
	}
} depth=1; isRoot = false

salary_grade{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('SG0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: salaryGradeList;
		string	name('一级薪资|二级薪资|三级薪资|四级薪资|五级薪资|六级薪资|七级薪资'), verb: false, required: true;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		employeeList	current_salary_grade(基本信息)--current_salary_grade;
		employeeSalarySheetList	current_salary_grade(基本信息)--current_salary_grade;
	}
} depth=1; isRoot = false

interview_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('INTRVW00'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: interviewTypeList;
		string	description('特别情况面试|离职面试|信息面试|入职面试'), verb: false, required: true;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeInterviewList	interview_type(基本信息)--interview_type;
	}
} depth=1; isRoot = false

training_course_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('TC00'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: trainingCourseTypeList;
		string	name('入职培训|售前培训|技术培训|管理培训|外训'), verb: false, required: true;
		string	description('培训是提升个人和企业竞争力的法宝'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		companyTrainingList	training_course_type(基本信息)--training_course_type;
	}
} depth=1; isRoot = false

public_holiday{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('PH00'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: publicHolidayList;
		string	name('元旦节|春节|妇女节|清明节|端午节|暑假|国庆节|中秋节'), verb: false, required: true;
		string	description('节日快乐，万事如意！'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

termination{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		termination_reason	reason('$(object)'), verb: false, required: true, referenceBy: terminationList;
		termination_type	type('$(object)'), verb: false, required: true, referenceBy: terminationList;
		string	comment('员工离职'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	termination(基本信息)--termination;
	}
} depth=2; isRoot = false

view{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('面试官'), verb: false, required: true;
		string	assessment('小伙子不错，值得培养'), verb: false, required: true;
		date	interview_time('2017-03-03'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

employee{
	fields(24){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: employeeList;
		string	title('程序员'), verb: false, required: true;
		level_three_department	department('$(object)'), verb: false, required: true, referenceBy: employeeList;
		string	family_name('张|王|李|贺'), verb: false, required: true;
		string	given_name('文强|大伟|字章'), verb: false, required: true;
		string_email	email('share@163.com'), verb: false, required: true;
		string	city('北京|天津|成都|上海|深圳|广州|西安'), verb: false, required: true;
		string	address('学院路234号'), verb: false, required: true;
		string_china_mobile_phone	cell_phone('18677778888'), verb: false, required: true;
		occupation_type	occupation('$(object)'), verb: false, required: true, referenceBy: employeeList;
		responsibility_type	responsible_for('$(object)'), verb: false, required: true, referenceBy: employeeList;
		salary_grade	current_salary_grade('$(object)'), verb: false, required: true, referenceBy: employeeList;
		string	salary_account('6226 7788 9908 '), verb: false, required: true;
		job_application	job_application('$(object)'), verb: true, required: true, referenceBy: employeeList;
		profession_interview	profession_interview('$(object)'), verb: true, required: true, referenceBy: employeeList;
		hr_interview	hr_interview('$(object)'), verb: true, required: true, referenceBy: employeeList;
		offer_approval	offer_approval('$(object)'), verb: true, required: true, referenceBy: employeeList;
		offer_acceptance	offer_acceptance('$(object)'), verb: true, required: true, referenceBy: employeeList;
		employee_boarding	employee_boarding('$(object)'), verb: true, required: true, referenceBy: employeeList;
		termination	termination('$(object)'), verb: true, required: true, referenceBy: employeeList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		string	current_status('JOB_APPLIED|PASSED_WITH_PROFESSION|PASSED_BY_HR|OFFER_APPROVED|OFFER_ACCEPTED|EMPLOYEE_BOARDED|TERMINATED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(12){
		employeeCompanyTrainingList	employee(基本信息)--employee;
		employeeSkillList	employee(基本信息)--employee;
		employeePerformanceList	employee(基本信息)--employee;
		employeeWorkExperienceList	employee(基本信息)--employee;
		employeeLeaveList	who(基本信息)--who;
		employeeInterviewList	employee(基本信息)--employee;
		employeeAttendanceList	employee(基本信息)--employee;
		employeeQualifierList	employee(基本信息)--employee;
		employeeEducationList	employee(基本信息)--employee;
		employeeAwardList	employee(基本信息)--employee;
		employeeSalarySheetList	employee(基本信息)--employee;
		payingOffList	paid_for(基本信息)--paid_for;
	}
} depth=4; isRoot = false

job_application{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		date	application_time('2018-03-04'), verb: false, required: true;
		string	who('申请者本人'), verb: false, required: true;
		string	comments('我觉得我符合职位要求，请给我一个机会为公司发展做出贡献，谢谢！'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	job_application(基本信息)--job_application;
	}
} depth=0; isRoot = true

profession_interview{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('技术部'), verb: false, required: true;
		date	interview_time('2018-03-04'), verb: false, required: true;
		string	comments('能力各方面表现不错，进入下一轮'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	profession_interview(基本信息)--profession_interview;
	}
} depth=0; isRoot = true

hr_interview{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('人力资源部'), verb: false, required: true;
		date	interview_time('2018-03-04'), verb: false, required: true;
		string	comments('软技能，责任感，气质不错啊'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	hr_interview(基本信息)--hr_interview;
	}
} depth=0; isRoot = true

offer_approval{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('总经理'), verb: false, required: true;
		date	approve_time('2018-03-04'), verb: false, required: true;
		string	comments('该员工发展潜力不错，'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	offer_approval(基本信息)--offer_approval;
	}
} depth=0; isRoot = true

offer_acceptance{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('申请者'), verb: false, required: true;
		date	accept_time('2018-03-04'), verb: false, required: true;
		string	comments('谢谢，我一个月内上班'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	offer_acceptance(基本信息)--offer_acceptance;
	}
} depth=0; isRoot = true

employee_boarding{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('人力资源部'), verb: false, required: true;
		date	employ_time('2018-03-04'), verb: false, required: true;
		string	comments('欢迎加入植物医生大家庭'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	employee_boarding(基本信息)--employee_boarding;
	}
} depth=0; isRoot = true

instructor{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('高级讲师'), verb: false, required: true;
		string	family_name('张|王|李|贺'), verb: false, required: true;
		string	given_name('文强|大伟|字章'), verb: false, required: true;
		string_china_mobile_phone	cell_phone('18699990000'), verb: false, required: true;
		string_email	email('instructor@gmail.com'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: instructorList;
		string	introduction('这是一个长长长长长长长长的介绍'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		companyTrainingList	instructor(基本信息)--instructor;
	}
} depth=1; isRoot = false

company_training{
	fields(9){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('入职培训'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: companyTrainingList;
		instructor	instructor('$(object)'), verb: false, required: true, referenceBy: companyTrainingList;
		training_course_type	training_course_type('$(object)'), verb: false, required: true, referenceBy: companyTrainingList;
		date_past	time_start('past()'), verb: false, required: true;
		int	duration_hours('3'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeCompanyTrainingList	training(基本信息)--training;
	}
} depth=2; isRoot = false

scoring{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	scored_by('王志文'), verb: false, required: true;
		int	score('100'), verb: false, required: true;
		string	comment('这个题做的真不错啊'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeCompanyTrainingList	scoring(基本信息)--scoring;
	}
} depth=0; isRoot = true

employee_company_training{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeCompanyTrainingList;
		company_training	training('$(object)'), verb: false, required: true, referenceBy: employeeCompanyTrainingList;
		scoring	scoring('$(object)'), verb: true, required: true, referenceBy: employeeCompanyTrainingList;
		string	current_status('SCORED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_skill{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeSkillList;
		skill_type	skill_type('$(object)'), verb: false, required: true, referenceBy: employeeSkillList;
		string	description('高手高手高高手'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_performance{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeePerformanceList;
		string	performance_comment('绩效大大的不错'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_work_experience{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeWorkExperienceList;
		date	start('2008-01-10'), verb: false, required: true;
		date	end('2018-01-10'), verb: false, required: true;
		string	company('丝芙兰化妆品公司'), verb: false, required: true;
		string	description('在此期间取得非常好的绩效，赢得了客户的信赖'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_leave{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	who('$(object)'), verb: false, required: true, referenceBy: employeeLeaveList;
		leave_type	type('$(object)'), verb: false, required: true, referenceBy: employeeLeaveList;
		int	leave_duration_hour('8'), verb: false, required: true;
		string	remark('请年假，出去耍！！！！'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_interview{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeInterviewList;
		interview_type	interview_type('$(object)'), verb: false, required: true, referenceBy: employeeInterviewList;
		string	remark('结果不错，面试通过！'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_attendance{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeAttendanceList;
		date	enter_time('2017-01-01'), verb: false, required: true;
		date	leave_time('2017-03-01'), verb: false, required: true;
		int	duration_hours('8'), verb: false, required: true;
		string	remark('今天状态不错啊'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_qualifier{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeQualifierList;
		date	qualified_time('2017-01-01'), verb: false, required: true;
		string	type('认证药剂师|认证架构师|认证会计师|认证经济师|OCP|CCNA|CCNP'), verb: false, required: true;
		string	level('高级|中级|初级'), verb: false, required: true;
		string	remark('考试成绩当年第一名'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_education{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeEducationList;
		date	complete_time('2017-01-01'), verb: false, required: true;
		string	type('小学|初中|高中|大学|硕士|博士|职业教育'), verb: false, required: true;
		string	remark('考试成绩当年第一名'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_award{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeAwardList;
		date	complete_time('2017-01-01'), verb: false, required: true;
		string	type('明星员工|销售之星|技术之星|管理之星|终身成就奖'), verb: false, required: true;
		string	remark('考试成绩当年第一名'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_salary_sheet{
	fields(13){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeSalarySheetList;
		salary_grade	current_salary_grade('$(object)'), verb: false, required: true, referenceBy: employeeSalarySheetList;
		money	base_salary('$3000.10'), verb: false, required: true;
		money	bonus('$1000.10'), verb: false, required: true;
		money	reward('$1000.10'), verb: false, required: true;
		money	personal_tax('$792.88'), verb: false, required: true;
		money	social_security('$1100.22'), verb: false, required: true;
		money	housing_found('$1222.99'), verb: false, required: true;
		money	job_insurance('$8.88'), verb: false, required: true;
		paying_off	paying_off('$(object)'), verb: true, required: true, referenceBy: employeeSalarySheetList;
		string	current_status('PAID_OFF'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=6; isRoot = false

paying_off{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('出纳'), verb: false, required: true;
		employee	paid_for('$(object)'), verb: false, required: true, referenceBy: payingOffList;
		date	paid_time('2018-01-19'), verb: false, required: true;
		money	amount('$5223.88'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeSalarySheetList	paying_off(基本信息)--paying_off;
	}
} depth=5; isRoot = false

user_domain{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('用户区域'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		userWhiteListList	domain(基本信息)--domain;
		secUserList	domain(基本信息)--domain;
	}
} depth=0; isRoot = true

user_white_list{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	user_identity('clariones|13808188512'), verb: false, required: true;
		string	user_special_functions('tester;ios-spokesperson'), verb: false, required: true;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: userWhiteListList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

sec_user{
	fields(12){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	login('login'), verb: false, required: true;
		string_china_mobile_phone	mobile('13900000001'), verb: false, required: true;
		string	email('|suddy_chang@163.com'), verb: false, required: false;
		string_password	pwd('*******'), verb: false, required: true;
		int	verification_code('0|9999999'), verb: false, required: true;
		date_time	verification_code_expire('2099-12-31T09:09:09'), verb: false, required: true;
		date_time	last_login_time('2099-12-31T09:09:09'), verb: false, required: true;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: secUserList;
		sec_user_blocking	blocking('$(object)'), verb: true, required: true, referenceBy: secUserList;
		string	current_status('BLOCKED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		userAppList	sec_user(基本信息)--sec_user;
		loginHistoryList	sec_user(基本信息)--sec_user;
	}
} depth=1; isRoot = false

sec_user_blocking{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('currentUser()'), verb: false, required: true;
		date_time_create	block_time('createTime()'), verb: false, required: true;
		string	comments('这个用户多次发送违反社区的帖子，现在把他给屏蔽了'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		secUserList	blocking(基本信息)--blocking;
	}
} depth=0; isRoot = true

user_app{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('审车平台|账户管理|接车公司|审车公司|维修公司|顾客'), verb: false, required: true;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: userAppList;
		string	app_icon('users|bank|wechat|bar-chart|user|users'), verb: false, required: true;
		bool	full_access('true'), verb: false, required: true;
		string	permission('MXWR|MXWR'), verb: false, required: true;
		string	object_type('CarInspectionPlatform|UserDomain|CarReceivingServiceCompany|CarInspectionServiceCompany|CarRepairingServiceCompany|CustomerInfo'), verb: false, required: true;
		string	object_id('CIP000001|UD000001|CRSC000001|CISC000001|CRSC000001|CI000001'), verb: false, required: true;
		string	location('/link/to/app'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		listAccessList	app(基本信息)--app;
		objectAccessList	app(基本信息)--app;
	}
} depth=2; isRoot = false

list_access{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('列表'), verb: false, required: true;
		string	internal_name('levelOneCategoryList'), verb: false, required: true;
		bool	read_permission('true'), verb: false, required: true;
		bool	create_permission('true'), verb: false, required: true;
		bool	delete_permission('true'), verb: false, required: true;
		bool	update_permission('true'), verb: false, required: true;
		bool	execution_permission('true'), verb: false, required: true;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: listAccessList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

object_access{
	fields(14){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('控制访问列表1'), verb: false, required: true;
		string	object_type('FranchiseeStoreCountryCenter|AccountSet'), verb: false, required: true;
		string	list1('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list2('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list3('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list4('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list5('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list6('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list7('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list8('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list9('catalogList|levelOneCategoryList'), verb: false, required: true;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: objectAccessList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

login_history{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		date_time_create	login_time('createTime()'), verb: false, required: true;
		string	from_ip('192.168.1.1|192.168.1.2'), verb: false, required: true;
		string	description('登陆成功'), verb: false, required: true;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: loginHistoryList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

generic_form{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('登记输入单'), verb: false, required: true;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		formMessageList	form(基本信息)--form;
		formFieldMessageList	form(基本信息)--form;
		formFieldList	form(基本信息)--form;
		formActionList	form(基本信息)--form;
	}
} depth=0; isRoot = true

form_message{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('字段组合错误'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formMessageList;
		string	level('success|info|warning|danger'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_field_message{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('输入错误'), verb: false, required: true;
		string	parameter_name('name'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldMessageList;
		string	level('success|info|warning|danger'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_field{
	fields(18){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	label('姓名|年龄|出生地|国籍'), verb: false, required: true;
		string	locale_key('name|age|birth_place|country'), verb: false, required: true;
		string	parameter_name('name'), verb: false, required: true;
		string	type('text|longtext|date|date_time|money|url|image|password|number|switch|vcode'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldList;
		string	placeholder('姓名就是你身份证上的名字'), verb: false, required: true;
		string	default_value('李一一'), verb: false, required: true;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true;
		string	field_group('基础信息|扩展信息'), verb: false, required: true;
		string	minimum_value('maybe any value'), verb: false, required: true;
		string	maximum_value('a value expression'), verb: false, required: true;
		bool	required('true|false'), verb: false, required: true;
		bool	disabled('true|false'), verb: false, required: true;
		bool	custom_rendering('false'), verb: false, required: true;
		string	candidate_values('|||男,女|高,矮'), verb: false, required: false;
		string	suggest_values('|||男,女|高,矮'), verb: false, required: false;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_action{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	label('功能'), verb: false, required: true;
		string	locale_key('name'), verb: false, required: true;
		string	action_key('save|update|remove'), verb: false, required: true;
		string	level('default|warning|danger|primary'), verb: false, required: true;
		string	url('genericFormManager/name/name0002/name0003/'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formActionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

retail_store_country_center{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('双链小超中国国运营中心|双链小超美国国运营中心|双链小超日本国运营中心|双链小超泰国国运营中心'), verb: false, required: true;
		string	service_number('4000-800-'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		string_url	web_site('https://www.doublechaintech.com/'), verb: false, required: true;
		string	address('四川省成都市天府新区双链大厦'), verb: false, required: true;
		string	operated_by('双链集团'), verb: false, required: true;
		string	legal_representative('张喜来|张喜来'), verb: false, required: true;
		string	description('中国中心正式成立，恭喜恭喜'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(24){
		catalogList	owner(基本信息)--owner;
		retailStoreProvinceCenterList	country(基本信息)--country;
		retailStoreList	retail_store_country_center(基本信息)--retail_store_country_center;
		retailStoreMemberList	owner(基本信息)--owner;
		goodsSupplierList	belong_to(基本信息)--belong_to;
		supplyOrderList	buyer(基本信息)--buyer;
		retailStoreOrderList	seller(基本信息)--seller;
		warehouseList	owner(基本信息)--owner;
		transportFleetList	owner(基本信息)--owner;
		accountSetList	country_center(基本信息)--country_center;
		levelOneDepartmentList	belongs_to(基本信息)--belongs_to;
		skillTypeList	company(基本信息)--company;
		responsibilityTypeList	company(基本信息)--company;
		terminationReasonList	company(基本信息)--company;
		terminationTypeList	company(基本信息)--company;
		occupationTypeList	company(基本信息)--company;
		leaveTypeList	company(基本信息)--company;
		salaryGradeList	company(基本信息)--company;
		interviewTypeList	company(基本信息)--company;
		trainingCourseTypeList	company(基本信息)--company;
		publicHolidayList	company(基本信息)--company;
		employeeList	company(基本信息)--company;
		instructorList	company(基本信息)--company;
		companyTrainingList	company(基本信息)--company;
	}
} depth=0; isRoot = true

catalog{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: catalogList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		levelOneCategoryList	catalog(基本信息)--catalog;
	}
} depth=1; isRoot = false

level_one_category{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		catalog	catalog('$(object)'), verb: false, required: true, referenceBy: levelOneCategoryList;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		levelTwoCategoryList	parent_category(基本信息)--parent_category;
	}
} depth=2; isRoot = false

level_two_category{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		level_one_category	parent_category('$(object)'), verb: false, required: true, referenceBy: levelTwoCategoryList;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		levelThreeCategoryList	parent_category(基本信息)--parent_category;
	}
} depth=3; isRoot = false

level_three_category{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		level_two_category	parent_category('$(object)'), verb: false, required: true, referenceBy: levelThreeCategoryList;
		string	name('水果蔬菜|肉禽蛋奶|冷热速食|休闲食品|酒水饮料|粮油调味|清洁日化|家居用品|鲜花蛋糕|医药健康'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		productList	parent_category(基本信息)--parent_category;
	}
} depth=4; isRoot = false

product{
	fields(9){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('啤酒|可乐|久久鸭'), verb: false, required: true;
		level_three_category	parent_category('$(object)'), verb: false, required: true, referenceBy: productList;
		string	origin('四川|广东|江苏|安徽|日本|法国'), verb: false, required: true;
		string	remark('可口可乐，销售百年的糖水，获得了全世界额青睐'), verb: false, required: true;
		string	brand('品牌品牌品牌品牌品牌品牌品牌品牌品牌品牌品牌品'), verb: false, required: true;
		string_image	picture('this is a looooooooooog.jpg'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		skuList	product(基本信息)--product;
	}
} depth=5; isRoot = false

sku{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('可乐-大罐的'), verb: false, required: true;
		string	size('大|中|小'), verb: false, required: true;
		product	product('$(object)'), verb: false, required: true, referenceBy: skuList;
		string	barcode('TM00000000001'), verb: false, required: true;
		string	package_type('包装类型'), verb: false, required: true;
		string	net_content('包装数量等信息,包装数量等信息,包装数量等信息'), verb: false, required: true;
		money	price('$1323.33'), verb: false, required: true;
		string_image	picture('this is a loooooooooooooooog.jpg'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	sku(基本信息)--sku;
	}
} depth=6; isRoot = false

retail_store_province_center{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('双链小超四川省运营中心|双链小超北京运营中心'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		retail_store_country_center	country('$(object)'), verb: false, required: true, referenceBy: retailStoreProvinceCenterList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		provinceCenterDepartmentList	province_center(基本信息)--province_center;
		provinceCenterEmployeeList	province_center(基本信息)--province_center;
		retailStoreCityServiceCenterList	belongs_to(基本信息)--belongs_to;
	}
} depth=1; isRoot = false

province_center_department{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('供应链部|采购部|管理部|财务部|法务部|市场部|人力资源部'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		retail_store_province_center	province_center('$(object)'), verb: false, required: true, referenceBy: provinceCenterDepartmentList;
		string	manager('刘强|王德宏'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		provinceCenterEmployeeList	department(基本信息)--department;
	}
} depth=2; isRoot = false

province_center_employee{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('刘强|王德宏'), verb: false, required: true;
		string_china_mobile_phone	mobile('13999998888'), verb: false, required: true;
		string_email	email('wangdehong@yatang.cn|liuqiang@yatang.cn'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		province_center_department	department('$(object)'), verb: false, required: true, referenceBy: provinceCenterEmployeeList;
		retail_store_province_center	province_center('$(object)'), verb: false, required: true, referenceBy: provinceCenterEmployeeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

retail_store_city_service_center{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('双链小超成都办事处|双链小超绵阳办事处|双链小超巴中办事处'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		retail_store_province_center	belongs_to('$(object)'), verb: false, required: true, referenceBy: retailStoreCityServiceCenterList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		cityPartnerList	city_service_center(基本信息)--city_service_center;
		potentialCustomerList	city_service_center(基本信息)--city_service_center;
		cityEventList	city_service_center(基本信息)--city_service_center;
		retailStoreList	city_service_center(基本信息)--city_service_center;
	}
} depth=2; isRoot = false

city_partner{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('曾倩|黄风格|郭超'), verb: false, required: true;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: cityPartnerList;
		string	description('负责开拓市场，具有极强的开拓能力'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		potentialCustomerList	city_partner(基本信息)--city_partner;
		potentialCustomerContactList	city_partner(基本信息)--city_partner;
	}
} depth=3; isRoot = false

potential_customer{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('曾倩|黄风格|郭超'), verb: false, required: true;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: potentialCustomerList;
		city_partner	city_partner('$(object)'), verb: false, required: true, referenceBy: potentialCustomerList;
		string	description('负责开拓市场，具有极强的开拓能力'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		potentialCustomerContactPersonList	potential_customer(基本信息)--potential_customer;
		potentialCustomerContactList	potential_customer(基本信息)--potential_customer;
		eventAttendanceList	potential_customer(基本信息)--potential_customer;
	}
} depth=4; isRoot = false

potential_customer_contact_person{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('赵先生'), verb: false, required: true;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactPersonList;
		string	description('这人在决策中战友较大的权重，密切观察中.....'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		potentialCustomerContactList	contact_to(基本信息)--contact_to;
	}
} depth=5; isRoot = false

potential_customer_contact{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('和连载客户的联系记录'), verb: false, required: true;
		date	contact_date('2016-09-09'), verb: false, required: true;
		string	contact_method('电话|短信|登门拜访|活动聊天'), verb: false, required: true;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList;
		city_partner	city_partner('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList;
		potential_customer_contact_person	contact_to('$(object)'), verb: false, required: true, referenceBy: potentialCustomerContactList;
		string	description('转化希望很大'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=6; isRoot = false

city_event{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('小超见面会|双链小超说明会'), verb: false, required: true;
		string_china_mobile_phone	mobile('13677778888'), verb: false, required: true;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: cityEventList;
		string	description('给大家讲解小超的发展蓝图'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		eventAttendanceList	city_event(基本信息)--city_event;
	}
} depth=3; isRoot = false

event_attendance{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('小超见面会参加信息'), verb: false, required: true;
		potential_customer	potential_customer('$(object)'), verb: false, required: true, referenceBy: eventAttendanceList;
		city_event	city_event('$(object)'), verb: false, required: true, referenceBy: eventAttendanceList;
		string	description('体会不错，考虑加盟'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

retail_store{
	fields(19){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('中和社区小超|华阳社区小超|大源社区小超'), verb: false, required: true;
		string	telephone('02887654321'), verb: false, required: true;
		string	owner('吕刚'), verb: false, required: true;
		retail_store_country_center	retail_store_country_center('$(object)'), verb: false, required: true, referenceBy: retailStoreList;
		retail_store_city_service_center	city_service_center('$(object)'), verb: false, required: true, referenceBy: retailStoreList;
		retail_store_creation	creation('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		retail_store_investment_invitation	investment_invitation('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		retail_store_franchising	franchising('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		retail_store_decoration	decoration('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		retail_store_opening	opening('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		retail_store_closing	closing('$(object)'), verb: true, required: true, referenceBy: retailStoreList;
		date_past	founded('past()'), verb: false, required: true;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		string	description('啤酒饮料矿泉水，香肠瓜子方便面, 请让一让'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		string	current_status('CREATED|INVESTMENT_INVITED|FRANCHISED|DECORATED|OPENNED|CLOSED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(5){
		consumerOrderList	store(基本信息)--store;
		retailStoreOrderList	buyer(基本信息)--buyer;
		goodsList	retail_store(基本信息)--retail_store;
		transportTaskList	end(基本信息)--end;
		accountSetList	retail_store(基本信息)--retail_store;
	}
} depth=3; isRoot = false

retail_store_creation{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('已经建好了'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	creation(基本信息)--creation;
	}
} depth=0; isRoot = true

retail_store_investment_invitation{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('欢迎前来咨询'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	investment_invitation(基本信息)--investment_invitation;
	}
} depth=0; isRoot = true

retail_store_franchising{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('谢谢加盟'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	franchising(基本信息)--franchising;
	}
} depth=0; isRoot = true

retail_store_decoration{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('装修'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	decoration(基本信息)--decoration;
	}
} depth=0; isRoot = true

retail_store_opening{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('装修'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	opening(基本信息)--opening;
	}
} depth=0; isRoot = true

retail_store_closing{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	comment('关闭'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreList	closing(基本信息)--closing;
	}
} depth=0; isRoot = true

retail_store_member{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('李亚青'), verb: false, required: true;
		string_china_mobile_phone	mobile_phone('18099887766'), verb: false, required: true;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(7){
		consumerOrderList	consumer(基本信息)--consumer;
		retailStoreMemberCouponList	owner(基本信息)--owner;
		memberWishlistList	owner(基本信息)--owner;
		memberRewardPointList	owner(基本信息)--owner;
		memberRewardPointRedemptionList	owner(基本信息)--owner;
		retailStoreMemberAddressList	owner(基本信息)--owner;
		retailStoreMemberGiftCardList	owner(基本信息)--owner;
	}
} depth=1; isRoot = false

consumer_order{
	fields(12){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('消费订单'), verb: false, required: true;
		retail_store_member	consumer('$(object)'), verb: false, required: true, referenceBy: consumerOrderList;
		supply_order_confirmation	confirmation('$(object)'), verb: true, required: true, referenceBy: consumerOrderList;
		supply_order_approval	approval('$(object)'), verb: true, required: true, referenceBy: consumerOrderList;
		supply_order_processing	processing('$(object)'), verb: true, required: true, referenceBy: consumerOrderList;
		supply_order_shipment	shipment('$(object)'), verb: true, required: true, referenceBy: consumerOrderList;
		supply_order_delivery	delivery('$(object)'), verb: true, required: true, referenceBy: consumerOrderList;
		retail_store	store('$(object)'), verb: false, required: true, referenceBy: consumerOrderList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		string	current_status('CONFIRMED|APPROVED|PROCESSED|SHIPPED|DELIVERED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(5){
		consumerOrderLineItemList	biz_order(基本信息)--biz_order;
		consumerOrderShippingGroupList	biz_order(基本信息)--biz_order;
		consumerOrderPaymentGroupList	biz_order(基本信息)--biz_order;
		consumerOrderPriceAdjustmentList	biz_order(基本信息)--biz_order;
		retailStoreMemberGiftCardConsumeRecordList	biz_order(基本信息)--biz_order;
	}
} depth=4; isRoot = false

consumer_order_confirmation{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('确认者'), verb: false, required: true;
		date	confirm_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

consumer_order_approval{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('批准者'), verb: false, required: true;
		date	approve_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

consumer_order_processing{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('处理者'), verb: false, required: true;
		date	process_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

consumer_order_shipment{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('运货者'), verb: false, required: true;
		date	ship_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

consumer_order_delivery{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('送货者'), verb: false, required: true;
		date	delivery_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

consumer_order_line_item{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderLineItemList;
		string	sku_id('SKU'), verb: false, required: true;
		string	sku_name('大瓶可乐'), verb: false, required: true;
		money	price('$5.97'), verb: false, required: true;
		double	quantity('1000.00'), verb: false, required: true;
		money	amount('$9999.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

consumer_order_shipping_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('送货到刘强家'), verb: false, required: true;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderShippingGroupList;
		money	amount('$599.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

consumer_order_payment_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('信用卡|支付宝|微信支付'), verb: false, required: true;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderPaymentGroupList;
		string	card_number('4111 1111 1111 - '), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

consumer_order_price_adjustment{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('端午促销'), verb: false, required: true;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: consumerOrderPriceAdjustmentList;
		money	amount('$599.99'), verb: false, required: true;
		string	provider('供货商|小超老板|广告赞助'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

retail_store_member_coupon{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('优惠券'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberCouponList;
		string	number('CP00001'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

member_wishlist{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('每周购买清单|每月购买清单'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberWishlistList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		memberWishlistProductList	owner(基本信息)--owner;
	}
} depth=2; isRoot = false

member_reward_point{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('购买积分|每月购买清单'), verb: false, required: true;
		int	point('20'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberRewardPointList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

member_reward_point_redemption{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('积分换锅|积分换刀'), verb: false, required: true;
		int	point('20'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: memberRewardPointRedemptionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

member_wishlist_product{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('农夫山泉|利箭口香糖'), verb: false, required: true;
		member_wishlist	owner('$(object)'), verb: false, required: true, referenceBy: memberWishlistProductList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

retail_store_member_address{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('家里|办公室|出差临时地址'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberAddressList;
		string_china_mobile_phone	mobile_phone('18099887766'), verb: false, required: true;
		string	address('四川省成都市科学城北路33号'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

retail_store_member_gift_card{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('礼品卡'), verb: false, required: true;
		retail_store_member	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardList;
		string	number('CP00001'), verb: false, required: true;
		money	remain('$213.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreMemberGiftCardConsumeRecordList	owner(基本信息)--owner;
	}
} depth=2; isRoot = false

retail_store_member_gift_card_consume_record{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		date_past	occure_time('past()'), verb: false, required: true;
		retail_store_member_gift_card	owner('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardConsumeRecordList;
		consumer_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreMemberGiftCardConsumeRecordList;
		string	number('GF00001'), verb: false, required: true;
		money	amount('$20.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

goods_supplier{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('宝洁|中粮|福临门'), verb: false, required: true;
		string	supply_product('洗护用品|食品|植物油'), verb: false, required: true;
		retail_store_country_center	belong_to('$(object)'), verb: false, required: true, referenceBy: goodsSupplierList;
		string_china_mobile_phone	contact_number('18677889999'), verb: false, required: true;
		string	description('啤酒饮料矿泉水，香肠瓜子方便面都提供'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		supplierProductList	supplier(基本信息)--supplier;
		supplyOrderList	seller(基本信息)--seller;
		accountSetList	goods_supplier(基本信息)--goods_supplier;
	}
} depth=1; isRoot = false

supplier_product{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	product_name('黑人牙膏'), verb: false, required: true;
		string	product_description('最好的黑人牙膏，只卖3块喽'), verb: false, required: true;
		string	product_unit('件|公斤|米'), verb: false, required: true;
		goods_supplier	supplier('$(object)'), verb: false, required: true, referenceBy: supplierProductList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		productSupplyDurationList	product(基本信息)--product;
	}
} depth=2; isRoot = false

product_supply_duration{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		int	quantity('100|200|500'), verb: false, required: true;
		string	duration('现货|两天|三天|一周'), verb: false, required: true;
		money	price('$9999.99'), verb: false, required: true;
		supplier_product	product('$(object)'), verb: false, required: true, referenceBy: productSupplyDurationList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

supply_order{
	fields(14){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		retail_store_country_center	buyer('$(object)'), verb: false, required: true, referenceBy: supplyOrderList;
		goods_supplier	seller('$(object)'), verb: false, required: true, referenceBy: supplyOrderList;
		string	title('双链给供货商下的订单'), verb: false, required: true;
		money	total_amount('$3000000000.88'), verb: false, required: true;
		supply_order_confirmation	confirmation('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		supply_order_approval	approval('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		supply_order_processing	processing('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		supply_order_picking	picking('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		supply_order_shipment	shipment('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		supply_order_delivery	delivery('$(object)'), verb: true, required: true, referenceBy: supplyOrderList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		string	current_status('CONFIRMED|APPROVED|PROCESSED|PICKED|SHIPPED|DELIVERED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		supplyOrderLineItemList	biz_order(基本信息)--biz_order;
		supplyOrderShippingGroupList	biz_order(基本信息)--biz_order;
		supplyOrderPaymentGroupList	biz_order(基本信息)--biz_order;
		goodsList	biz_order(基本信息)--biz_order;
	}
} depth=2; isRoot = false

supply_order_confirmation{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('确认者'), verb: false, required: true;
		date	confirm_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		consumerOrderList	confirmation(基本信息)--confirmation;
		supplyOrderList	confirmation(基本信息)--confirmation;
	}
} depth=0; isRoot = true

supply_order_approval{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('批准者'), verb: false, required: true;
		date	approve_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		consumerOrderList	approval(基本信息)--approval;
		supplyOrderList	approval(基本信息)--approval;
	}
} depth=0; isRoot = true

supply_order_processing{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('处理者'), verb: false, required: true;
		date	process_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		consumerOrderList	processing(基本信息)--processing;
		supplyOrderList	processing(基本信息)--processing;
	}
} depth=0; isRoot = true

supply_order_picking{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('处理者'), verb: false, required: true;
		date	process_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		supplyOrderList	picking(基本信息)--picking;
	}
} depth=0; isRoot = true

supply_order_shipment{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('运货者'), verb: false, required: true;
		date	ship_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		consumerOrderList	shipment(基本信息)--shipment;
		supplyOrderList	shipment(基本信息)--shipment;
	}
} depth=0; isRoot = true

supply_order_delivery{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('送货者'), verb: false, required: true;
		date	delivery_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		consumerOrderList	delivery(基本信息)--delivery;
		supplyOrderList	delivery(基本信息)--delivery;
	}
} depth=0; isRoot = true

supply_order_line_item{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderLineItemList;
		string	sku_id('SKU'), verb: false, required: true;
		string	sku_name('大瓶可乐'), verb: false, required: true;
		money	amount('$5.97'), verb: false, required: true;
		int	quantity('10000'), verb: false, required: true;
		string	unit_of_measurement('件|公斤|米'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

supply_order_shipping_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('送货到双链成都2号仓'), verb: false, required: true;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderShippingGroupList;
		money	amount('$5.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

supply_order_payment_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('付款办法'), verb: false, required: true;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: supplyOrderPaymentGroupList;
		string	card_number('4111 1111 1111 - '), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

retail_store_order{
	fields(14){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		retail_store	buyer('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderList;
		retail_store_country_center	seller('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderList;
		string	title('双链小超给双链供应链下的订单'), verb: false, required: true;
		money	total_amount('$3000000000.88'), verb: false, required: true;
		retail_store_order_confirmation	confirmation('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		retail_store_order_approval	approval('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		retail_store_order_processing	processing('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		retail_store_order_picking	picking('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		retail_store_order_shipment	shipment('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		retail_store_order_delivery	delivery('$(object)'), verb: true, required: true, referenceBy: retailStoreOrderList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		string	current_status('CONFIRMED|APPROVED|PROCESSED|PICKED|SHIPPED|DELIVERED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		retailStoreOrderLineItemList	biz_order(基本信息)--biz_order;
		retailStoreOrderShippingGroupList	biz_order(基本信息)--biz_order;
		retailStoreOrderPaymentGroupList	biz_order(基本信息)--biz_order;
		goodsList	retail_store_order(基本信息)--retail_store_order;
	}
} depth=4; isRoot = false

retail_store_order_confirmation{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('确认者'), verb: false, required: true;
		date	confirm_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	confirmation(基本信息)--confirmation;
	}
} depth=0; isRoot = true

retail_store_order_approval{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('批准者'), verb: false, required: true;
		date	approve_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	approval(基本信息)--approval;
	}
} depth=0; isRoot = true

retail_store_order_processing{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('处理者'), verb: false, required: true;
		date	process_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	processing(基本信息)--processing;
	}
} depth=0; isRoot = true

retail_store_order_picking{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('处理者'), verb: false, required: true;
		date	process_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	picking(基本信息)--picking;
	}
} depth=0; isRoot = true

retail_store_order_shipment{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('运货者'), verb: false, required: true;
		date	ship_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	shipment(基本信息)--shipment;
	}
} depth=0; isRoot = true

retail_store_order_delivery{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('送货者'), verb: false, required: true;
		date	delivery_time('2018-07-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		retailStoreOrderList	delivery(基本信息)--delivery;
	}
} depth=0; isRoot = true

retail_store_order_line_item{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderLineItemList;
		string	sku_id('SKU'), verb: false, required: true;
		string	sku_name('大瓶可乐'), verb: false, required: true;
		money	amount('$3.97'), verb: false, required: true;
		int	quantity('10000'), verb: false, required: true;
		string	unit_of_measurement('件|公斤|米'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

retail_store_order_shipping_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('送货到双链中和社区店'), verb: false, required: true;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderShippingGroupList;
		money	amount('$5.99'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

retail_store_order_payment_group{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('付款办法'), verb: false, required: true;
		retail_store_order	biz_order('$(object)'), verb: false, required: true, referenceBy: retailStoreOrderPaymentGroupList;
		string	card_number('4111 1111 1111 - '), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

warehouse{
	fields(9){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('187672平方米'), verb: false, required: true;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: warehouseList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(7){
		storageSpaceList	warehouse(基本信息)--warehouse;
		smartPalletList	warehouse(基本信息)--warehouse;
		supplierSpaceList	warehouse(基本信息)--warehouse;
		receivingSpaceList	warehouse(基本信息)--warehouse;
		shippingSpaceList	warehouse(基本信息)--warehouse;
		damageSpaceList	warehouse(基本信息)--warehouse;
		warehouseAssetList	owner(基本信息)--owner;
	}
} depth=1; isRoot = false

storage_space{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号存货区'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: storageSpaceList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsShelfList	storage_space(基本信息)--storage_space;
	}
} depth=2; isRoot = false

smart_pallet{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号移动区域，比如过道，货运通道等'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: smartPalletList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	smart_pallet(基本信息)--smart_pallet;
	}
} depth=2; isRoot = false

goods_shelf{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号存货区货架'), verb: false, required: true;
		storage_space	storage_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList;
		supplier_space	supplier_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList;
		damage_space	damage_space('$(object)'), verb: false, required: true, referenceBy: goodsShelfList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		goodsShelfStockCountList	shelf(基本信息)--shelf;
		goodsAllocationList	goods_shelf(基本信息)--goods_shelf;
	}
} depth=3; isRoot = false

goods_shelf_stock_count{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('每日盘点|每周盘点|每月盘点|年终盘点'), verb: false, required: true;
		date	count_time('2017-04-01'), verb: false, required: true;
		string	summary('使用先进的rfid技术，没有任何错误'), verb: false, required: true;
		goods_shelf	shelf('$(object)'), verb: false, required: true, referenceBy: goodsShelfStockCountList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		stockCountIssueTrackList	stock_count(基本信息)--stock_count;
	}
} depth=4; isRoot = false

stock_count_issue_track{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('盘点差错'), verb: false, required: true;
		date	count_time('2017-04-01'), verb: false, required: true;
		string	summary('发现错误已经修正完成'), verb: false, required: true;
		goods_shelf_stock_count	stock_count('$(object)'), verb: false, required: true, referenceBy: stockCountIssueTrackList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

goods_allocation{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号存货区货架20号货位'), verb: false, required: true;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		goods_shelf	goods_shelf('$(object)'), verb: false, required: true, referenceBy: goodsAllocationList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	goods_allocation(基本信息)--goods_allocation;
	}
} depth=4; isRoot = false

goods{
	fields(18){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('可口可乐'), verb: false, required: true;
		string	rfid('RF99192'), verb: false, required: true;
		string	uom('件|箱'), verb: false, required: true;
		int	max_package('10'), verb: false, required: true;
		date	expire_time('2019-09-09'), verb: false, required: true;
		sku	sku('$(object)'), verb: false, required: true, referenceBy: goodsList;
		receiving_space	receiving_space('$(object)'), verb: false, required: true, referenceBy: goodsList;
		goods_allocation	goods_allocation('$(object)'), verb: false, required: true, referenceBy: goodsList;
		smart_pallet	smart_pallet('$(object)'), verb: false, required: true, referenceBy: goodsList;
		shipping_space	shipping_space('$(object)'), verb: false, required: true, referenceBy: goodsList;
		transport_task	transport_task('$(object)'), verb: false, required: true, referenceBy: goodsList;
		retail_store	retail_store('$(object)'), verb: false, required: true, referenceBy: goodsList;
		supply_order	biz_order('$(object)'), verb: false, required: true, referenceBy: goodsList;
		retail_store_order	retail_store_order('$(object)'), verb: false, required: true, referenceBy: goodsList;
		goods_packaging	packaging('$(object)'), verb: true, required: true, referenceBy: goodsList;
		string	current_status('PACKED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsMovementList	goods(基本信息)--goods;
	}
} depth=7; isRoot = false

goods_packaging{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	package_name('王煜东'), verb: false, required: true;
		string	rfid('RF99192'), verb: false, required: true;
		date	package_time('2017-09-09'), verb: false, required: true;
		string	description('打包完成，准备起运'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	packaging(基本信息)--packaging;
	}
} depth=0; isRoot = true

goods_movement{
	fields(11){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		date_time	move_time('2017-08-09T09:09:09'), verb: false, required: true;
		string	facility('仓库货位|卡车|小超'), verb: false, required: true;
		string	facility_id('仓库货位|卡车|小超'), verb: false, required: true;
		string	from_ip('192.168.20.1'), verb: false, required: true;
		string	user_agent('Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405'), verb: false, required: true;
		string	session_id('FTYUIOLJYT^*(PLKJYT)'), verb: false, required: true;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		goods	goods('$(object)'), verb: false, required: true, referenceBy: goodsMovementList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=8; isRoot = false

supplier_space{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号供货商独立管理区'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: supplierSpaceList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsShelfList	supplier_space(基本信息)--supplier_space;
	}
} depth=2; isRoot = false

receiving_space{
	fields(9){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号仓库卸货区'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	description('每个收货区可以供一辆车卸货'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: receivingSpaceList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	receiving_space(基本信息)--receiving_space;
	}
} depth=2; isRoot = false

shipping_space{
	fields(9){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号装货区'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: shippingSpaceList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		string	description('每个收货区可以供一辆车装货'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsList	shipping_space(基本信息)--shipping_space;
	}
} depth=2; isRoot = false

damage_space{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	location('成都龙泉驿飞鹤路20号仓库损坏货物堆放区'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	total_area('1876平方米'), verb: false, required: true;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		warehouse	warehouse('$(object)'), verb: false, required: true, referenceBy: damageSpaceList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		goodsShelfList	damage_space(基本信息)--damage_space;
	}
} depth=2; isRoot = false

warehouse_asset{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('叉车|托盘|传送带备件'), verb: false, required: true;
		string	position('备用件存放区设备库房'), verb: false, required: true;
		warehouse	owner('$(object)'), verb: false, required: true, referenceBy: warehouseAssetList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

transport_fleet{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('双链先锋号车队'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		retail_store_country_center	owner('$(object)'), verb: false, required: true, referenceBy: transportFleetList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		transportTruckList	owner(基本信息)--owner;
		truckDriverList	belongs_to(基本信息)--belongs_to;
		transportTaskList	belongs_to(基本信息)--belongs_to;
	}
} depth=1; isRoot = false

transport_truck{
	fields(11){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('运货卡车'), verb: false, required: true;
		string	plate_number('川AK5'), verb: false, required: true;
		string	contact_number('02887654321'), verb: false, required: true;
		string	vehicle_license_number('VL9198'), verb: false, required: true;
		string	engine_number('EN00102'), verb: false, required: true;
		date	make_date('2010-09-09'), verb: false, required: true;
		string	mileage('100万公里'), verb: false, required: true;
		string	body_color('红色|蓝色|白色|灰色|银色|黑色'), verb: false, required: true;
		transport_fleet	owner('$(object)'), verb: false, required: true, referenceBy: transportTruckList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		transportTaskList	truck(基本信息)--truck;
	}
} depth=2; isRoot = false

truck_driver{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('运货卡车司机'), verb: false, required: true;
		string	driver_license_number('51099887733'), verb: false, required: true;
		string_china_mobile_phone	contact_number('18777778888'), verb: false, required: true;
		transport_fleet	belongs_to('$(object)'), verb: false, required: true, referenceBy: truckDriverList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		transportTaskList	driver(基本信息)--driver;
	}
} depth=2; isRoot = false

transport_task{
	fields(11){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('货运记录'), verb: false, required: true;
		string	start('双链二号仓'), verb: false, required: true;
		date_past	begin_time('past()'), verb: false, required: true;
		retail_store	end('$(object)'), verb: false, required: true, referenceBy: transportTaskList;
		truck_driver	driver('$(object)'), verb: false, required: true, referenceBy: transportTaskList;
		transport_truck	truck('$(object)'), verb: false, required: true, referenceBy: transportTaskList;
		transport_fleet	belongs_to('$(object)'), verb: false, required: true, referenceBy: transportTaskList;
		double	latitude('40.776877'), verb: false, required: true;
		double	longitude('130.273647'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		goodsList	transport_task(基本信息)--transport_task;
		transportTaskTrackList	movement(基本信息)--movement;
	}
} depth=4; isRoot = false

transport_task_track{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		date_past	track_time('past()'), verb: false, required: true;
		double	latitude('30.912929'), verb: false, required: true;
		double	longitude('104.121232'), verb: false, required: true;
		transport_task	movement('$(object)'), verb: false, required: true, referenceBy: transportTaskTrackList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

account_set{
	fields(14){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('账套2017|账套2018|账套2019'), verb: false, required: true;
		string	year_set('2017年|2018年|2019年'), verb: false, required: true;
		date	effective_date('2017-05-28'), verb: false, required: true;
		string	accounting_system('企业会计制度|小企业会计制度|合伙制会计制度'), verb: false, required: true;
		string	domestic_currency_code('RMB|USD'), verb: false, required: true;
		string	domestic_currency_name('人民币|美元'), verb: false, required: true;
		string	opening_bank('招商银行|工商银行'), verb: false, required: true;
		string	account_number('33265805054885'), verb: false, required: true;
		retail_store_country_center	country_center('$(object)'), verb: false, required: true, referenceBy: accountSetList;
		retail_store	retail_store('$(object)'), verb: false, required: true, referenceBy: accountSetList;
		goods_supplier	goods_supplier('$(object)'), verb: false, required: true, referenceBy: accountSetList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(3){
		accountingSubjectList	account_set(基本信息)--account_set;
		accountingPeriodList	account_set(基本信息)--account_set;
		accountingDocumentTypeList	accounting_period(基本信息)--accounting_period;
	}
} depth=4; isRoot = false

accounting_subject{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	accounting_subject_code('AS9999'), verb: false, required: true;
		string	accounting_subject_name('银行存款'), verb: false, required: true;
		int	accounting_subject_class_code('1|2|3|4|5|6'), verb: false, required: true;
		string	accounting_subject_class_name('资产类|负债类|共同类|所有者权益类|成本类|损益类'), verb: false, required: true;
		account_set	account_set('$(object)'), verb: false, required: true, referenceBy: accountingSubjectList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentLineList	accounting_subject(基本信息)--accounting_subject;
	}
} depth=5; isRoot = false

accounting_period{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('2017年1月|2017年2月|2017年3月|2017年4月|2017年5月|2017年6月|2017年7月|2017年8月|2017年9月|2017年10月|2017年11月|2017年12月'), verb: false, required: true;
		date	start_date('2017-01-09'), verb: false, required: true;
		date	end_date('2017-01-09'), verb: false, required: true;
		account_set	account_set('$(object)'), verb: false, required: true, referenceBy: accountingPeriodList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	accounting_period(基本信息)--accounting_period;
	}
} depth=5; isRoot = false

accounting_document_type{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('记账凭证|收款凭证|付款凭证'), verb: false, required: true;
		string	description('又称记账凭单，是会计人员根据审核无误的原始凭证按照经济业务事项的内容加以分类，并据以确定会计分录后所填制的会计凭证。它是登记账簿的直接依据。'), verb: false, required: true;
		account_set	accounting_period('$(object)'), verb: false, required: true, referenceBy: accountingDocumentTypeList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	document_type(基本信息)--document_type;
	}
} depth=5; isRoot = false

accounting_document{
	fields(11){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('记账凭证'), verb: false, required: true;
		date	accounting_document_date('2018-09-09'), verb: false, required: true;
		accounting_period	accounting_period('$(object)'), verb: false, required: true, referenceBy: accountingDocumentList;
		accounting_document_type	document_type('$(object)'), verb: false, required: true, referenceBy: accountingDocumentList;
		accounting_document_creation	creation('$(object)'), verb: true, required: true, referenceBy: accountingDocumentList;
		accounting_document_confirmation	confirmation('$(object)'), verb: true, required: true, referenceBy: accountingDocumentList;
		accounting_document_auditing	auditing('$(object)'), verb: true, required: true, referenceBy: accountingDocumentList;
		accounting_document_posting	posting('$(object)'), verb: true, required: true, referenceBy: accountingDocumentList;
		string	current_status('CREATED|CONFIRMED|AUDITED|POSTED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		originalVoucherList	belongs_to(基本信息)--belongs_to;
		accountingDocumentLineList	belongs_to(基本信息)--belongs_to;
	}
} depth=6; isRoot = false

accounting_document_creation{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('确认提交'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	creation(基本信息)--creation;
	}
} depth=0; isRoot = true

accounting_document_confirmation{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('确认通过'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	confirmation(基本信息)--confirmation;
	}
} depth=0; isRoot = true

accounting_document_auditing{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('审核通过，要都审核过了才通过哦'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	auditing(基本信息)--auditing;
	}
} depth=0; isRoot = true

accounting_document_posting{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('审核通过，要都审核过了才通过哦'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		accountingDocumentList	posting(基本信息)--posting;
	}
} depth=0; isRoot = true

original_voucher{
	fields(12){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('这是手写的发票'), verb: false, required: true;
		string	made_by('李亚青'), verb: false, required: true;
		string	received_by('本公司'), verb: false, required: true;
		string	voucher_type('原始凭证|发票|出库单|入库单|存款回执|验收证明|借款凭证'), verb: false, required: true;
		string_image	voucher_image('goodthing.jpg'), verb: false, required: true;
		accounting_document	belongs_to('$(object)'), verb: false, required: true, referenceBy: originalVoucherList;
		original_voucher_creation	creation('$(object)'), verb: true, required: true, referenceBy: originalVoucherList;
		original_voucher_confirmation	confirmation('$(object)'), verb: true, required: true, referenceBy: originalVoucherList;
		original_voucher_auditing	auditing('$(object)'), verb: true, required: true, referenceBy: originalVoucherList;
		string	current_status('CREATED|CONFIRMED|AUDITED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=7; isRoot = false

original_voucher_creation{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('确认提交'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		originalVoucherList	creation(基本信息)--creation;
	}
} depth=0; isRoot = true

original_voucher_confirmation{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('确认通过'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		originalVoucherList	confirmation(基本信息)--confirmation;
	}
} depth=0; isRoot = true

original_voucher_auditing{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('财务会计'), verb: false, required: true;
		string	comments('审核通过，要都审核过了才通过哦'), verb: false, required: true;
		date	make_date('2017-09-09'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		originalVoucherList	auditing(基本信息)--auditing;
	}
} depth=0; isRoot = true

accounting_document_line{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('收到存款'), verb: false, required: true;
		string	code('AS9999'), verb: false, required: true;
		string	direct('借|贷'), verb: false, required: true;
		money	amount('$989127.99'), verb: false, required: true;
		accounting_document	belongs_to('$(object)'), verb: false, required: true, referenceBy: accountingDocumentLineList;
		accounting_subject	accounting_subject('$(object)'), verb: false, required: true, referenceBy: accountingDocumentLineList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=7; isRoot = false

level_one_department{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		retail_store_country_center	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelOneDepartmentList;
		string	name('供应链部|采购部|管理部|财务部|信息技术部|法务部|市场部|人力资源部'), verb: false, required: true;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true;
		string	manager('刘强|王德宏'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		levelTwoDepartmentList	belongs_to(基本信息)--belongs_to;
	}
} depth=1; isRoot = false

level_two_department{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		level_one_department	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelTwoDepartmentList;
		string	name('信息系统部大数据部门'), verb: false, required: true;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		levelThreeDepartmentList	belongs_to(基本信息)--belongs_to;
	}
} depth=2; isRoot = false

level_three_department{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		level_two_department	belongs_to('$(object)'), verb: false, required: true, referenceBy: levelThreeDepartmentList;
		string	name('信息系统部大数据清洗组|信息系统部大数据运算组|信息系统部大数据解决方案组'), verb: false, required: true;
		string	description('主要执行集团信息系统建设，维护，规划'), verb: false, required: true;
		date_past	founded('past()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	department(基本信息)--department;
	}
} depth=3; isRoot = false

skill_type{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('S0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: skillTypeList;
		string	description('JAVA编程|大数据|并行计算|操作系统|数据库'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeSkillList	skill_type(基本信息)--skill_type;
	}
} depth=1; isRoot = false

responsibility_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('S0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: responsibilityTypeList;
		string	base_description('合规管理|财务管理|总务管理|信息管理|库存管理|市场管理|产品管理|采购管理|资产管理|销售管理|安全管理'), verb: false, required: true;
		string	detail_description('负责集团及其他分公司信息系统有效运作，并使集团在技术上领先'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	responsible_for(基本信息)--responsible_for;
	}
} depth=1; isRoot = false

termination_reason{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('ETR0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: terminationReasonList;
		string	description('业务发展，公司转型|战略调整|业务优化'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		terminationList	reason(基本信息)--reason;
	}
} depth=1; isRoot = false

termination_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('ETT0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: terminationTypeList;
		string	base_description('合同解除|辞职|退休'), verb: false, required: true;
		string	detail_description('这个终止原因的描述是这样的.................................................'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		terminationList	type(基本信息)--type;
	}
} depth=1; isRoot = false

occupation_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('OT0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: occupationTypeList;
		string	description('需求分析员|软件工程师|高级软件工程师|财务分析师|财务主管|出纳|总经理|副总经历|大数据架构师|销售经理|销售总监|技术总监|区域销售经理'), verb: false, required: true;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	occupation(基本信息)--occupation;
	}
} depth=1; isRoot = false

leave_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('LT0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: leaveTypeList;
		string	description('带薪年假|病假|事假|婚假|产假|陪产假|丧假|探亲假|哺乳假|待产假|陪待产假'), verb: false, required: true;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeLeaveList	type(基本信息)--type;
	}
} depth=1; isRoot = false

salary_grade{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('SG0000'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: salaryGradeList;
		string	name('一级薪资|二级薪资|三级薪资|四级薪资|五级薪资|六级薪资|七级薪资'), verb: false, required: true;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		employeeList	current_salary_grade(基本信息)--current_salary_grade;
		employeeSalarySheetList	current_salary_grade(基本信息)--current_salary_grade;
	}
} depth=1; isRoot = false

interview_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('INTRVW00'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: interviewTypeList;
		string	description('特别情况面试|离职面试|信息面试|入职面试'), verb: false, required: true;
		string	detail_description('故事还得从遥远的古代开始.................................................'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeInterviewList	interview_type(基本信息)--interview_type;
	}
} depth=1; isRoot = false

training_course_type{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('TC00'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: trainingCourseTypeList;
		string	name('入职培训|售前培训|技术培训|管理培训|外训'), verb: false, required: true;
		string	description('培训是提升个人和企业竞争力的法宝'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		companyTrainingList	training_course_type(基本信息)--training_course_type;
	}
} depth=1; isRoot = false

public_holiday{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	code('PH00'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: publicHolidayList;
		string	name('元旦节|春节|妇女节|清明节|端午节|暑假|国庆节|中秋节'), verb: false, required: true;
		string	description('节日快乐，万事如意！'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

termination{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		termination_reason	reason('$(object)'), verb: false, required: true, referenceBy: terminationList;
		termination_type	type('$(object)'), verb: false, required: true, referenceBy: terminationList;
		string	comment('员工离职'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	termination(基本信息)--termination;
	}
} depth=2; isRoot = false

view{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('面试官'), verb: false, required: true;
		string	assessment('小伙子不错，值得培养'), verb: false, required: true;
		date	interview_time('2017-03-03'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=0; isRoot = true

employee{
	fields(24){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: employeeList;
		string	title('程序员'), verb: false, required: true;
		level_three_department	department('$(object)'), verb: false, required: true, referenceBy: employeeList;
		string	family_name('张|王|李|贺'), verb: false, required: true;
		string	given_name('文强|大伟|字章'), verb: false, required: true;
		string_email	email('share@163.com'), verb: false, required: true;
		string	city('北京|天津|成都|上海|深圳|广州|西安'), verb: false, required: true;
		string	address('学院路234号'), verb: false, required: true;
		string_china_mobile_phone	cell_phone('18677778888'), verb: false, required: true;
		occupation_type	occupation('$(object)'), verb: false, required: true, referenceBy: employeeList;
		responsibility_type	responsible_for('$(object)'), verb: false, required: true, referenceBy: employeeList;
		salary_grade	current_salary_grade('$(object)'), verb: false, required: true, referenceBy: employeeList;
		string	salary_account('6226 7788 9908 '), verb: false, required: true;
		job_application	job_application('$(object)'), verb: true, required: true, referenceBy: employeeList;
		profession_interview	profession_interview('$(object)'), verb: true, required: true, referenceBy: employeeList;
		hr_interview	hr_interview('$(object)'), verb: true, required: true, referenceBy: employeeList;
		offer_approval	offer_approval('$(object)'), verb: true, required: true, referenceBy: employeeList;
		offer_acceptance	offer_acceptance('$(object)'), verb: true, required: true, referenceBy: employeeList;
		employee_boarding	employee_boarding('$(object)'), verb: true, required: true, referenceBy: employeeList;
		termination	termination('$(object)'), verb: true, required: true, referenceBy: employeeList;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		string	current_status('JOB_APPLIED|PASSED_WITH_PROFESSION|PASSED_BY_HR|OFFER_APPROVED|OFFER_ACCEPTED|EMPLOYEE_BOARDED|TERMINATED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(12){
		employeeCompanyTrainingList	employee(基本信息)--employee;
		employeeSkillList	employee(基本信息)--employee;
		employeePerformanceList	employee(基本信息)--employee;
		employeeWorkExperienceList	employee(基本信息)--employee;
		employeeLeaveList	who(基本信息)--who;
		employeeInterviewList	employee(基本信息)--employee;
		employeeAttendanceList	employee(基本信息)--employee;
		employeeQualifierList	employee(基本信息)--employee;
		employeeEducationList	employee(基本信息)--employee;
		employeeAwardList	employee(基本信息)--employee;
		employeeSalarySheetList	employee(基本信息)--employee;
		payingOffList	paid_for(基本信息)--paid_for;
	}
} depth=4; isRoot = false

job_application{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		date	application_time('2018-03-04'), verb: false, required: true;
		string	who('申请者本人'), verb: false, required: true;
		string	comments('我觉得我符合职位要求，请给我一个机会为公司发展做出贡献，谢谢！'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	job_application(基本信息)--job_application;
	}
} depth=0; isRoot = true

profession_interview{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('技术部'), verb: false, required: true;
		date	interview_time('2018-03-04'), verb: false, required: true;
		string	comments('能力各方面表现不错，进入下一轮'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	profession_interview(基本信息)--profession_interview;
	}
} depth=0; isRoot = true

hr_interview{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('人力资源部'), verb: false, required: true;
		date	interview_time('2018-03-04'), verb: false, required: true;
		string	comments('软技能，责任感，气质不错啊'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	hr_interview(基本信息)--hr_interview;
	}
} depth=0; isRoot = true

offer_approval{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('总经理'), verb: false, required: true;
		date	approve_time('2018-03-04'), verb: false, required: true;
		string	comments('该员工发展潜力不错，'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	offer_approval(基本信息)--offer_approval;
	}
} depth=0; isRoot = true

offer_acceptance{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('申请者'), verb: false, required: true;
		date	accept_time('2018-03-04'), verb: false, required: true;
		string	comments('谢谢，我一个月内上班'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	offer_acceptance(基本信息)--offer_acceptance;
	}
} depth=0; isRoot = true

employee_boarding{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('人力资源部'), verb: false, required: true;
		date	employ_time('2018-03-04'), verb: false, required: true;
		string	comments('欢迎加入植物医生大家庭'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeList	employee_boarding(基本信息)--employee_boarding;
	}
} depth=0; isRoot = true

instructor{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('高级讲师'), verb: false, required: true;
		string	family_name('张|王|李|贺'), verb: false, required: true;
		string	given_name('文强|大伟|字章'), verb: false, required: true;
		string_china_mobile_phone	cell_phone('18699990000'), verb: false, required: true;
		string_email	email('instructor@gmail.com'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: instructorList;
		string	introduction('这是一个长长长长长长长长的介绍'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		companyTrainingList	instructor(基本信息)--instructor;
	}
} depth=1; isRoot = false

company_training{
	fields(9){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('入职培训'), verb: false, required: true;
		retail_store_country_center	company('$(object)'), verb: false, required: true, referenceBy: companyTrainingList;
		instructor	instructor('$(object)'), verb: false, required: true, referenceBy: companyTrainingList;
		training_course_type	training_course_type('$(object)'), verb: false, required: true, referenceBy: companyTrainingList;
		date_past	time_start('past()'), verb: false, required: true;
		int	duration_hours('3'), verb: false, required: true;
		date_time_update	last_update_time('updateTime()'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeCompanyTrainingList	training(基本信息)--training;
	}
} depth=2; isRoot = false

scoring{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	scored_by('王志文'), verb: false, required: true;
		int	score('100'), verb: false, required: true;
		string	comment('这个题做的真不错啊'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeCompanyTrainingList	scoring(基本信息)--scoring;
	}
} depth=0; isRoot = true

employee_company_training{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeCompanyTrainingList;
		company_training	training('$(object)'), verb: false, required: true, referenceBy: employeeCompanyTrainingList;
		scoring	scoring('$(object)'), verb: true, required: true, referenceBy: employeeCompanyTrainingList;
		string	current_status('SCORED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_skill{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeSkillList;
		skill_type	skill_type('$(object)'), verb: false, required: true, referenceBy: employeeSkillList;
		string	description('高手高手高高手'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_performance{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeePerformanceList;
		string	performance_comment('绩效大大的不错'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_work_experience{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeWorkExperienceList;
		date	start('2008-01-10'), verb: false, required: true;
		date	end('2018-01-10'), verb: false, required: true;
		string	company('丝芙兰化妆品公司'), verb: false, required: true;
		string	description('在此期间取得非常好的绩效，赢得了客户的信赖'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_leave{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	who('$(object)'), verb: false, required: true, referenceBy: employeeLeaveList;
		leave_type	type('$(object)'), verb: false, required: true, referenceBy: employeeLeaveList;
		int	leave_duration_hour('8'), verb: false, required: true;
		string	remark('请年假，出去耍！！！！'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_interview{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeInterviewList;
		interview_type	interview_type('$(object)'), verb: false, required: true, referenceBy: employeeInterviewList;
		string	remark('结果不错，面试通过！'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_attendance{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeAttendanceList;
		date	enter_time('2017-01-01'), verb: false, required: true;
		date	leave_time('2017-03-01'), verb: false, required: true;
		int	duration_hours('8'), verb: false, required: true;
		string	remark('今天状态不错啊'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_qualifier{
	fields(7){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeQualifierList;
		date	qualified_time('2017-01-01'), verb: false, required: true;
		string	type('认证药剂师|认证架构师|认证会计师|认证经济师|OCP|CCNA|CCNP'), verb: false, required: true;
		string	level('高级|中级|初级'), verb: false, required: true;
		string	remark('考试成绩当年第一名'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_education{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeEducationList;
		date	complete_time('2017-01-01'), verb: false, required: true;
		string	type('小学|初中|高中|大学|硕士|博士|职业教育'), verb: false, required: true;
		string	remark('考试成绩当年第一名'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_award{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeAwardList;
		date	complete_time('2017-01-01'), verb: false, required: true;
		string	type('明星员工|销售之星|技术之星|管理之星|终身成就奖'), verb: false, required: true;
		string	remark('考试成绩当年第一名'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=5; isRoot = false

employee_salary_sheet{
	fields(13){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		employee	employee('$(object)'), verb: false, required: true, referenceBy: employeeSalarySheetList;
		salary_grade	current_salary_grade('$(object)'), verb: false, required: true, referenceBy: employeeSalarySheetList;
		money	base_salary('$3000.10'), verb: false, required: true;
		money	bonus('$1000.10'), verb: false, required: true;
		money	reward('$1000.10'), verb: false, required: true;
		money	personal_tax('$792.88'), verb: false, required: true;
		money	social_security('$1100.22'), verb: false, required: true;
		money	housing_found('$1222.99'), verb: false, required: true;
		money	job_insurance('$8.88'), verb: false, required: true;
		paying_off	paying_off('$(object)'), verb: true, required: true, referenceBy: employeeSalarySheetList;
		string	current_status('PAID_OFF'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=6; isRoot = false

paying_off{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('出纳'), verb: false, required: true;
		employee	paid_for('$(object)'), verb: false, required: true, referenceBy: payingOffList;
		date	paid_time('2018-01-19'), verb: false, required: true;
		money	amount('$5223.88'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		employeeSalarySheetList	paying_off(基本信息)--paying_off;
	}
} depth=5; isRoot = false

user_domain{
	fields(3){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('用户区域'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		userWhiteListList	domain(基本信息)--domain;
		secUserList	domain(基本信息)--domain;
	}
} depth=0; isRoot = true

user_white_list{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	user_identity('clariones|13808188512'), verb: false, required: true;
		string	user_special_functions('tester;ios-spokesperson'), verb: false, required: true;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: userWhiteListList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

sec_user{
	fields(12){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	login('login'), verb: false, required: true;
		string_china_mobile_phone	mobile('13900000001'), verb: false, required: true;
		string	email('|suddy_chang@163.com'), verb: false, required: false;
		string_password	pwd('*******'), verb: false, required: true;
		int	verification_code('0|9999999'), verb: false, required: true;
		date_time	verification_code_expire('2099-12-31T09:09:09'), verb: false, required: true;
		date_time	last_login_time('2099-12-31T09:09:09'), verb: false, required: true;
		user_domain	domain('$(object)'), verb: false, required: true, referenceBy: secUserList;
		sec_user_blocking	blocking('$(object)'), verb: true, required: true, referenceBy: secUserList;
		string	current_status('BLOCKED'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		userAppList	sec_user(基本信息)--sec_user;
		loginHistoryList	sec_user(基本信息)--sec_user;
	}
} depth=1; isRoot = false

sec_user_blocking{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	who('currentUser()'), verb: false, required: true;
		date_time_create	block_time('createTime()'), verb: false, required: true;
		string	comments('这个用户多次发送违反社区的帖子，现在把他给屏蔽了'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(1){
		secUserList	blocking(基本信息)--blocking;
	}
} depth=0; isRoot = true

user_app{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('审车平台|账户管理|接车公司|审车公司|维修公司|顾客'), verb: false, required: true;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: userAppList;
		string	app_icon('users|bank|wechat|bar-chart|user|users'), verb: false, required: true;
		bool	full_access('true'), verb: false, required: true;
		string	permission('MXWR|MXWR'), verb: false, required: true;
		string	object_type('CarInspectionPlatform|UserDomain|CarReceivingServiceCompany|CarInspectionServiceCompany|CarRepairingServiceCompany|CustomerInfo'), verb: false, required: true;
		string	object_id('CIP000001|UD000001|CRSC000001|CISC000001|CRSC000001|CI000001'), verb: false, required: true;
		string	location('/link/to/app'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(2){
		listAccessList	app(基本信息)--app;
		objectAccessList	app(基本信息)--app;
	}
} depth=2; isRoot = false

list_access{
	fields(10){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('列表'), verb: false, required: true;
		string	internal_name('levelOneCategoryList'), verb: false, required: true;
		bool	read_permission('true'), verb: false, required: true;
		bool	create_permission('true'), verb: false, required: true;
		bool	delete_permission('true'), verb: false, required: true;
		bool	update_permission('true'), verb: false, required: true;
		bool	execution_permission('true'), verb: false, required: true;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: listAccessList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

object_access{
	fields(14){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	name('控制访问列表1'), verb: false, required: true;
		string	object_type('FranchiseeStoreCountryCenter|AccountSet'), verb: false, required: true;
		string	list1('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list2('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list3('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list4('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list5('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list6('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list7('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list8('catalogList|levelOneCategoryList'), verb: false, required: true;
		string	list9('catalogList|levelOneCategoryList'), verb: false, required: true;
		user_app	app('$(object)'), verb: false, required: true, referenceBy: objectAccessList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=3; isRoot = false

login_history{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		date_time_create	login_time('createTime()'), verb: false, required: true;
		string	from_ip('192.168.1.1|192.168.1.2'), verb: false, required: true;
		string	description('登陆成功'), verb: false, required: true;
		sec_user	sec_user('$(object)'), verb: false, required: true, referenceBy: loginHistoryList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=2; isRoot = false

generic_form{
	fields(4){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('登记输入单'), verb: false, required: true;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(4){
		formMessageList	form(基本信息)--form;
		formFieldMessageList	form(基本信息)--form;
		formFieldList	form(基本信息)--form;
		formActionList	form(基本信息)--form;
	}
} depth=0; isRoot = true

form_message{
	fields(5){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('字段组合错误'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formMessageList;
		string	level('success|info|warning|danger'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_field_message{
	fields(6){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	title('输入错误'), verb: false, required: true;
		string	parameter_name('name'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldMessageList;
		string	level('success|info|warning|danger'), verb: false, required: true;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_field{
	fields(18){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	label('姓名|年龄|出生地|国籍'), verb: false, required: true;
		string	locale_key('name|age|birth_place|country'), verb: false, required: true;
		string	parameter_name('name'), verb: false, required: true;
		string	type('text|longtext|date|date_time|money|url|image|password|number|switch|vcode'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formFieldList;
		string	placeholder('姓名就是你身份证上的名字'), verb: false, required: true;
		string	default_value('李一一'), verb: false, required: true;
		string	description('姓名就是你身份证上的名字'), verb: false, required: true;
		string	field_group('基础信息|扩展信息'), verb: false, required: true;
		string	minimum_value('maybe any value'), verb: false, required: true;
		string	maximum_value('a value expression'), verb: false, required: true;
		bool	required('true|false'), verb: false, required: true;
		bool	disabled('true|false'), verb: false, required: true;
		bool	custom_rendering('false'), verb: false, required: true;
		string	candidate_values('|||男,女|高,矮'), verb: false, required: false;
		string	suggest_values('|||男,女|高,矮'), verb: false, required: false;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false

form_action{
	fields(8){
		string	id('ABCDEFGIJK000001'), verb: false, required: true;
		string	label('功能'), verb: false, required: true;
		string	locale_key('name'), verb: false, required: true;
		string	action_key('save|update|remove'), verb: false, required: true;
		string	level('default|warning|danger|primary'), verb: false, required: true;
		string	url('genericFormManager/name/name0002/name0003/'), verb: false, required: true;
		generic_form	form('$(object)'), verb: false, required: true, referenceBy: formActionList;
		int	version('2147483647'), verb: false, required: true;
	}
	references field(0){
	}
} depth=1; isRoot = false




=================================End Report=================================








